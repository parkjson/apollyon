import{isDynamicAbiType as R}from"@latticexyz/schema-type";function we(e){let t=[],c=[];for(let i of e)R(i)?c.push(i):t.push(i);return{staticFields:t,dynamicFields:c}}import{hexToString as Q,sliceHex as X}from"viem";import{assertExhaustive as Y}from"@latticexyz/common/utils";import{arrayAbiTypeToStaticAbiType as Z,staticAbiTypeToByteLength as ee}from"@latticexyz/schema-type";import{getAddress as N,hexToBigInt as W,hexToBool as _}from"viem";import{assertExhaustive as q}from"@latticexyz/common/utils";import{staticAbiTypeToByteLength as G,staticAbiTypeToDefaultValue as J}from"@latticexyz/schema-type";import{MUDError as u}from"@latticexyz/common/errors";import{staticAbiTypeToByteLength as $}from"@latticexyz/schema-type";var l=class extends u{name="InvalidHexValueError";constructor(t){super(`Hex value "${t}" is an odd length (${t.length-2}). It must be an even length.`)}},S=class extends u{name="InvalidHexLengthForSchemaError";constructor(t){super(`Hex value "${t}" has length of ${t.length-2}, but expected length of 64 for a schema.`)}},g=class extends u{name="InvalidHexLengthForPackedCounterError";constructor(t){super(`Hex value "${t}" has length of ${t.length-2}, but expected length of 64 for a packed counter.`)}},A=class extends u{name="InvalidHexLengthForStaticFieldError";constructor(t,c){super(`Hex value "${c}" has length of ${c.length-2}, but expected length of ${$[t]*2} for ${t} type.`)}},v=class extends u{name="InvalidHexLengthForArrayFieldError";constructor(t,c){super(`Hex value "${c}" has length of ${c.length-2}, but expected a multiple of ${$[t]*2} for ${t}[] type.`)}},H=class extends u{name="SchemaStaticLengthMismatchError";constructor(t,c,i){super(`Schema "${t}" static data length (${c}) did not match the summed length of all static fields (${i}). Is \`staticAbiTypeToByteLength\` up to date with Solidity schema types?`)}},F=class extends u{name="PackedCounterLengthMismatchError";constructor(t,c,i){super(`PackedCounter "${t}" total bytes length (${c}) did not match the summed length of all field byte lengths (${i}).`)}};function y(e,t){if(t.length>3&&t.length%2!==0)throw new l(t);if((t.length-2)/2!==G[e])throw new A(e,t);switch(e){case"uint8":case"uint16":case"uint24":case"uint32":case"uint40":case"uint48":case"uint56":case"uint64":case"uint72":case"uint80":case"uint88":case"uint96":case"uint104":case"uint112":case"uint120":case"uint128":case"uint136":case"uint144":case"uint152":case"uint160":case"uint168":case"uint176":case"uint184":case"uint192":case"uint200":case"uint208":case"uint216":case"uint224":case"uint232":case"uint240":case"uint248":case"uint256":case"int8":case"int16":case"int24":case"int32":case"int40":case"int48":case"int56":case"int64":case"int72":case"int80":case"int88":case"int96":case"int104":case"int112":case"int120":case"int128":case"int136":case"int144":case"int152":case"int160":case"int168":case"int176":case"int184":case"int192":case"int200":case"int208":case"int216":case"int224":case"int232":case"int240":case"int248":case"int256":{let i=W(t,{signed:e.startsWith("int")}),a=typeof J[e];if(a==="number")return Number(i);if(a==="bigint")return i;throw new Error(`Unexpected default value type (${a}) for ABI type (${e})`)}case"bytes1":case"bytes2":case"bytes3":case"bytes4":case"bytes5":case"bytes6":case"bytes7":case"bytes8":case"bytes9":case"bytes10":case"bytes11":case"bytes12":case"bytes13":case"bytes14":case"bytes15":case"bytes16":case"bytes17":case"bytes18":case"bytes19":case"bytes20":case"bytes21":case"bytes22":case"bytes23":case"bytes24":case"bytes25":case"bytes26":case"bytes27":case"bytes28":case"bytes29":case"bytes30":case"bytes31":case"bytes32":return t;case"bool":return _(t);case"address":return N(t)}return q(e,`Unsupported static ABI type: ${e}`)}function f(e,t){if(e==="bytes")return t;if(e==="string")return Q(t);if(t.length>3&&t.length%2!==0)throw new l(t);let c=(t.length-2)/2;switch(e){case"uint8[]":case"uint16[]":case"uint24[]":case"uint32[]":case"uint40[]":case"uint48[]":case"uint56[]":case"uint64[]":case"uint72[]":case"uint80[]":case"uint88[]":case"uint96[]":case"uint104[]":case"uint112[]":case"uint120[]":case"uint128[]":case"uint136[]":case"uint144[]":case"uint152[]":case"uint160[]":case"uint168[]":case"uint176[]":case"uint184[]":case"uint192[]":case"uint200[]":case"uint208[]":case"uint216[]":case"uint224[]":case"uint232[]":case"uint240[]":case"uint248[]":case"uint256[]":case"int8[]":case"int16[]":case"int24[]":case"int32[]":case"int40[]":case"int48[]":case"int56[]":case"int64[]":case"int72[]":case"int80[]":case"int88[]":case"int96[]":case"int104[]":case"int112[]":case"int120[]":case"int128[]":case"int136[]":case"int144[]":case"int152[]":case"int160[]":case"int168[]":case"int176[]":case"int184[]":case"int192[]":case"int200[]":case"int208[]":case"int216[]":case"int224[]":case"int232[]":case"int240[]":case"int248[]":case"int256[]":case"bytes1[]":case"bytes2[]":case"bytes3[]":case"bytes4[]":case"bytes5[]":case"bytes6[]":case"bytes7[]":case"bytes8[]":case"bytes9[]":case"bytes10[]":case"bytes11[]":case"bytes12[]":case"bytes13[]":case"bytes14[]":case"bytes15[]":case"bytes16[]":case"bytes17[]":case"bytes18[]":case"bytes19[]":case"bytes20[]":case"bytes21[]":case"bytes22[]":case"bytes23[]":case"bytes24[]":case"bytes25[]":case"bytes26[]":case"bytes27[]":case"bytes28[]":case"bytes29[]":case"bytes30[]":case"bytes31[]":case"bytes32[]":case"bool[]":case"address[]":{let i=Z(e),a=ee[i];if(c%a!==0)throw new v(i,t);return new Array(c/a).fill(void 0).map((r,s)=>{let o=X(t,s*a,(s+1)*a);return y(i,o)})}}return Y(e,`Unsupported dynamic ABI type: ${e}`)}import{isDynamicAbiType as te}from"@latticexyz/schema-type";function rt(e,t){return te(e)?f(e,t):y(e,t)}import{decodeAbiParameters as ie}from"viem";function B(e,t){if(e.staticFields.length!==t.length)throw new Error(`key tuple length ${t.length} does not match key schema length ${e.staticFields.length}`);return t.map((c,i)=>ie([{type:e.staticFields[i]}],c)[0])}function dt(e,t){let c=B({staticFields:Object.values(e),dynamicFields:[]},t);return Object.fromEntries(Object.keys(e).map((i,a)=>[i,c[a]]))}import{staticAbiTypeToByteLength as ae,dynamicAbiTypeToDefaultValue as se}from"@latticexyz/schema-type";import{readHex as V}from"@latticexyz/common";function w(e){if(e.length!==66)throw new g(e);let t=y("uint56",V(e,32-7,32)),c=f("uint40[]",V(e,0,32-7)),i=Object.freeze([...c].reverse()),a=BigInt(i.reduce((n,r)=>n+r,0));if(a!==t)throw new F(e,t,a);return{totalByteLength:t,fieldByteLengths:i}}import{staticAbiTypeToByteLength as ce}from"@latticexyz/schema-type";function T(e){return e.reduce((t,c)=>t+ce[c],0)}import{readHex as D}from"@latticexyz/common";function j(e,t){let c=[],i=0;e.staticFields.forEach(r=>{let s=ae[r],o=y(r,D(t,i,i+s));i+=s,c.push(o)});let a=T(e.staticFields),n=i;if(n!==a&&console.warn("Decoded static data length does not match value schema's expected static data length. Data may get corrupted. Is `getStaticByteLength` outdated?",{expectedLength:a,actualLength:n,bytesOffset:i}),e.dynamicFields.length>0){let r=w(D(t,i,i+32));i+=32,e.dynamicFields.forEach((o,d)=>{let m=r.fieldByteLengths[d];if(m>0){let h=f(o,D(t,i,i+m));i+=m,c.push(h)}else c.push(se[o])});let s=i-32-n;BigInt(s)!==r.totalByteLength&&console.warn("Decoded dynamic data length does not match data layout's expected data length. Data may get corrupted. Did the data layout change?",{expectedLength:r.totalByteLength,actualLength:s,bytesOffset:i})}return c}import{isStaticAbiType as re,isDynamicAbiType as ne}from"@latticexyz/schema-type";function E(e,t){let c=Object.values(e).filter(re),i=Object.values(e).filter(ne),a=j({staticFields:c,dynamicFields:i},t);return Object.fromEntries(Object.keys(e).map((n,r)=>[n,a[r]]))}import{concatHex as oe}from"viem";import{isStaticAbiType as me}from"@latticexyz/schema-type";import{readHex as pe}from"@latticexyz/common";function zt(e,{staticData:t,encodedLengths:c,dynamicData:i}){return E(e,oe([pe(t,0,T(Object.values(e).filter(me))),c,i]))}import{arrayAbiTypeToStaticAbiType as ye,isArrayAbiType as de}from"@latticexyz/schema-type";import{encodePacked as I}from"viem";function p(e,t){if(de(e)&&Array.isArray(t)){let c=ye(e);return t.length===0?"0x":I(t.map(()=>c),t)}return I([e],[t])}import{isStaticAbiType as ue}from"@latticexyz/schema-type";import{encodeAbiParameters as he}from"viem";function O(e,t){return t.map((c,i)=>he([{type:e.staticFields[i]}],[c]))}function Xt(e,t){let c=Object.values(e).filter(ue);return O({staticFields:c,dynamicFields:[]},Object.values(t))}function ei(e,t){let c=t.slice(0,e.staticFields.length),i=t.slice(e.staticFields.length),a=c.map((m,h)=>p(e.staticFields[h],m).replace(/^0x/,"")).join("");if(e.dynamicFields.length===0)return`0x${a}`;let n=i.map((m,h)=>p(e.dynamicFields[h],m).replace(/^0x/,"")),r=n.map(m=>m.length/2).reverse(),s=r.reduce((m,h)=>m+BigInt(h),0n),o=n.join(""),d=`${r.map(m=>p("uint40",m).replace(/^0x/,"")).join("")}${p("uint56",s).replace(/^0x/,"")}`.padStart(64,"0");return`0x${a}${d}${o}`}import{concatHex as Se}from"viem";import{isStaticAbiType as xe,isDynamicAbiType as be}from"@latticexyz/schema-type";import{concatHex as k}from"viem";import{concatHex as le,padHex as fe,size as Te}from"viem";function K(e){let t=e.map(Te).reverse(),c=t.reduce((i,a)=>i+BigInt(a),0n);return fe(le([...t.map(i=>p("uint40",i)),p("uint56",c)]),{size:32,dir:"left"})}function z(e,t){let c=Object.entries(e),i=c.filter(([,o])=>xe(o)),a=c.filter(([,o])=>be(o)),n=i.map(([o,d])=>p(d,t[o])),r=a.map(([o,d])=>p(d,t[o])),s=K(r);return{staticData:k(n),encodedLengths:s,dynamicData:k(r)}}function xi(e,t){let{staticData:c,encodedLengths:i,dynamicData:a}=z(e,t);return Se([c,i,a])}function Si(e){return`0x${[e.staticFieldLengths.reduce((c,i)=>c+i,0).toString(16).padStart(4,"0"),e.staticFieldLengths.length.toString(16).padStart(2,"0"),e.numDynamicFields.toString(16).padStart(2,"0"),...e.staticFieldLengths.map(c=>c.toString(16).padStart(2,"0"))].join("").padEnd(64,"0")}`}import{schemaAbiTypes as C,staticAbiTypeToByteLength as ge}from"@latticexyz/schema-type";import{hexToNumber as x,sliceHex as b}from"viem";function L(e){if(e.length!==66)throw new S(e);let t=x(b(e,0,2)),c=x(b(e,2,3)),i=x(b(e,3,4)),a=[],n=[];for(let s=4;s<4+c;s++){let o=x(b(e,s,s+1));a.push(C[o])}for(let s=4+c;s<4+c+i;s++){let o=x(b(e,s,s+1));n.push(C[o])}let r=a.reduce((s,o)=>s+ge[o],0);if(r!==t)throw console.warn(`Schema "${e}" static data length (${t}) did not match the summed length of all static fields (${r}). Is \`staticAbiTypeToByteLength\` up to date with Solidity schema types?`),new H(e,t,r);return{staticFields:a,dynamicFields:n}}import{sliceHex as U}from"viem";function wi(e){let t=L(U(e,0,32));return{keySchema:L(U(e,32,64)),valueSchema:t}}import{isStaticAbiType as Ae}from"@latticexyz/schema-type";import{schemaAbiTypes as M}from"@latticexyz/schema-type";function P(e){let t=e.staticFields.map(i=>M.indexOf(i)),c=e.dynamicFields.map(i=>M.indexOf(i));return`0x${[T(e.staticFields).toString(16).padStart(4,"0"),e.staticFields.length.toString(16).padStart(2,"0"),e.dynamicFields.length.toString(16).padStart(2,"0"),...t.map(i=>i.toString(16).padStart(2,"0")),...c.map(i=>i.toString(16).padStart(2,"0"))].join("").padEnd(64,"0")}`}function zi(e){return P({staticFields:Object.values(e).filter(Ae),dynamicFields:[]})}function Ui(e,t){return t<e.staticFields.length?e.staticFields[t]:e.dynamicFields[t-e.staticFields.length]}import{isDynamicAbiType as ve,isStaticAbiType as He,staticAbiTypeToByteLength as Fe}from"@latticexyz/schema-type";function Ni(e){let t=Object.values(e).filter(He),c=Object.values(e).filter(ve),i=t.map(n=>Fe[n]);return`0x${[i.reduce((n,r)=>n+r,0).toString(16).padStart(4,"0"),t.length.toString(16).padStart(2,"0"),c.length.toString(16).padStart(2,"0"),...i.map(n=>n.toString(16).padStart(2,"0"))].join("").padEnd(64,"0")}`}import{isDynamicAbiType as Pe,isStaticAbiType as De}from"@latticexyz/schema-type";function Gi(e){return P({staticFields:Object.values(e).filter(De),dynamicFields:Object.values(e).filter(Pe)})}export{l as InvalidHexLengthError,v as InvalidHexLengthForArrayFieldError,g as InvalidHexLengthForPackedCounterError,S as InvalidHexLengthForSchemaError,A as InvalidHexLengthForStaticFieldError,F as PackedCounterLengthMismatchError,H as SchemaStaticLengthMismatchError,we as abiTypesToSchema,f as decodeDynamicField,rt as decodeField,dt as decodeKey,B as decodeKeyTuple,j as decodeRecord,y as decodeStaticField,E as decodeValue,zt as decodeValueArgs,p as encodeField,Xt as encodeKey,O as encodeKeyTuple,ei as encodeRecord,xi as encodeValue,z as encodeValueArgs,Si as fieldLayoutToHex,w as hexToPackedCounter,L as hexToSchema,wi as hexToTableSchema,zi as keySchemaToHex,Ui as schemaIndexToAbiType,P as schemaToHex,T as staticDataLength,Ni as valueSchemaToFieldLayoutHex,Gi as valueSchemaToHex};
//# sourceMappingURL=index.js.map