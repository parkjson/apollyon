{"version":3,"sources":["../mud.config.ts"],"sourcesContent":["import { mudConfig } from \"@latticexyz/world/register\";\n\nexport default mudConfig({\n  worldgenDirectory: \"interfaces\",\n  worldInterfaceName: \"IBaseWorld\",\n  codegenDirectory: \".\",\n  userTypes: {\n    ResourceId: { filePath: \"@latticexyz/store/src/ResourceId.sol\", internalType: \"bytes32\" },\n  },\n  tables: {\n    /************************************************************************\n     *\n     *    KEYS WITH VALUE MODULE\n     *\n     ************************************************************************/\n    KeysWithValue: {\n      directory: \"modules/keyswithvalue/tables\",\n      keySchema: {\n        valueHash: \"bytes32\",\n      },\n      valueSchema: {\n        keysWithValue: \"bytes32[]\", // For now only supports 1 key per value\n      },\n      tableIdArgument: true,\n      storeArgument: true,\n    },\n    /************************************************************************\n     *\n     *    KEYS IN TABLE MODULE\n     *\n     ************************************************************************/\n    KeysInTable: {\n      directory: \"modules/keysintable/tables\",\n      keySchema: { sourceTableId: \"ResourceId\" },\n      valueSchema: {\n        keys0: \"bytes32[]\",\n        keys1: \"bytes32[]\",\n        keys2: \"bytes32[]\",\n        keys3: \"bytes32[]\",\n        keys4: \"bytes32[]\",\n      },\n      storeArgument: true,\n    },\n    UsedKeysIndex: {\n      directory: \"modules/keysintable/tables\",\n      keySchema: {\n        sourceTableId: \"ResourceId\",\n        keysHash: \"bytes32\",\n      },\n      valueSchema: { has: \"bool\", index: \"uint40\" },\n      dataStruct: false,\n      storeArgument: true,\n    },\n    /************************************************************************\n     *\n     *    UNIQUE ENTITY MODULE\n     *\n     ************************************************************************/\n    UniqueEntity: {\n      directory: \"modules/uniqueentity/tables\",\n      keySchema: {},\n      valueSchema: \"uint256\",\n      tableIdArgument: true,\n      storeArgument: true,\n    },\n    /************************************************************************\n     *\n     *    STD DELEGATIONS MODULE\n     *\n     ************************************************************************/\n    CallboundDelegations: {\n      directory: \"modules/std-delegations/tables\",\n      keySchema: {\n        delegator: \"address\",\n        delegatee: \"address\",\n        systemId: \"ResourceId\",\n        callDataHash: \"bytes32\",\n      },\n      valueSchema: {\n        availableCalls: \"uint256\",\n      },\n    },\n    SystemboundDelegations: {\n      directory: \"modules/std-delegations/tables\",\n      keySchema: {\n        delegator: \"address\",\n        delegatee: \"address\",\n        systemId: \"ResourceId\",\n      },\n      valueSchema: {\n        availableCalls: \"uint256\",\n      },\n    },\n    TimeboundDelegations: {\n      directory: \"modules/std-delegations/tables\",\n      keySchema: {\n        delegator: \"address\",\n        delegatee: \"address\",\n      },\n      valueSchema: {\n        maxTimestamp: \"uint256\",\n      },\n    },\n    /************************************************************************\n     *\n     *    PUPPET MODULE\n     *\n     ************************************************************************/\n    PuppetRegistry: {\n      directory: \"modules/puppet/tables\",\n      keySchema: {\n        systemId: \"ResourceId\",\n      },\n      valueSchema: {\n        puppet: \"address\",\n      },\n      tableIdArgument: true,\n    },\n    /************************************************************************\n     *\n     *    TOKEN TABLES (SHARED BY ERC20, ERC721)\n     *\n     ************************************************************************/\n    Balances: {\n      directory: \"modules/tokens/tables\",\n      keySchema: {\n        account: \"address\",\n      },\n      valueSchema: {\n        value: \"uint256\",\n      },\n      tableIdArgument: true,\n    },\n    /************************************************************************\n     *\n     *    ERC20 MODULE\n     *\n     ************************************************************************/\n    ERC20Metadata: {\n      directory: \"modules/erc20-puppet/tables\",\n      keySchema: {},\n      valueSchema: {\n        decimals: \"uint8\",\n        name: \"string\",\n        symbol: \"string\",\n      },\n      tableIdArgument: true,\n    },\n    Allowances: {\n      directory: \"modules/erc20-puppet/tables\",\n      keySchema: {\n        account: \"address\",\n        spender: \"address\",\n      },\n      valueSchema: {\n        value: \"uint256\",\n      },\n      tableIdArgument: true,\n    },\n    TotalSupply: {\n      directory: \"modules/erc20-puppet/tables\",\n      keySchema: {},\n      valueSchema: {\n        totalSupply: \"uint256\",\n      },\n      tableIdArgument: true,\n    },\n    ERC20Registry: {\n      directory: \"modules/erc20-puppet/tables\",\n      keySchema: {\n        namespaceId: \"ResourceId\",\n      },\n      valueSchema: {\n        erc20Address: \"address\",\n      },\n      tableIdArgument: true,\n    },\n    /************************************************************************\n     *\n     *    ERC721 MODULE\n     *\n     ************************************************************************/\n    ERC721Metadata: {\n      directory: \"modules/erc721-puppet/tables\",\n      keySchema: {},\n      valueSchema: {\n        name: \"string\",\n        symbol: \"string\",\n        baseURI: \"string\",\n      },\n      tableIdArgument: true,\n    },\n    TokenURI: {\n      directory: \"modules/erc721-puppet/tables\",\n      keySchema: {\n        tokenId: \"uint256\",\n      },\n      valueSchema: {\n        tokenURI: \"string\",\n      },\n      tableIdArgument: true,\n    },\n    Owners: {\n      directory: \"modules/erc721-puppet/tables\",\n      keySchema: {\n        tokenId: \"uint256\",\n      },\n      valueSchema: {\n        owner: \"address\",\n      },\n      tableIdArgument: true,\n    },\n    TokenApproval: {\n      directory: \"modules/erc721-puppet/tables\",\n      keySchema: {\n        tokenId: \"uint256\",\n      },\n      valueSchema: {\n        account: \"address\",\n      },\n      tableIdArgument: true,\n    },\n    OperatorApproval: {\n      directory: \"modules/erc721-puppet/tables\",\n      keySchema: {\n        owner: \"address\",\n        operator: \"address\",\n      },\n      valueSchema: {\n        approved: \"bool\",\n      },\n      tableIdArgument: true,\n    },\n    ERC721Registry: {\n      directory: \"modules/erc721-puppet/tables\",\n      keySchema: {\n        namespaceId: \"ResourceId\",\n      },\n      valueSchema: {\n        erc20Address: \"address\",\n      },\n      tableIdArgument: true,\n    },\n  },\n  excludeSystems: [\"UniqueEntitySystem\", \"PuppetFactorySystem\", \"ERC20System\", \"ERC721System\"],\n});\n"],"mappings":"AAAA,OAAS,aAAAA,MAAiB,6BAE1B,IAAOC,EAAQD,EAAU,CACvB,kBAAmB,aACnB,mBAAoB,aACpB,iBAAkB,IAClB,UAAW,CACT,WAAY,CAAE,SAAU,uCAAwC,aAAc,SAAU,CAC1F,EACA,OAAQ,CAMN,cAAe,CACb,UAAW,+BACX,UAAW,CACT,UAAW,SACb,EACA,YAAa,CACX,cAAe,WACjB,EACA,gBAAiB,GACjB,cAAe,EACjB,EAMA,YAAa,CACX,UAAW,6BACX,UAAW,CAAE,cAAe,YAAa,EACzC,YAAa,CACX,MAAO,YACP,MAAO,YACP,MAAO,YACP,MAAO,YACP,MAAO,WACT,EACA,cAAe,EACjB,EACA,cAAe,CACb,UAAW,6BACX,UAAW,CACT,cAAe,aACf,SAAU,SACZ,EACA,YAAa,CAAE,IAAK,OAAQ,MAAO,QAAS,EAC5C,WAAY,GACZ,cAAe,EACjB,EAMA,aAAc,CACZ,UAAW,8BACX,UAAW,CAAC,EACZ,YAAa,UACb,gBAAiB,GACjB,cAAe,EACjB,EAMA,qBAAsB,CACpB,UAAW,iCACX,UAAW,CACT,UAAW,UACX,UAAW,UACX,SAAU,aACV,aAAc,SAChB,EACA,YAAa,CACX,eAAgB,SAClB,CACF,EACA,uBAAwB,CACtB,UAAW,iCACX,UAAW,CACT,UAAW,UACX,UAAW,UACX,SAAU,YACZ,EACA,YAAa,CACX,eAAgB,SAClB,CACF,EACA,qBAAsB,CACpB,UAAW,iCACX,UAAW,CACT,UAAW,UACX,UAAW,SACb,EACA,YAAa,CACX,aAAc,SAChB,CACF,EAMA,eAAgB,CACd,UAAW,wBACX,UAAW,CACT,SAAU,YACZ,EACA,YAAa,CACX,OAAQ,SACV,EACA,gBAAiB,EACnB,EAMA,SAAU,CACR,UAAW,wBACX,UAAW,CACT,QAAS,SACX,EACA,YAAa,CACX,MAAO,SACT,EACA,gBAAiB,EACnB,EAMA,cAAe,CACb,UAAW,8BACX,UAAW,CAAC,EACZ,YAAa,CACX,SAAU,QACV,KAAM,SACN,OAAQ,QACV,EACA,gBAAiB,EACnB,EACA,WAAY,CACV,UAAW,8BACX,UAAW,CACT,QAAS,UACT,QAAS,SACX,EACA,YAAa,CACX,MAAO,SACT,EACA,gBAAiB,EACnB,EACA,YAAa,CACX,UAAW,8BACX,UAAW,CAAC,EACZ,YAAa,CACX,YAAa,SACf,EACA,gBAAiB,EACnB,EACA,cAAe,CACb,UAAW,8BACX,UAAW,CACT,YAAa,YACf,EACA,YAAa,CACX,aAAc,SAChB,EACA,gBAAiB,EACnB,EAMA,eAAgB,CACd,UAAW,+BACX,UAAW,CAAC,EACZ,YAAa,CACX,KAAM,SACN,OAAQ,SACR,QAAS,QACX,EACA,gBAAiB,EACnB,EACA,SAAU,CACR,UAAW,+BACX,UAAW,CACT,QAAS,SACX,EACA,YAAa,CACX,SAAU,QACZ,EACA,gBAAiB,EACnB,EACA,OAAQ,CACN,UAAW,+BACX,UAAW,CACT,QAAS,SACX,EACA,YAAa,CACX,MAAO,SACT,EACA,gBAAiB,EACnB,EACA,cAAe,CACb,UAAW,+BACX,UAAW,CACT,QAAS,SACX,EACA,YAAa,CACX,QAAS,SACX,EACA,gBAAiB,EACnB,EACA,iBAAkB,CAChB,UAAW,+BACX,UAAW,CACT,MAAO,UACP,SAAU,SACZ,EACA,YAAa,CACX,SAAU,MACZ,EACA,gBAAiB,EACnB,EACA,eAAgB,CACd,UAAW,+BACX,UAAW,CACT,YAAa,YACf,EACA,YAAa,CACX,aAAc,SAChB,EACA,gBAAiB,EACnB,CACF,EACA,eAAgB,CAAC,qBAAsB,sBAAuB,cAAe,cAAc,CAC7F,CAAC","names":["mudConfig","mud_config_default"]}