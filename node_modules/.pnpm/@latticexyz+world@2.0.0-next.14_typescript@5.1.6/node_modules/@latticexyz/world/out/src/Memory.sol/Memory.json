{
  "abi": [],
  "bytecode": {
    "object": "0x602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000815000a",
    "sourceMap": "282:1703:66:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;282:1703:66;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000815000a",
    "sourceMap": "282:1703:66:-:0;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides low-level memory operations with safety checks.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Memory Operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for performing low-level memory operations.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@latticexyz/store/src/Memory.sol\":\"Memory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[\":@latticexyz/=node_modules/@latticexyz/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"node_modules/@latticexyz/store/src/Memory.sol\":{\"keccak256\":\"0x69295976e61a1a108d1b4d6eb497b238730309f3047c4320d48e01a0ce8d4ec7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://559c451b21fb9dd4fec27b41bef42f4362f1e7ebb7992106d548b9d4f733b3e5\",\"dweb:/ipfs/QmeSE7YTW5zUrfZYFVb2pFnDe3XxiT8XNecfwC3wfpxCRv\"]},\"node_modules/@latticexyz/store/src/leftMask.sol\":{\"keccak256\":\"0xd0360567e4d77c6a8e3d8a5f4bf3653ccde4d268674c50988d55695dc6193f6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53e6bcb53fcb08ee9426225fdab7c41df91e12cb4f80d92895a6117338627401\",\"dweb:/ipfs/QmeLcaPGeMBpNSTSsPYK3PHpzKuGMjuitCweAWcoXK2mXr\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@latticexyz/=node_modules/@latticexyz/",
        "ds-test/=node_modules/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 3000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "node_modules/@latticexyz/store/src/Memory.sol": "Memory"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@latticexyz/store/src/Memory.sol": {
        "keccak256": "0x69295976e61a1a108d1b4d6eb497b238730309f3047c4320d48e01a0ce8d4ec7",
        "urls": [
          "bzz-raw://559c451b21fb9dd4fec27b41bef42f4362f1e7ebb7992106d548b9d4f733b3e5",
          "dweb:/ipfs/QmeSE7YTW5zUrfZYFVb2pFnDe3XxiT8XNecfwC3wfpxCRv"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/store/src/leftMask.sol": {
        "keccak256": "0xd0360567e4d77c6a8e3d8a5f4bf3653ccde4d268674c50988d55695dc6193f6f",
        "urls": [
          "bzz-raw://53e6bcb53fcb08ee9426225fdab7c41df91e12cb4f80d92895a6117338627401",
          "dweb:/ipfs/QmeLcaPGeMBpNSTSsPYK3PHpzKuGMjuitCweAWcoXK2mXr"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@latticexyz/store/src/Memory.sol",
    "id": 63365,
    "exportedSymbols": {
      "Memory": [
        63364
      ],
      "leftMask": [
        111863
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1954:66",
    "nodes": [
      {
        "id": 63308,
        "nodeType": "PragmaDirective",
        "src": "32:25:66",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 63310,
        "nodeType": "ImportDirective",
        "src": "59:42:66",
        "nodes": [],
        "absolutePath": "node_modules/@latticexyz/store/src/leftMask.sol",
        "file": "./leftMask.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63365,
        "sourceUnit": 111864,
        "symbolAliases": [
          {
            "foreign": {
              "id": 63309,
              "name": "leftMask",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 111863,
              "src": "68:8:66",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 63364,
        "nodeType": "ContractDefinition",
        "src": "282:1703:66",
        "nodes": [
          {
            "id": 63321,
            "nodeType": "FunctionDefinition",
            "src": "690:151:66",
            "nodes": [],
            "body": {
              "id": 63320,
              "nodeType": "Block",
              "src": "776:65:66",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nativeSrc": "791:46:66",
                    "nodeType": "YulBlock",
                    "src": "791:46:66",
                    "statements": [
                      {
                        "nativeSrc": "799:32:66",
                        "nodeType": "YulAssignment",
                        "src": "799:32:66",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nativeSrc": "820:4:66",
                              "nodeType": "YulIdentifier",
                              "src": "820:4:66"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "826:4:66",
                              "nodeType": "YulLiteral",
                              "src": "826:4:66",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nativeSrc": "816:3:66",
                            "nodeType": "YulIdentifier",
                            "src": "816:3:66"
                          },
                          "nativeSrc": "816:15:66",
                          "nodeType": "YulFunctionCall",
                          "src": "816:15:66"
                        },
                        "variableNames": [
                          {
                            "name": "memoryPointer",
                            "nativeSrc": "799:13:66",
                            "nodeType": "YulIdentifier",
                            "src": "799:13:66"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 63314,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "820:4:66",
                      "valueSize": 1
                    },
                    {
                      "declaration": 63317,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "799:13:66",
                      "valueSize": 1
                    }
                  ],
                  "id": 63319,
                  "nodeType": "InlineAssembly",
                  "src": "782:55:66"
                }
              ]
            },
            "documentation": {
              "id": 63312,
              "nodeType": "StructuredDocumentation",
              "src": "301:386:66",
              "text": " @notice Gets the actual data pointer of dynamic arrays.\n @dev In dynamic arrays, the first word stores the length of the data, after which comes the actual data.\n Example: 0x40 0x01 0x02\n          ^len ^data\n @param data The dynamic bytes data from which to get the pointer.\n @return memoryPointer The pointer to the actual data (skipping the length)."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "dataPointer",
            "nameLocation": "699:11:66",
            "parameters": {
              "id": 63315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63314,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "724:4:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 63321,
                  "src": "711:17:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 63313,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:5:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "710:19:66"
            },
            "returnParameters": {
              "id": 63318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63317,
                  "mutability": "mutable",
                  "name": "memoryPointer",
                  "nameLocation": "761:13:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 63321,
                  "src": "753:21:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63316,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "753:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "752:23:66"
            },
            "scope": 63364,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 63363,
            "nodeType": "FunctionDefinition",
            "src": "1161:822:66",
            "nodes": [],
            "body": {
              "id": 63362,
              "nodeType": "Block",
              "src": "1245:738:66",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 63348,
                    "nodeType": "Block",
                    "src": "1299:303:66",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "1357:55:66",
                          "nodeType": "YulBlock",
                          "src": "1357:55:66",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "toPointer",
                                    "nativeSrc": "1374:9:66",
                                    "nodeType": "YulIdentifier",
                                    "src": "1374:9:66"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "fromPointer",
                                        "nativeSrc": "1391:11:66",
                                        "nodeType": "YulIdentifier",
                                        "src": "1391:11:66"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "1385:5:66",
                                      "nodeType": "YulIdentifier",
                                      "src": "1385:5:66"
                                    },
                                    "nativeSrc": "1385:18:66",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1385:18:66"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1367:6:66",
                                  "nodeType": "YulIdentifier",
                                  "src": "1367:6:66"
                                },
                                "nativeSrc": "1367:37:66",
                                "nodeType": "YulFunctionCall",
                                "src": "1367:37:66"
                              },
                              "nativeSrc": "1367:37:66",
                              "nodeType": "YulExpressionStatement",
                              "src": "1367:37:66"
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 63324,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1391:11:66",
                            "valueSize": 1
                          },
                          {
                            "declaration": 63326,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1374:9:66",
                            "valueSize": 1
                          }
                        ],
                        "id": 63334,
                        "nodeType": "InlineAssembly",
                        "src": "1348:64:66"
                      },
                      {
                        "id": 63347,
                        "nodeType": "UncheckedBlock",
                        "src": "1503:93:66",
                        "statements": [
                          {
                            "expression": {
                              "id": 63337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 63335,
                                "name": "toPointer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63326,
                                "src": "1523:9:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "+=",
                              "rightHandSide": {
                                "hexValue": "3332",
                                "id": 63336,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1536:2:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "32"
                              },
                              "src": "1523:15:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 63338,
                            "nodeType": "ExpressionStatement",
                            "src": "1523:15:66"
                          },
                          {
                            "expression": {
                              "id": 63341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 63339,
                                "name": "fromPointer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63324,
                                "src": "1548:11:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "+=",
                              "rightHandSide": {
                                "hexValue": "3332",
                                "id": 63340,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1563:2:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "32"
                              },
                              "src": "1548:17:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 63342,
                            "nodeType": "ExpressionStatement",
                            "src": "1548:17:66"
                          },
                          {
                            "expression": {
                              "id": 63345,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 63343,
                                "name": "length",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63328,
                                "src": "1575:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "-=",
                              "rightHandSide": {
                                "hexValue": "3332",
                                "id": 63344,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1585:2:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "32"
                              },
                              "src": "1575:12:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 63346,
                            "nodeType": "ExpressionStatement",
                            "src": "1575:12:66"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 63333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 63331,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63328,
                      "src": "1285:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "3332",
                      "id": 63332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1295:2:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_32_by_1",
                        "typeString": "int_const 32"
                      },
                      "value": "32"
                    },
                    "src": "1285:12:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63349,
                  "nodeType": "WhileStatement",
                  "src": "1278:324:66"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 63352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 63350,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63328,
                      "src": "1611:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 63351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1621:1:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1611:11:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63354,
                  "nodeType": "IfStatement",
                  "src": "1607:24:66",
                  "trueBody": {
                    "functionReturnParameters": 63330,
                    "id": 63353,
                    "nodeType": "Return",
                    "src": "1624:7:66"
                  }
                },
                {
                  "assignments": [
                    63356
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63356,
                      "mutability": "mutable",
                      "name": "mask",
                      "nameLocation": "1678:4:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 63362,
                      "src": "1670:12:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 63355,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1670:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63360,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 63358,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63328,
                        "src": "1694:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 63357,
                      "name": "leftMask",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111863,
                      "src": "1685:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256)"
                      }
                    },
                    "id": 63359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1685:16:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1670:31:66"
                },
                {
                  "AST": {
                    "nativeSrc": "1755:224:66",
                    "nodeType": "YulBlock",
                    "src": "1755:224:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "toPointer",
                              "nativeSrc": "1779:9:66",
                              "nodeType": "YulIdentifier",
                              "src": "1779:9:66"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "fromPointer",
                                          "nativeSrc": "1855:11:66",
                                          "nodeType": "YulIdentifier",
                                          "src": "1855:11:66"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nativeSrc": "1849:5:66",
                                        "nodeType": "YulIdentifier",
                                        "src": "1849:5:66"
                                      },
                                      "nativeSrc": "1849:18:66",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1849:18:66"
                                    },
                                    {
                                      "name": "mask",
                                      "nativeSrc": "1869:4:66",
                                      "nodeType": "YulIdentifier",
                                      "src": "1869:4:66"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nativeSrc": "1845:3:66",
                                    "nodeType": "YulIdentifier",
                                    "src": "1845:3:66"
                                  },
                                  "nativeSrc": "1845:29:66",
                                  "nodeType": "YulFunctionCall",
                                  "src": "1845:29:66"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "toPointer",
                                          "nativeSrc": "1933:9:66",
                                          "nodeType": "YulIdentifier",
                                          "src": "1933:9:66"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nativeSrc": "1927:5:66",
                                        "nodeType": "YulIdentifier",
                                        "src": "1927:5:66"
                                      },
                                      "nativeSrc": "1927:16:66",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1927:16:66"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "mask",
                                          "nativeSrc": "1949:4:66",
                                          "nodeType": "YulIdentifier",
                                          "src": "1949:4:66"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "not",
                                        "nativeSrc": "1945:3:66",
                                        "nodeType": "YulIdentifier",
                                        "src": "1945:3:66"
                                      },
                                      "nativeSrc": "1945:9:66",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1945:9:66"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nativeSrc": "1923:3:66",
                                    "nodeType": "YulIdentifier",
                                    "src": "1923:3:66"
                                  },
                                  "nativeSrc": "1923:32:66",
                                  "nodeType": "YulFunctionCall",
                                  "src": "1923:32:66"
                                }
                              ],
                              "functionName": {
                                "name": "or",
                                "nativeSrc": "1798:2:66",
                                "nodeType": "YulIdentifier",
                                "src": "1798:2:66"
                              },
                              "nativeSrc": "1798:167:66",
                              "nodeType": "YulFunctionCall",
                              "src": "1798:167:66"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nativeSrc": "1763:6:66",
                            "nodeType": "YulIdentifier",
                            "src": "1763:6:66"
                          },
                          "nativeSrc": "1763:210:66",
                          "nodeType": "YulFunctionCall",
                          "src": "1763:210:66"
                        },
                        "nativeSrc": "1763:210:66",
                        "nodeType": "YulExpressionStatement",
                        "src": "1763:210:66"
                      }
                    ]
                  },
                  "documentation": "@solidity memory-safe-assembly",
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 63324,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1855:11:66",
                      "valueSize": 1
                    },
                    {
                      "declaration": 63356,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1869:4:66",
                      "valueSize": 1
                    },
                    {
                      "declaration": 63356,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1949:4:66",
                      "valueSize": 1
                    },
                    {
                      "declaration": 63326,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1779:9:66",
                      "valueSize": 1
                    },
                    {
                      "declaration": 63326,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1933:9:66",
                      "valueSize": 1
                    }
                  ],
                  "id": 63361,
                  "nodeType": "InlineAssembly",
                  "src": "1746:233:66"
                }
              ]
            },
            "documentation": {
              "id": 63322,
              "nodeType": "StructuredDocumentation",
              "src": "845:313:66",
              "text": " @notice Copies memory from one location to another.\n @dev Safely copies memory in chunks of 32 bytes, then handles any residual bytes.\n @param fromPointer The memory location to copy from.\n @param toPointer The memory location to copy to.\n @param length The number of bytes to copy."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "copy",
            "nameLocation": "1170:4:66",
            "parameters": {
              "id": 63329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63324,
                  "mutability": "mutable",
                  "name": "fromPointer",
                  "nameLocation": "1183:11:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 63363,
                  "src": "1175:19:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63323,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1175:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63326,
                  "mutability": "mutable",
                  "name": "toPointer",
                  "nameLocation": "1204:9:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 63363,
                  "src": "1196:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1196:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63328,
                  "mutability": "mutable",
                  "name": "length",
                  "nameLocation": "1223:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 63363,
                  "src": "1215:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1215:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1174:56:66"
            },
            "returnParameters": {
              "id": 63330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1245:0:66"
            },
            "scope": 63364,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Memory",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 63311,
          "nodeType": "StructuredDocumentation",
          "src": "103:178:66",
          "text": " @title Memory Operations\n @notice A library for performing low-level memory operations.\n @dev This library provides low-level memory operations with safety checks."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          63364
        ],
        "name": "Memory",
        "nameLocation": "290:6:66",
        "scope": 63365,
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "license": "MIT"
  },
  "id": 66
}