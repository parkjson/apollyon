{
  "abi": [
    {
      "inputs": [],
      "name": "StoreHook_NotImplemented",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "FieldLayout",
          "name": "fieldLayout",
          "type": "bytes32"
        }
      ],
      "name": "onAfterDeleteRecord",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes",
          "name": "staticData",
          "type": "bytes"
        },
        {
          "internalType": "PackedCounter",
          "name": "encodedLengths",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "dynamicData",
          "type": "bytes"
        },
        {
          "internalType": "FieldLayout",
          "name": "fieldLayout",
          "type": "bytes32"
        }
      ],
      "name": "onAfterSetRecord",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "dynamicFieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "uint40",
          "name": "startWithinField",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "deleteCount",
          "type": "uint40"
        },
        {
          "internalType": "PackedCounter",
          "name": "encodedLengths",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onAfterSpliceDynamicData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint48",
          "name": "start",
          "type": "uint48"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onAfterSpliceStaticData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "FieldLayout",
          "name": "fieldLayout",
          "type": "bytes32"
        }
      ],
      "name": "onBeforeDeleteRecord",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes",
          "name": "staticData",
          "type": "bytes"
        },
        {
          "internalType": "PackedCounter",
          "name": "encodedLengths",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "dynamicData",
          "type": "bytes"
        },
        {
          "internalType": "FieldLayout",
          "name": "fieldLayout",
          "type": "bytes32"
        }
      ],
      "name": "onBeforeSetRecord",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "dynamicFieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "uint40",
          "name": "startWithinField",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "deleteCount",
          "type": "uint40"
        },
        {
          "internalType": "PackedCounter",
          "name": "encodedLengths",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onBeforeSpliceDynamicData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint48",
          "name": "start",
          "type": "uint48"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onBeforeSpliceStaticData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "onAfterDeleteRecord(bytes32,bytes32[],bytes32)": "83b5c95b",
    "onAfterSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)": "5b28cdaf",
    "onAfterSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)": "63584533",
    "onAfterSpliceStaticData(bytes32,bytes32[],uint48,bytes)": "a8ba8721",
    "onBeforeDeleteRecord(bytes32,bytes32[],bytes32)": "9faeaf45",
    "onBeforeSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)": "57066c9c",
    "onBeforeSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)": "55eb5a28",
    "onBeforeSpliceStaticData(bytes32,bytes32[],uint48,bytes)": "964f667d",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"StoreHook_NotImplemented\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"name\":\"onAfterDeleteRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"staticData\",\"type\":\"bytes\"},{\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dynamicData\",\"type\":\"bytes\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"name\":\"onAfterSetRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"dynamicFieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"uint40\",\"name\":\"startWithinField\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"deleteCount\",\"type\":\"uint40\"},{\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onAfterSpliceDynamicData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onAfterSpliceStaticData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"name\":\"onBeforeDeleteRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"staticData\",\"type\":\"bytes\"},{\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dynamicData\",\"type\":\"bytes\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"name\":\"onBeforeSetRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"dynamicFieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"uint40\",\"name\":\"startWithinField\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"deleteCount\",\"type\":\"uint40\"},{\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onBeforeSpliceDynamicData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onBeforeSpliceStaticData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementers should override the hook functions to provide custom logic. If any hooks are activated without overriding these functions, they revert.\",\"kind\":\"dev\",\"methods\":{\"onAfterDeleteRecord(bytes32,bytes32[],bytes32)\":{\"details\":\"This function should be overridden to provide custom logic.\",\"params\":{\"fieldLayout\":\"The layout of the field, see FieldLayout.sol.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"tableId\":\"The ID of the table where the record is to be deleted.\"}},\"onAfterSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)\":{\"details\":\"This function should be overridden to provide custom logic.\",\"params\":{\"dynamicData\":\"The dynamic data of the record.\",\"encodedLengths\":\"The encoded lengths of the dynamic data of the record.\",\"fieldLayout\":\"The layout of the field, see FieldLayout.sol.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"staticData\":\"The static data of the record.\",\"tableId\":\"The ID of the table where the record was set.\"}},\"onAfterSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)\":{\"details\":\"This function should be overridden to provide custom logic. Splice operations in dynamic data always reach the end of the dynamic data to avoid shifting data after the inserted or deleted data.\",\"params\":{\"data\":\"The data to be inserted into the dynamic data of the record at the start byte.\",\"deleteCount\":\"The number of bytes to delete in the dynamic data of the record.\",\"dynamicFieldIndex\":\"The index of the dynamic field.\",\"encodedLengths\":\"The encoded lengths of the dynamic data of the record.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"startWithinField\":\"The start byte position within the field for splicing.\",\"tableId\":\"The ID of the table where the data is to be spliced.\"}},\"onAfterSpliceStaticData(bytes32,bytes32[],uint48,bytes)\":{\"details\":\"This function should be overridden to provide custom logic. Splice operations in static data always overwrite data starting at the start position, so the total length of the data remains the same and no data is shifted.\",\"params\":{\"data\":\"The data to be written to the static data of the record at the start byte.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"start\":\"The start byte position for splicing.\",\"tableId\":\"The ID of the table where the data is to be spliced.\"}},\"onBeforeDeleteRecord(bytes32,bytes32[],bytes32)\":{\"details\":\"This function should be overridden to provide custom logic.\",\"params\":{\"fieldLayout\":\"The layout of the field, see FieldLayout.sol.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"tableId\":\"The ID of the table where the record is to be deleted.\"}},\"onBeforeSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)\":{\"details\":\"This function should be overridden to provide custom logic.\",\"params\":{\"dynamicData\":\"The dynamic data of the record.\",\"encodedLengths\":\"The encoded lengths of the dynamic data of the record.\",\"fieldLayout\":\"The layout of the field, see FieldLayout.sol.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"staticData\":\"The static data of the record.\",\"tableId\":\"The ID of the table where the record is to be set.\"}},\"onBeforeSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)\":{\"details\":\"This function should be overridden to provide custom logic. Splice operations in dynamic data always reach the end of the dynamic data to avoid shifting data after the inserted or deleted data.\",\"params\":{\"data\":\"The data to be inserted into the dynamic data of the record at the start byte.\",\"deleteCount\":\"The number of bytes to delete in the dynamic data of the record.\",\"dynamicFieldIndex\":\"The index of the dynamic field.\",\"encodedLengths\":\"The encoded lengths of the dynamic data of the record.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"startWithinField\":\"The start byte position within the field for splicing.\",\"tableId\":\"The ID of the table where the data is to be spliced.\"}},\"onBeforeSpliceStaticData(bytes32,bytes32[],uint48,bytes)\":{\"details\":\"This function should be overridden to provide custom logic. Splice operations in static data always overwrite data starting at the start position, so the total length of the data remains the same and no data is shifted.\",\"params\":{\"data\":\"The data to be written to the static data of the record at the start byte.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"start\":\"The start byte position for splicing.\",\"tableId\":\"The ID of the table where the data is to be spliced.\"}},\"supportsInterface(bytes4)\":{\"details\":\"This function is a part of the ERC-165 standard.\",\"params\":{\"interfaceId\":\"The ID of the interface to check.\"},\"returns\":{\"_0\":\"true if the interface is supported, false otherwise.\"}}},\"title\":\"Store Hook Contract\",\"version\":1},\"userdoc\":{\"errors\":{\"StoreHook_NotImplemented()\":[{\"notice\":\"Error emitted when a function is not implemented.\"}]},\"kind\":\"user\",\"methods\":{\"onAfterDeleteRecord(bytes32,bytes32[],bytes32)\":{\"notice\":\"Hook that runs after deleting a record.\"},\"onAfterSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)\":{\"notice\":\"Hook that runs after setting a record.\"},\"onAfterSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)\":{\"notice\":\"Hook that runs after splicing dynamic (variable length) data.\"},\"onAfterSpliceStaticData(bytes32,bytes32[],uint48,bytes)\":{\"notice\":\"Hook that runs after splicing static (fixed length) data.\"},\"onBeforeDeleteRecord(bytes32,bytes32[],bytes32)\":{\"notice\":\"Hook that runs before deleting a record.\"},\"onBeforeSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)\":{\"notice\":\"Hook that runs before setting a record.\"},\"onBeforeSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)\":{\"notice\":\"Hook that runs before splicing dynamic (variable length) data.\"},\"onBeforeSpliceStaticData(bytes32,bytes32[],uint48,bytes)\":{\"notice\":\"Hook that runs before splicing static (fixed length) data.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Check if the interface is supported.\"}},\"notice\":\"This abstract contract provides hooks for the storage operations.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/runner/work/mud/mud/packages/store/src/StoreHook.sol\":\"StoreHook\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[\":@latticexyz/=node_modules/@latticexyz/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"/home/runner/work/mud/mud/packages/store/src/FieldLayout.sol\":{\"keccak256\":\"0x2a0536cd6cecc479d0b81d5aad6380231f4d6873beadc54814d801c2036b02c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e07c041e19146a9ec258cc700a450b4d49440202895eb12f3bb17508427c23ba\",\"dweb:/ipfs/QmXoqrCGDSkuFgNSMURRFdjokjREL78nLDzNaUi6rjefy9\"]},\"/home/runner/work/mud/mud/packages/store/src/IERC165.sol\":{\"keccak256\":\"0x2bbc3c43400c15a91a5cb35430a91309cb64a4d13a0a170eacec71dcf334feaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f44dfc9605067de539de07a76a34bf469faa9e6dad8c192abafc2e05860c7dd2\",\"dweb:/ipfs/QmX8xgG6XWokM7YFwFZvmMhuh1uhkSjxCMD2oTHjUVdapb\"]},\"/home/runner/work/mud/mud/packages/store/src/IStoreHook.sol\":{\"keccak256\":\"0xa6777c7868333996ad9c61a94457dcac702d8d7445a104dfdc86543d25e7470e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6268a16449d7529a94746d0103670dd0e38faf5117bf914fb01da9947ab44c2e\",\"dweb:/ipfs/QmaSfbx1QRA3jw2K8bGkQTw4CTGPUzNqnCJW7LwaFUJCXy\"]},\"/home/runner/work/mud/mud/packages/store/src/PackedCounter.sol\":{\"keccak256\":\"0x44ddfa9eb8a861462c550f0a9d66c40c68acdb347a61fa765949608407a2c7fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47ee957f4b19cab9e20bf5fc569c015eca13852fb3351f2a105a8be9c48204c0\",\"dweb:/ipfs/QmNkyzDobVQLoq9BtQ8HtgsPLiqnmi97EZx1wsu6wp8nKH\"]},\"/home/runner/work/mud/mud/packages/store/src/ResourceId.sol\":{\"keccak256\":\"0x40983c580b8958e55db4520095934a535e98544ffe8228327e598973eb6647ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839d658fa2bb2b1f09a08149d2bf0c26a26c301ad2dda8154fc99458085a695d\",\"dweb:/ipfs/Qmd5jHHYrgqraPqF8bjzT4xyjsoPk8K7pkxXLLfz6MRT6d\"]},\"/home/runner/work/mud/mud/packages/store/src/StoreHook.sol\":{\"keccak256\":\"0xd267686b3961da4d9a39e2cd39b89d7074ed27a516a03085bb69a6efea0a424e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8c96a99b6c8dab12799165b888ed5c647638a1114bec138dd65ad46c6d1cf34\",\"dweb:/ipfs/QmaMAkfEmRivfHts72hfYiiQiVc15QSRsXkPHM3d2AbFjf\"]},\"/home/runner/work/mud/mud/packages/store/src/constants.sol\":{\"keccak256\":\"0x9e37c64c119ef07ad914bc589ee3f6d67946ab95877978c1ee3e2c1ffae07076\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fad47e542025382aa28e8171253e34f93b2f149434b67a26989542d70218793\",\"dweb:/ipfs/QmW6JsKNwPc6oAMrgcikgR2EPwMUtQANiuZSQSGCd29HHC\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "StoreHook_NotImplemented"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "FieldLayout",
              "name": "fieldLayout",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onAfterDeleteRecord"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes",
              "name": "staticData",
              "type": "bytes"
            },
            {
              "internalType": "PackedCounter",
              "name": "encodedLengths",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "dynamicData",
              "type": "bytes"
            },
            {
              "internalType": "FieldLayout",
              "name": "fieldLayout",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onAfterSetRecord"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "dynamicFieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "uint40",
              "name": "startWithinField",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "deleteCount",
              "type": "uint40"
            },
            {
              "internalType": "PackedCounter",
              "name": "encodedLengths",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onAfterSpliceDynamicData"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onAfterSpliceStaticData"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "FieldLayout",
              "name": "fieldLayout",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onBeforeDeleteRecord"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes",
              "name": "staticData",
              "type": "bytes"
            },
            {
              "internalType": "PackedCounter",
              "name": "encodedLengths",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "dynamicData",
              "type": "bytes"
            },
            {
              "internalType": "FieldLayout",
              "name": "fieldLayout",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onBeforeSetRecord"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "dynamicFieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "uint40",
              "name": "startWithinField",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "deleteCount",
              "type": "uint40"
            },
            {
              "internalType": "PackedCounter",
              "name": "encodedLengths",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onBeforeSpliceDynamicData"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onBeforeSpliceStaticData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "onAfterDeleteRecord(bytes32,bytes32[],bytes32)": {
            "details": "This function should be overridden to provide custom logic.",
            "params": {
              "fieldLayout": "The layout of the field, see FieldLayout.sol.",
              "keyTuple": "An array representing the composite key for the record.",
              "tableId": "The ID of the table where the record is to be deleted."
            }
          },
          "onAfterSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)": {
            "details": "This function should be overridden to provide custom logic.",
            "params": {
              "dynamicData": "The dynamic data of the record.",
              "encodedLengths": "The encoded lengths of the dynamic data of the record.",
              "fieldLayout": "The layout of the field, see FieldLayout.sol.",
              "keyTuple": "An array representing the composite key for the record.",
              "staticData": "The static data of the record.",
              "tableId": "The ID of the table where the record was set."
            }
          },
          "onAfterSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)": {
            "details": "This function should be overridden to provide custom logic. Splice operations in dynamic data always reach the end of the dynamic data to avoid shifting data after the inserted or deleted data.",
            "params": {
              "data": "The data to be inserted into the dynamic data of the record at the start byte.",
              "deleteCount": "The number of bytes to delete in the dynamic data of the record.",
              "dynamicFieldIndex": "The index of the dynamic field.",
              "encodedLengths": "The encoded lengths of the dynamic data of the record.",
              "keyTuple": "An array representing the composite key for the record.",
              "startWithinField": "The start byte position within the field for splicing.",
              "tableId": "The ID of the table where the data is to be spliced."
            }
          },
          "onAfterSpliceStaticData(bytes32,bytes32[],uint48,bytes)": {
            "details": "This function should be overridden to provide custom logic. Splice operations in static data always overwrite data starting at the start position, so the total length of the data remains the same and no data is shifted.",
            "params": {
              "data": "The data to be written to the static data of the record at the start byte.",
              "keyTuple": "An array representing the composite key for the record.",
              "start": "The start byte position for splicing.",
              "tableId": "The ID of the table where the data is to be spliced."
            }
          },
          "onBeforeDeleteRecord(bytes32,bytes32[],bytes32)": {
            "details": "This function should be overridden to provide custom logic.",
            "params": {
              "fieldLayout": "The layout of the field, see FieldLayout.sol.",
              "keyTuple": "An array representing the composite key for the record.",
              "tableId": "The ID of the table where the record is to be deleted."
            }
          },
          "onBeforeSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)": {
            "details": "This function should be overridden to provide custom logic.",
            "params": {
              "dynamicData": "The dynamic data of the record.",
              "encodedLengths": "The encoded lengths of the dynamic data of the record.",
              "fieldLayout": "The layout of the field, see FieldLayout.sol.",
              "keyTuple": "An array representing the composite key for the record.",
              "staticData": "The static data of the record.",
              "tableId": "The ID of the table where the record is to be set."
            }
          },
          "onBeforeSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)": {
            "details": "This function should be overridden to provide custom logic. Splice operations in dynamic data always reach the end of the dynamic data to avoid shifting data after the inserted or deleted data.",
            "params": {
              "data": "The data to be inserted into the dynamic data of the record at the start byte.",
              "deleteCount": "The number of bytes to delete in the dynamic data of the record.",
              "dynamicFieldIndex": "The index of the dynamic field.",
              "encodedLengths": "The encoded lengths of the dynamic data of the record.",
              "keyTuple": "An array representing the composite key for the record.",
              "startWithinField": "The start byte position within the field for splicing.",
              "tableId": "The ID of the table where the data is to be spliced."
            }
          },
          "onBeforeSpliceStaticData(bytes32,bytes32[],uint48,bytes)": {
            "details": "This function should be overridden to provide custom logic. Splice operations in static data always overwrite data starting at the start position, so the total length of the data remains the same and no data is shifted.",
            "params": {
              "data": "The data to be written to the static data of the record at the start byte.",
              "keyTuple": "An array representing the composite key for the record.",
              "start": "The start byte position for splicing.",
              "tableId": "The ID of the table where the data is to be spliced."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "This function is a part of the ERC-165 standard.",
            "params": {
              "interfaceId": "The ID of the interface to check."
            },
            "returns": {
              "_0": "true if the interface is supported, false otherwise."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "onAfterDeleteRecord(bytes32,bytes32[],bytes32)": {
            "notice": "Hook that runs after deleting a record."
          },
          "onAfterSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)": {
            "notice": "Hook that runs after setting a record."
          },
          "onAfterSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)": {
            "notice": "Hook that runs after splicing dynamic (variable length) data."
          },
          "onAfterSpliceStaticData(bytes32,bytes32[],uint48,bytes)": {
            "notice": "Hook that runs after splicing static (fixed length) data."
          },
          "onBeforeDeleteRecord(bytes32,bytes32[],bytes32)": {
            "notice": "Hook that runs before deleting a record."
          },
          "onBeforeSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)": {
            "notice": "Hook that runs before setting a record."
          },
          "onBeforeSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)": {
            "notice": "Hook that runs before splicing dynamic (variable length) data."
          },
          "onBeforeSpliceStaticData(bytes32,bytes32[],uint48,bytes)": {
            "notice": "Hook that runs before splicing static (fixed length) data."
          },
          "supportsInterface(bytes4)": {
            "notice": "Check if the interface is supported."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@latticexyz/=node_modules/@latticexyz/",
        "ds-test/=node_modules/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 3000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "/home/runner/work/mud/mud/packages/store/src/StoreHook.sol": "StoreHook"
      },
      "libraries": {}
    },
    "sources": {
      "/home/runner/work/mud/mud/packages/store/src/FieldLayout.sol": {
        "keccak256": "0x2a0536cd6cecc479d0b81d5aad6380231f4d6873beadc54814d801c2036b02c0",
        "urls": [
          "bzz-raw://e07c041e19146a9ec258cc700a450b4d49440202895eb12f3bb17508427c23ba",
          "dweb:/ipfs/QmXoqrCGDSkuFgNSMURRFdjokjREL78nLDzNaUi6rjefy9"
        ],
        "license": "MIT"
      },
      "/home/runner/work/mud/mud/packages/store/src/IERC165.sol": {
        "keccak256": "0x2bbc3c43400c15a91a5cb35430a91309cb64a4d13a0a170eacec71dcf334feaf",
        "urls": [
          "bzz-raw://f44dfc9605067de539de07a76a34bf469faa9e6dad8c192abafc2e05860c7dd2",
          "dweb:/ipfs/QmX8xgG6XWokM7YFwFZvmMhuh1uhkSjxCMD2oTHjUVdapb"
        ],
        "license": "MIT"
      },
      "/home/runner/work/mud/mud/packages/store/src/IStoreHook.sol": {
        "keccak256": "0xa6777c7868333996ad9c61a94457dcac702d8d7445a104dfdc86543d25e7470e",
        "urls": [
          "bzz-raw://6268a16449d7529a94746d0103670dd0e38faf5117bf914fb01da9947ab44c2e",
          "dweb:/ipfs/QmaSfbx1QRA3jw2K8bGkQTw4CTGPUzNqnCJW7LwaFUJCXy"
        ],
        "license": "MIT"
      },
      "/home/runner/work/mud/mud/packages/store/src/PackedCounter.sol": {
        "keccak256": "0x44ddfa9eb8a861462c550f0a9d66c40c68acdb347a61fa765949608407a2c7fb",
        "urls": [
          "bzz-raw://47ee957f4b19cab9e20bf5fc569c015eca13852fb3351f2a105a8be9c48204c0",
          "dweb:/ipfs/QmNkyzDobVQLoq9BtQ8HtgsPLiqnmi97EZx1wsu6wp8nKH"
        ],
        "license": "MIT"
      },
      "/home/runner/work/mud/mud/packages/store/src/ResourceId.sol": {
        "keccak256": "0x40983c580b8958e55db4520095934a535e98544ffe8228327e598973eb6647ed",
        "urls": [
          "bzz-raw://839d658fa2bb2b1f09a08149d2bf0c26a26c301ad2dda8154fc99458085a695d",
          "dweb:/ipfs/Qmd5jHHYrgqraPqF8bjzT4xyjsoPk8K7pkxXLLfz6MRT6d"
        ],
        "license": "MIT"
      },
      "/home/runner/work/mud/mud/packages/store/src/StoreHook.sol": {
        "keccak256": "0xd267686b3961da4d9a39e2cd39b89d7074ed27a516a03085bb69a6efea0a424e",
        "urls": [
          "bzz-raw://c8c96a99b6c8dab12799165b888ed5c647638a1114bec138dd65ad46c6d1cf34",
          "dweb:/ipfs/QmaMAkfEmRivfHts72hfYiiQiVc15QSRsXkPHM3d2AbFjf"
        ],
        "license": "MIT"
      },
      "/home/runner/work/mud/mud/packages/store/src/constants.sol": {
        "keccak256": "0x9e37c64c119ef07ad914bc589ee3f6d67946ab95877978c1ee3e2c1ffae07076",
        "urls": [
          "bzz-raw://3fad47e542025382aa28e8171253e34f93b2f149434b67a26989542d70218793",
          "dweb:/ipfs/QmW6JsKNwPc6oAMrgcikgR2EPwMUtQANiuZSQSGCd29HHC"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "/home/runner/work/mud/mud/packages/store/src/StoreHook.sol",
    "id": 47165,
    "exportedSymbols": {
      "ERC165_INTERFACE_ID": [
        41947
      ],
      "FieldLayout": [
        41324
      ],
      "IStoreHook": [
        42311
      ],
      "PackedCounter": [
        42778
      ],
      "ResourceId": [
        43405
      ],
      "STORE_HOOK_INTERFACE_ID": [
        42169
      ],
      "StoreHook": [
        47164
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:7682:36",
    "nodes": [
      {
        "id": 46964,
        "nodeType": "PragmaDirective",
        "src": "32:25:36",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 46967,
        "nodeType": "ImportDirective",
        "src": "59:71:36",
        "nodes": [],
        "absolutePath": "/home/runner/work/mud/mud/packages/store/src/IStoreHook.sol",
        "file": "./IStoreHook.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47165,
        "sourceUnit": 42312,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46965,
              "name": "IStoreHook",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42311,
              "src": "68:10:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 46966,
              "name": "STORE_HOOK_INTERFACE_ID",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42169,
              "src": "80:23:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46969,
        "nodeType": "ImportDirective",
        "src": "131:52:36",
        "nodes": [],
        "absolutePath": "/home/runner/work/mud/mud/packages/store/src/IERC165.sol",
        "file": "./IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47165,
        "sourceUnit": 41957,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46968,
              "name": "ERC165_INTERFACE_ID",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41947,
              "src": "140:19:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46971,
        "nodeType": "ImportDirective",
        "src": "184:52:36",
        "nodes": [],
        "absolutePath": "/home/runner/work/mud/mud/packages/store/src/PackedCounter.sol",
        "file": "./PackedCounter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47165,
        "sourceUnit": 43402,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46970,
              "name": "PackedCounter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42778,
              "src": "193:13:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46973,
        "nodeType": "ImportDirective",
        "src": "237:48:36",
        "nodes": [],
        "absolutePath": "/home/runner/work/mud/mud/packages/store/src/FieldLayout.sol",
        "file": "./FieldLayout.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47165,
        "sourceUnit": 41744,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46972,
              "name": "FieldLayout",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41324,
              "src": "246:11:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46975,
        "nodeType": "ImportDirective",
        "src": "286:46:36",
        "nodes": [],
        "absolutePath": "/home/runner/work/mud/mud/packages/store/src/ResourceId.sol",
        "file": "./ResourceId.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47165,
        "sourceUnit": 43477,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46974,
              "name": "ResourceId",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43405,
              "src": "295:10:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47164,
        "nodeType": "ContractDefinition",
        "src": "609:7104:36",
        "nodes": [
          {
            "id": 46995,
            "nodeType": "FunctionDefinition",
            "src": "900:176:36",
            "nodes": [],
            "body": {
              "id": 46994,
              "nodeType": "Block",
              "src": "982:94:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 46992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 46988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 46986,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46981,
                        "src": "995:11:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 46987,
                        "name": "STORE_HOOK_INTERFACE_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42169,
                        "src": "1010:23:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "995:38:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 46991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 46989,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46981,
                        "src": "1037:11:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 46990,
                        "name": "ERC165_INTERFACE_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41947,
                        "src": "1052:19:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "1037:34:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "995:76:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 46985,
                  "id": 46993,
                  "nodeType": "Return",
                  "src": "988:83:36"
                }
              ]
            },
            "baseFunctions": [
              41955
            ],
            "documentation": {
              "id": 46979,
              "nodeType": "StructuredDocumentation",
              "src": "655:242:36",
              "text": " @notice Check if the interface is supported.\n @dev This function is a part of the ERC-165 standard.\n @param interfaceId The ID of the interface to check.\n @return true if the interface is supported, false otherwise."
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "909:17:36",
            "parameters": {
              "id": 46982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46981,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "934:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 46995,
                  "src": "927:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 46980,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "927:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "926:20:36"
            },
            "returnParameters": {
              "id": 46985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46984,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46995,
                  "src": "976:4:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46983,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "976:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "975:6:36"
            },
            "scope": 47164,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 47019,
            "nodeType": "FunctionDefinition",
            "src": "1625:267:36",
            "nodes": [],
            "body": {
              "id": 47018,
              "nodeType": "Block",
              "src": "1848:44:36",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 47015,
                      "name": "StoreHook_NotImplemented",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42174,
                      "src": "1861:24:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 47016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1861:26:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47017,
                  "nodeType": "RevertStatement",
                  "src": "1854:33:36"
                }
              ]
            },
            "baseFunctions": [
              42194
            ],
            "documentation": {
              "id": 46996,
              "nodeType": "StructuredDocumentation",
              "src": "1080:542:36",
              "text": " @notice Hook that runs before setting a record.\n @dev This function should be overridden to provide custom logic.\n @param tableId The ID of the table where the record is to be set.\n @param keyTuple An array representing the composite key for the record.\n @param staticData The static data of the record.\n @param encodedLengths The encoded lengths of the dynamic data of the record.\n @param dynamicData The dynamic data of the record.\n @param fieldLayout The layout of the field, see FieldLayout.sol."
            },
            "functionSelector": "57066c9c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onBeforeSetRecord",
            "nameLocation": "1634:17:36",
            "parameters": {
              "id": 47013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46999,
                  "mutability": "mutable",
                  "name": "tableId",
                  "nameLocation": "1668:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47019,
                  "src": "1657:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_ResourceId_$43405",
                    "typeString": "ResourceId"
                  },
                  "typeName": {
                    "id": 46998,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 46997,
                      "name": "ResourceId",
                      "nameLocations": [
                        "1657:10:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43405,
                      "src": "1657:10:36"
                    },
                    "referencedDeclaration": 43405,
                    "src": "1657:10:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_ResourceId_$43405",
                      "typeString": "ResourceId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47002,
                  "mutability": "mutable",
                  "name": "keyTuple",
                  "nameLocation": "1698:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47019,
                  "src": "1681:25:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 47000,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1681:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 47001,
                    "nodeType": "ArrayTypeName",
                    "src": "1681:9:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47004,
                  "mutability": "mutable",
                  "name": "staticData",
                  "nameLocation": "1725:10:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47019,
                  "src": "1712:23:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 47003,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1712:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47007,
                  "mutability": "mutable",
                  "name": "encodedLengths",
                  "nameLocation": "1755:14:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47019,
                  "src": "1741:28:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_PackedCounter_$42778",
                    "typeString": "PackedCounter"
                  },
                  "typeName": {
                    "id": 47006,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47005,
                      "name": "PackedCounter",
                      "nameLocations": [
                        "1741:13:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42778,
                      "src": "1741:13:36"
                    },
                    "referencedDeclaration": 42778,
                    "src": "1741:13:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_PackedCounter_$42778",
                      "typeString": "PackedCounter"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47009,
                  "mutability": "mutable",
                  "name": "dynamicData",
                  "nameLocation": "1788:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47019,
                  "src": "1775:24:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 47008,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1775:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47012,
                  "mutability": "mutable",
                  "name": "fieldLayout",
                  "nameLocation": "1817:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47019,
                  "src": "1805:23:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$41324",
                    "typeString": "FieldLayout"
                  },
                  "typeName": {
                    "id": 47011,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47010,
                      "name": "FieldLayout",
                      "nameLocations": [
                        "1805:11:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41324,
                      "src": "1805:11:36"
                    },
                    "referencedDeclaration": 41324,
                    "src": "1805:11:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$41324",
                      "typeString": "FieldLayout"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1651:181:36"
            },
            "returnParameters": {
              "id": 47014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1848:0:36"
            },
            "scope": 47164,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 47043,
            "nodeType": "FunctionDefinition",
            "src": "2435:266:36",
            "nodes": [],
            "body": {
              "id": 47042,
              "nodeType": "Block",
              "src": "2657:44:36",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 47039,
                      "name": "StoreHook_NotImplemented",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42174,
                      "src": "2670:24:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 47040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2670:26:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47041,
                  "nodeType": "RevertStatement",
                  "src": "2663:33:36"
                }
              ]
            },
            "baseFunctions": [
              42214
            ],
            "documentation": {
              "id": 47020,
              "nodeType": "StructuredDocumentation",
              "src": "1896:536:36",
              "text": " @notice Hook that runs after setting a record.\n @dev This function should be overridden to provide custom logic.\n @param tableId The ID of the table where the record was set.\n @param keyTuple An array representing the composite key for the record.\n @param staticData The static data of the record.\n @param encodedLengths The encoded lengths of the dynamic data of the record.\n @param dynamicData The dynamic data of the record.\n @param fieldLayout The layout of the field, see FieldLayout.sol."
            },
            "functionSelector": "5b28cdaf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onAfterSetRecord",
            "nameLocation": "2444:16:36",
            "parameters": {
              "id": 47037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47023,
                  "mutability": "mutable",
                  "name": "tableId",
                  "nameLocation": "2477:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47043,
                  "src": "2466:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_ResourceId_$43405",
                    "typeString": "ResourceId"
                  },
                  "typeName": {
                    "id": 47022,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47021,
                      "name": "ResourceId",
                      "nameLocations": [
                        "2466:10:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43405,
                      "src": "2466:10:36"
                    },
                    "referencedDeclaration": 43405,
                    "src": "2466:10:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_ResourceId_$43405",
                      "typeString": "ResourceId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47026,
                  "mutability": "mutable",
                  "name": "keyTuple",
                  "nameLocation": "2507:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47043,
                  "src": "2490:25:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 47024,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2490:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 47025,
                    "nodeType": "ArrayTypeName",
                    "src": "2490:9:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47028,
                  "mutability": "mutable",
                  "name": "staticData",
                  "nameLocation": "2534:10:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47043,
                  "src": "2521:23:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 47027,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2521:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47031,
                  "mutability": "mutable",
                  "name": "encodedLengths",
                  "nameLocation": "2564:14:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47043,
                  "src": "2550:28:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_PackedCounter_$42778",
                    "typeString": "PackedCounter"
                  },
                  "typeName": {
                    "id": 47030,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47029,
                      "name": "PackedCounter",
                      "nameLocations": [
                        "2550:13:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42778,
                      "src": "2550:13:36"
                    },
                    "referencedDeclaration": 42778,
                    "src": "2550:13:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_PackedCounter_$42778",
                      "typeString": "PackedCounter"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47033,
                  "mutability": "mutable",
                  "name": "dynamicData",
                  "nameLocation": "2597:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47043,
                  "src": "2584:24:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 47032,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2584:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47036,
                  "mutability": "mutable",
                  "name": "fieldLayout",
                  "nameLocation": "2626:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47043,
                  "src": "2614:23:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$41324",
                    "typeString": "FieldLayout"
                  },
                  "typeName": {
                    "id": 47035,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47034,
                      "name": "FieldLayout",
                      "nameLocations": [
                        "2614:11:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41324,
                      "src": "2614:11:36"
                    },
                    "referencedDeclaration": 41324,
                    "src": "2614:11:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$41324",
                      "typeString": "FieldLayout"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2460:181:36"
            },
            "returnParameters": {
              "id": 47038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2657:0:36"
            },
            "scope": 47164,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 47061,
            "nodeType": "FunctionDefinition",
            "src": "3332:193:36",
            "nodes": [],
            "body": {
              "id": 47060,
              "nodeType": "Block",
              "src": "3481:44:36",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 47057,
                      "name": "StoreHook_NotImplemented",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42174,
                      "src": "3494:24:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 47058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3494:26:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47059,
                  "nodeType": "RevertStatement",
                  "src": "3487:33:36"
                }
              ]
            },
            "baseFunctions": [
              42228
            ],
            "documentation": {
              "id": 47044,
              "nodeType": "StructuredDocumentation",
              "src": "2705:624:36",
              "text": " @notice Hook that runs before splicing static (fixed length) data.\n @dev This function should be overridden to provide custom logic.\n Splice operations in static data always overwrite data starting at\n the start position,\n so the total length of the data remains the same and no data is shifted.\n @param tableId The ID of the table where the data is to be spliced.\n @param keyTuple An array representing the composite key for the record.\n @param start The start byte position for splicing.\n @param data The data to be written to the static data of the record at the start byte."
            },
            "functionSelector": "964f667d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onBeforeSpliceStaticData",
            "nameLocation": "3341:24:36",
            "parameters": {
              "id": 47055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47047,
                  "mutability": "mutable",
                  "name": "tableId",
                  "nameLocation": "3382:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47061,
                  "src": "3371:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_ResourceId_$43405",
                    "typeString": "ResourceId"
                  },
                  "typeName": {
                    "id": 47046,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47045,
                      "name": "ResourceId",
                      "nameLocations": [
                        "3371:10:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43405,
                      "src": "3371:10:36"
                    },
                    "referencedDeclaration": 43405,
                    "src": "3371:10:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_ResourceId_$43405",
                      "typeString": "ResourceId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47050,
                  "mutability": "mutable",
                  "name": "keyTuple",
                  "nameLocation": "3412:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47061,
                  "src": "3395:25:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 47048,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3395:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 47049,
                    "nodeType": "ArrayTypeName",
                    "src": "3395:9:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47052,
                  "mutability": "mutable",
                  "name": "start",
                  "nameLocation": "3433:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47061,
                  "src": "3426:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 47051,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "3426:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47054,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3457:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47061,
                  "src": "3444:17:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 47053,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3444:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3365:100:36"
            },
            "returnParameters": {
              "id": 47056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3481:0:36"
            },
            "scope": 47164,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 47079,
            "nodeType": "FunctionDefinition",
            "src": "4155:192:36",
            "nodes": [],
            "body": {
              "id": 47078,
              "nodeType": "Block",
              "src": "4303:44:36",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 47075,
                      "name": "StoreHook_NotImplemented",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42174,
                      "src": "4316:24:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 47076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4316:26:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47077,
                  "nodeType": "RevertStatement",
                  "src": "4309:33:36"
                }
              ]
            },
            "baseFunctions": [
              42242
            ],
            "documentation": {
              "id": 47062,
              "nodeType": "StructuredDocumentation",
              "src": "3529:623:36",
              "text": " @notice Hook that runs after splicing static (fixed length) data.\n @dev This function should be overridden to provide custom logic.\n Splice operations in static data always overwrite data starting at\n the start position,\n so the total length of the data remains the same and no data is shifted.\n @param tableId The ID of the table where the data is to be spliced.\n @param keyTuple An array representing the composite key for the record.\n @param start The start byte position for splicing.\n @param data The data to be written to the static data of the record at the start byte."
            },
            "functionSelector": "a8ba8721",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onAfterSpliceStaticData",
            "nameLocation": "4164:23:36",
            "parameters": {
              "id": 47073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47065,
                  "mutability": "mutable",
                  "name": "tableId",
                  "nameLocation": "4204:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47079,
                  "src": "4193:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_ResourceId_$43405",
                    "typeString": "ResourceId"
                  },
                  "typeName": {
                    "id": 47064,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47063,
                      "name": "ResourceId",
                      "nameLocations": [
                        "4193:10:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43405,
                      "src": "4193:10:36"
                    },
                    "referencedDeclaration": 43405,
                    "src": "4193:10:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_ResourceId_$43405",
                      "typeString": "ResourceId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47068,
                  "mutability": "mutable",
                  "name": "keyTuple",
                  "nameLocation": "4234:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47079,
                  "src": "4217:25:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 47066,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4217:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 47067,
                    "nodeType": "ArrayTypeName",
                    "src": "4217:9:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47070,
                  "mutability": "mutable",
                  "name": "start",
                  "nameLocation": "4255:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47079,
                  "src": "4248:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 47069,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "4248:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47072,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4279:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47079,
                  "src": "4266:17:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 47071,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4266:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4187:100:36"
            },
            "returnParameters": {
              "id": 47074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4303:0:36"
            },
            "scope": 47164,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 47104,
            "nodeType": "FunctionDefinition",
            "src": "5216:292:36",
            "nodes": [],
            "body": {
              "id": 47103,
              "nodeType": "Block",
              "src": "5464:44:36",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 47100,
                      "name": "StoreHook_NotImplemented",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42174,
                      "src": "5477:24:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 47101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5477:26:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47102,
                  "nodeType": "RevertStatement",
                  "src": "5470:33:36"
                }
              ]
            },
            "baseFunctions": [
              42263
            ],
            "documentation": {
              "id": 47080,
              "nodeType": "StructuredDocumentation",
              "src": "4351:862:36",
              "text": " @notice Hook that runs before splicing dynamic (variable length) data.\n @dev This function should be overridden to provide custom logic.\n Splice operations in dynamic data always reach the end of the dynamic data\n to avoid shifting data after the inserted or deleted data.\n @param tableId The ID of the table where the data is to be spliced.\n @param keyTuple An array representing the composite key for the record.\n @param dynamicFieldIndex The index of the dynamic field.\n @param startWithinField The start byte position within the field for splicing.\n @param deleteCount The number of bytes to delete in the dynamic data of the record.\n @param encodedLengths The encoded lengths of the dynamic data of the record.\n @param data The data to be inserted into the dynamic data of the record at the start byte."
            },
            "functionSelector": "55eb5a28",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onBeforeSpliceDynamicData",
            "nameLocation": "5225:25:36",
            "parameters": {
              "id": 47098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47083,
                  "mutability": "mutable",
                  "name": "tableId",
                  "nameLocation": "5267:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47104,
                  "src": "5256:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_ResourceId_$43405",
                    "typeString": "ResourceId"
                  },
                  "typeName": {
                    "id": 47082,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47081,
                      "name": "ResourceId",
                      "nameLocations": [
                        "5256:10:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43405,
                      "src": "5256:10:36"
                    },
                    "referencedDeclaration": 43405,
                    "src": "5256:10:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_ResourceId_$43405",
                      "typeString": "ResourceId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47086,
                  "mutability": "mutable",
                  "name": "keyTuple",
                  "nameLocation": "5297:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47104,
                  "src": "5280:25:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 47084,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5280:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 47085,
                    "nodeType": "ArrayTypeName",
                    "src": "5280:9:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47088,
                  "mutability": "mutable",
                  "name": "dynamicFieldIndex",
                  "nameLocation": "5317:17:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47104,
                  "src": "5311:23:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 47087,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5311:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47090,
                  "mutability": "mutable",
                  "name": "startWithinField",
                  "nameLocation": "5347:16:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47104,
                  "src": "5340:23:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 47089,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "5340:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47092,
                  "mutability": "mutable",
                  "name": "deleteCount",
                  "nameLocation": "5376:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47104,
                  "src": "5369:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 47091,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "5369:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47095,
                  "mutability": "mutable",
                  "name": "encodedLengths",
                  "nameLocation": "5407:14:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47104,
                  "src": "5393:28:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_PackedCounter_$42778",
                    "typeString": "PackedCounter"
                  },
                  "typeName": {
                    "id": 47094,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47093,
                      "name": "PackedCounter",
                      "nameLocations": [
                        "5393:13:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42778,
                      "src": "5393:13:36"
                    },
                    "referencedDeclaration": 42778,
                    "src": "5393:13:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_PackedCounter_$42778",
                      "typeString": "PackedCounter"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47097,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5440:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47104,
                  "src": "5427:17:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 47096,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5427:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5250:198:36"
            },
            "returnParameters": {
              "id": 47099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5464:0:36"
            },
            "scope": 47164,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 47129,
            "nodeType": "FunctionDefinition",
            "src": "6376:291:36",
            "nodes": [],
            "body": {
              "id": 47128,
              "nodeType": "Block",
              "src": "6623:44:36",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 47125,
                      "name": "StoreHook_NotImplemented",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42174,
                      "src": "6636:24:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 47126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6636:26:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47127,
                  "nodeType": "RevertStatement",
                  "src": "6629:33:36"
                }
              ]
            },
            "baseFunctions": [
              42284
            ],
            "documentation": {
              "id": 47105,
              "nodeType": "StructuredDocumentation",
              "src": "5512:861:36",
              "text": " @notice Hook that runs after splicing dynamic (variable length) data.\n @dev This function should be overridden to provide custom logic.\n Splice operations in dynamic data always reach the end of the dynamic data\n to avoid shifting data after the inserted or deleted data.\n @param tableId The ID of the table where the data is to be spliced.\n @param keyTuple An array representing the composite key for the record.\n @param dynamicFieldIndex The index of the dynamic field.\n @param startWithinField The start byte position within the field for splicing.\n @param deleteCount The number of bytes to delete in the dynamic data of the record.\n @param encodedLengths The encoded lengths of the dynamic data of the record.\n @param data The data to be inserted into the dynamic data of the record at the start byte."
            },
            "functionSelector": "63584533",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onAfterSpliceDynamicData",
            "nameLocation": "6385:24:36",
            "parameters": {
              "id": 47123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47108,
                  "mutability": "mutable",
                  "name": "tableId",
                  "nameLocation": "6426:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47129,
                  "src": "6415:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_ResourceId_$43405",
                    "typeString": "ResourceId"
                  },
                  "typeName": {
                    "id": 47107,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47106,
                      "name": "ResourceId",
                      "nameLocations": [
                        "6415:10:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43405,
                      "src": "6415:10:36"
                    },
                    "referencedDeclaration": 43405,
                    "src": "6415:10:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_ResourceId_$43405",
                      "typeString": "ResourceId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47111,
                  "mutability": "mutable",
                  "name": "keyTuple",
                  "nameLocation": "6456:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47129,
                  "src": "6439:25:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 47109,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6439:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 47110,
                    "nodeType": "ArrayTypeName",
                    "src": "6439:9:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47113,
                  "mutability": "mutable",
                  "name": "dynamicFieldIndex",
                  "nameLocation": "6476:17:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47129,
                  "src": "6470:23:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 47112,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6470:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47115,
                  "mutability": "mutable",
                  "name": "startWithinField",
                  "nameLocation": "6506:16:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47129,
                  "src": "6499:23:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 47114,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "6499:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47117,
                  "mutability": "mutable",
                  "name": "deleteCount",
                  "nameLocation": "6535:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47129,
                  "src": "6528:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 47116,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "6528:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47120,
                  "mutability": "mutable",
                  "name": "encodedLengths",
                  "nameLocation": "6566:14:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47129,
                  "src": "6552:28:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_PackedCounter_$42778",
                    "typeString": "PackedCounter"
                  },
                  "typeName": {
                    "id": 47119,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47118,
                      "name": "PackedCounter",
                      "nameLocations": [
                        "6552:13:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42778,
                      "src": "6552:13:36"
                    },
                    "referencedDeclaration": 42778,
                    "src": "6552:13:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_PackedCounter_$42778",
                      "typeString": "PackedCounter"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47122,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "6599:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47129,
                  "src": "6586:17:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 47121,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6586:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6409:198:36"
            },
            "returnParameters": {
              "id": 47124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6623:0:36"
            },
            "scope": 47164,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 47146,
            "nodeType": "FunctionDefinition",
            "src": "7029:161:36",
            "nodes": [],
            "body": {
              "id": 47145,
              "nodeType": "Block",
              "src": "7146:44:36",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 47142,
                      "name": "StoreHook_NotImplemented",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42174,
                      "src": "7159:24:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 47143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7159:26:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47144,
                  "nodeType": "RevertStatement",
                  "src": "7152:33:36"
                }
              ]
            },
            "baseFunctions": [
              42297
            ],
            "documentation": {
              "id": 47130,
              "nodeType": "StructuredDocumentation",
              "src": "6671:355:36",
              "text": " @notice Hook that runs before deleting a record.\n @dev This function should be overridden to provide custom logic.\n @param tableId The ID of the table where the record is to be deleted.\n @param keyTuple An array representing the composite key for the record.\n @param fieldLayout The layout of the field, see FieldLayout.sol."
            },
            "functionSelector": "9faeaf45",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onBeforeDeleteRecord",
            "nameLocation": "7038:20:36",
            "parameters": {
              "id": 47140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47133,
                  "mutability": "mutable",
                  "name": "tableId",
                  "nameLocation": "7070:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47146,
                  "src": "7059:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_ResourceId_$43405",
                    "typeString": "ResourceId"
                  },
                  "typeName": {
                    "id": 47132,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47131,
                      "name": "ResourceId",
                      "nameLocations": [
                        "7059:10:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43405,
                      "src": "7059:10:36"
                    },
                    "referencedDeclaration": 43405,
                    "src": "7059:10:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_ResourceId_$43405",
                      "typeString": "ResourceId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47136,
                  "mutability": "mutable",
                  "name": "keyTuple",
                  "nameLocation": "7096:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47146,
                  "src": "7079:25:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 47134,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "7079:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 47135,
                    "nodeType": "ArrayTypeName",
                    "src": "7079:9:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47139,
                  "mutability": "mutable",
                  "name": "fieldLayout",
                  "nameLocation": "7118:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47146,
                  "src": "7106:23:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$41324",
                    "typeString": "FieldLayout"
                  },
                  "typeName": {
                    "id": 47138,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47137,
                      "name": "FieldLayout",
                      "nameLocations": [
                        "7106:11:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41324,
                      "src": "7106:11:36"
                    },
                    "referencedDeclaration": 41324,
                    "src": "7106:11:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$41324",
                      "typeString": "FieldLayout"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7058:72:36"
            },
            "returnParameters": {
              "id": 47141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7146:0:36"
            },
            "scope": 47164,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 47163,
            "nodeType": "FunctionDefinition",
            "src": "7551:160:36",
            "nodes": [],
            "body": {
              "id": 47162,
              "nodeType": "Block",
              "src": "7667:44:36",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 47159,
                      "name": "StoreHook_NotImplemented",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42174,
                      "src": "7680:24:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 47160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7680:26:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47161,
                  "nodeType": "RevertStatement",
                  "src": "7673:33:36"
                }
              ]
            },
            "baseFunctions": [
              42310
            ],
            "documentation": {
              "id": 47147,
              "nodeType": "StructuredDocumentation",
              "src": "7194:354:36",
              "text": " @notice Hook that runs after deleting a record.\n @dev This function should be overridden to provide custom logic.\n @param tableId The ID of the table where the record is to be deleted.\n @param keyTuple An array representing the composite key for the record.\n @param fieldLayout The layout of the field, see FieldLayout.sol."
            },
            "functionSelector": "83b5c95b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onAfterDeleteRecord",
            "nameLocation": "7560:19:36",
            "parameters": {
              "id": 47157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47150,
                  "mutability": "mutable",
                  "name": "tableId",
                  "nameLocation": "7591:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47163,
                  "src": "7580:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_ResourceId_$43405",
                    "typeString": "ResourceId"
                  },
                  "typeName": {
                    "id": 47149,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47148,
                      "name": "ResourceId",
                      "nameLocations": [
                        "7580:10:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43405,
                      "src": "7580:10:36"
                    },
                    "referencedDeclaration": 43405,
                    "src": "7580:10:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_ResourceId_$43405",
                      "typeString": "ResourceId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47153,
                  "mutability": "mutable",
                  "name": "keyTuple",
                  "nameLocation": "7617:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47163,
                  "src": "7600:25:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 47151,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "7600:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 47152,
                    "nodeType": "ArrayTypeName",
                    "src": "7600:9:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47156,
                  "mutability": "mutable",
                  "name": "fieldLayout",
                  "nameLocation": "7639:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 47163,
                  "src": "7627:23:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$41324",
                    "typeString": "FieldLayout"
                  },
                  "typeName": {
                    "id": 47155,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47154,
                      "name": "FieldLayout",
                      "nameLocations": [
                        "7627:11:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41324,
                      "src": "7627:11:36"
                    },
                    "referencedDeclaration": 41324,
                    "src": "7627:11:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$41324",
                      "typeString": "FieldLayout"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7579:72:36"
            },
            "returnParameters": {
              "id": 47158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7667:0:36"
            },
            "scope": 47164,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 46977,
              "name": "IStoreHook",
              "nameLocations": [
                "640:10:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42311,
              "src": "640:10:36"
            },
            "id": 46978,
            "nodeType": "InheritanceSpecifier",
            "src": "640:10:36"
          }
        ],
        "canonicalName": "StoreHook",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 46976,
          "nodeType": "StructuredDocumentation",
          "src": "334:274:36",
          "text": " @title Store Hook Contract\n @notice This abstract contract provides hooks for the storage operations.\n @dev Implementers should override the hook functions to provide custom logic.\n If any hooks are activated without overriding these functions, they revert."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          47164,
          42311,
          41956
        ],
        "name": "StoreHook",
        "nameLocation": "627:9:36",
        "scope": 47165,
        "usedErrors": [
          42174
        ],
        "usedEvents": []
      }
    ],
    "license": "MIT"
  },
  "id": 36
}