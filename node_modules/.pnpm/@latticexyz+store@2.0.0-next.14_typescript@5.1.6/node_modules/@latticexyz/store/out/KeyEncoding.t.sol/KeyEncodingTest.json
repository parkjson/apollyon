{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "FieldLayoutLib_InvalidLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FieldLayoutLib_StaticLengthDoesNotFitInAWord",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FieldLayoutLib_StaticLengthIsZero",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "PackedCounter_InvalidLength",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "SchemaLib_InvalidLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SchemaLib_StaticTypeAfterDynamicType",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        }
      ],
      "name": "Slice_OutOfBounds",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "accessedIndex",
          "type": "uint256"
        }
      ],
      "name": "Store_IndexOutOfBounds",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "received",
          "type": "uint256"
        }
      ],
      "name": "Store_InvalidDynamicDataLength",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "received",
          "type": "uint256"
        }
      ],
      "name": "Store_InvalidFieldNamesLength",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "received",
          "type": "uint256"
        }
      ],
      "name": "Store_InvalidKeyNamesLength",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes2",
          "name": "expected",
          "type": "bytes2"
        },
        {
          "internalType": "ResourceId",
          "name": "resourceId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "resourceIdString",
          "type": "string"
        }
      ],
      "name": "Store_InvalidResourceType",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint40",
          "name": "startWithinField",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "deleteCount",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "fieldLength",
          "type": "uint40"
        }
      ],
      "name": "Store_InvalidSplice",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "received",
          "type": "uint256"
        }
      ],
      "name": "Store_InvalidValueSchemaLength",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "tableIdString",
          "type": "string"
        }
      ],
      "name": "Store_TableAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "tableIdString",
          "type": "string"
        }
      ],
      "name": "Store_TableNotFound",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "storeVersion",
          "type": "bytes32"
        }
      ],
      "name": "HelloStore",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        }
      ],
      "name": "Store_DeleteRecord",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        }
      ],
      "name": "Store_DeleteRecord",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "staticData",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "PackedCounter",
          "name": "encodedLengths",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "dynamicData",
          "type": "bytes"
        }
      ],
      "name": "Store_SetRecord",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "staticData",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "PackedCounter",
          "name": "encodedLengths",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "dynamicData",
          "type": "bytes"
        }
      ],
      "name": "Store_SetRecord",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "start",
          "type": "uint48"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "deleteCount",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "PackedCounter",
          "name": "encodedLengths",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Store_SpliceDynamicData",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "start",
          "type": "uint48"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "deleteCount",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "PackedCounter",
          "name": "encodedLengths",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Store_SpliceDynamicData",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "start",
          "type": "uint48"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Store_SpliceStaticData",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "start",
          "type": "uint48"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Store_SpliceStaticData",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        }
      ],
      "name": "deleteRecord",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "dynamicFieldIndex",
          "type": "uint8"
        }
      ],
      "name": "getDynamicField",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "dynamicFieldIndex",
          "type": "uint8"
        }
      ],
      "name": "getDynamicFieldLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "dynamicFieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        }
      ],
      "name": "getDynamicFieldSlice",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "fieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "FieldLayout",
          "name": "fieldLayout",
          "type": "bytes32"
        }
      ],
      "name": "getField",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "fieldIndex",
          "type": "uint8"
        }
      ],
      "name": "getField",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        }
      ],
      "name": "getFieldLayout",
      "outputs": [
        {
          "internalType": "FieldLayout",
          "name": "fieldLayout",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "fieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "FieldLayout",
          "name": "fieldLayout",
          "type": "bytes32"
        }
      ],
      "name": "getFieldLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "fieldIndex",
          "type": "uint8"
        }
      ],
      "name": "getFieldLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        }
      ],
      "name": "getKeySchema",
      "outputs": [
        {
          "internalType": "Schema",
          "name": "keySchema",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "FieldLayout",
          "name": "fieldLayout",
          "type": "bytes32"
        }
      ],
      "name": "getRecord",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "staticData",
          "type": "bytes"
        },
        {
          "internalType": "PackedCounter",
          "name": "encodedLengths",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "dynamicData",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        }
      ],
      "name": "getRecord",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "staticData",
          "type": "bytes"
        },
        {
          "internalType": "PackedCounter",
          "name": "encodedLengths",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "dynamicData",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "fieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "FieldLayout",
          "name": "fieldLayout",
          "type": "bytes32"
        }
      ],
      "name": "getStaticField",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        }
      ],
      "name": "getValueSchema",
      "outputs": [
        {
          "internalType": "Schema",
          "name": "valueSchema",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "dynamicFieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "byteLengthToPop",
          "type": "uint256"
        }
      ],
      "name": "popFromDynamicField",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "dynamicFieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "dataToPush",
          "type": "bytes"
        }
      ],
      "name": "pushToDynamicField",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "contract IStoreHook",
          "name": "hookAddress",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "enabledHooksBitmap",
          "type": "uint8"
        }
      ],
      "name": "registerStoreHook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "FieldLayout",
          "name": "fieldLayout",
          "type": "bytes32"
        },
        {
          "internalType": "Schema",
          "name": "keySchema",
          "type": "bytes32"
        },
        {
          "internalType": "Schema",
          "name": "valueSchema",
          "type": "bytes32"
        },
        {
          "internalType": "string[]",
          "name": "keyNames",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "fieldNames",
          "type": "string[]"
        }
      ],
      "name": "registerTable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "dynamicFieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "setDynamicField",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "fieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "setField",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "fieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "FieldLayout",
          "name": "fieldLayout",
          "type": "bytes32"
        }
      ],
      "name": "setField",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes",
          "name": "staticData",
          "type": "bytes"
        },
        {
          "internalType": "PackedCounter",
          "name": "encodedLengths",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "dynamicData",
          "type": "bytes"
        }
      ],
      "name": "setRecord",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "fieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "FieldLayout",
          "name": "fieldLayout",
          "type": "bytes32"
        }
      ],
      "name": "setStaticField",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "dynamicFieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "uint40",
          "name": "startWithinField",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "deleteCount",
          "type": "uint40"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "spliceDynamicData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint48",
          "name": "start",
          "type": "uint48"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "spliceStaticData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "storeVersion",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testKeyEncoding",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRegisterAndGetFieldLayout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRegisterAndGetSchema",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSetAndGet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "contract IStoreHook",
          "name": "hookAddress",
          "type": "address"
        }
      ],
      "name": "unregisterStoreHook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "494:2729:80:-:0;;;1572:26:18;;;1594:4;-1:-1:-1;;1572:26:18;;;;;;;;3126:44:21;;;;;;;;;;;228:9:16;186:51;;494:2729:80;;;;;;;;;-1:-1:-1;739:22:55;-1:-1:-1;;;;;;;;;;;2304:38:58;;-1:-1:-1;;;;;;2304:38:58;4109:4:54;2304:38:58;;;4036:84:54;739:22:55;772:25;;-1:-1:-1;;;783:13:55;772:25;;;;;726:22:96;-1:-1:-1;;;;;;;;;;;2304:38:58;;-1:-1:-1;;;;;;2304:38:58;4109:4:54;2304:38:58;;;4036:84:54;726:22:96;754:30;:28;:30::i;:::-;-1:-1:-1;;;;;;;;;;;2304:38:58;;-1:-1:-1;;;;;;2304:38:58;826:4:96;2304:38:58;;;494:2729:80;;4073:42:54;4036:84::o;4326:150::-;4399:17;:15;:17::i;:::-;4422:21;:19;:21::i;:::-;4449:22;:20;:22::i;3356:155:63:-;1147:69;;;-1:-1:-1;;;1147:69:63;;;197:41:113;-1:-1:-1;;;254:11:113;;;247:58;-1:-1:-1;;;321:12:113;;;314:59;3391:115:63;;389:12:113;1147:69:63;;;;;;;;;;;;1139:78;;;:::i;:::-;-1:-1:-1;;;3441:14:63;:12;:14::i;:::-;3457:16;:14;:16::i;:::-;3475:13;:11;:13::i;:::-;3490:15;:13;:15::i;:::-;3391:25;:115::i;2800:155:62:-;1047:73;;;-1:-1:-1;;;1047:73:62;;;197:41:113;-1:-1:-1;;;254:11:113;;;247:58;-1:-1:-1;;;321:12:113;;;314:59;2835:115:62;;389:12:113;1047:73:62;;;;;;;;;;;;1039:82;;;:::i;:::-;-1:-1:-1;;;2885:14:62;:12;:14::i;:::-;2901:16;:14;:16::i;:::-;2919:13;:11;:13::i;:::-;2934:15;:13;:15::i;2798:155:61:-;1047:74;;;-1:-1:-1;;;1047:74:61;;;197:41:113;-1:-1:-1;;;254:11:113;;;247:58;-1:-1:-1;;;321:12:113;;;314:59;2833:115:61;;389:12:113;1047:74:61;;;;;;;;;;;;1039:83;;;:::i;:::-;-1:-1:-1;;;2883:14:61;:12;:14::i;:::-;2899:16;:14;:16::i;:::-;2917:13;:11;:13::i;:::-;2932:15;:13;:15::i;1886:200:63:-;1980:19;;;1997:1;1980:19;;;;;;;;;1933:6;;;;1980:19;;;;;;;;;;;;-1:-1:-1;1980:19:63;1947:52;;2021:18;2005:10;2016:1;2005:13;;;;;;;;:::i;:::-;;;;;;:34;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;2053:28:63;2070:10;2053:16;:28::i;:::-;2046:35;;;1886:200;:::o;2203:372::-;2301:19;;;2318:1;2301:19;;;;;;;;;2252:6;;;;2301:19;;;;;;;;;;;-1:-1:-1;2301:19:63;2266:54;;2344:18;2326:12;2339:1;2326:15;;;;;;;;:::i;:::-;;;;;;:36;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;2386:18;2368:12;2381:1;2368:15;;;;;;;;:::i;:::-;;;;;;:36;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;2428:18;2410:12;2423:1;2410:15;;;;;;;;:::i;:::-;;;;;;:36;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;2470:16;2452:12;2465:1;2452:15;;;;;;;;:::i;:::-;;;;;;:34;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;2510:16;2492:12;2505:1;2492:15;;;;;;;;:::i;2709:138::-;2798:15;;;2811:1;2798:15;;;;;;;;;2755:24;;2798:15;;;;;;;;;;;;;;;;;;;;2787:26;;2819:23;;;;;;;;;;;;;-1:-1:-1;;;2819:23:63;;;:8;2828:1;2819:11;;;;;;;;:::i;:::-;;;;;;:23;;;;2709:138;:::o;2987:304::-;3082:15;;;3095:1;3082:15;;;;;;;;;3035:26;;3082:15;;;;;;;;;;;;;;;;;;;;3069:28;;3103:29;;;;;;;;;;;;;-1:-1:-1;;;3103:29:63;;;:10;3114:1;3103:13;;;;;;;;:::i;:::-;;;;;;:29;;;;3138:27;;;;;;;;;;;;;-1:-1:-1;;;3138:27:63;;;:10;3149:1;3138:13;;;;;;;;:::i;:::-;;;;;;:27;;;;3171:29;;;;;;;;;;;;;-1:-1:-1;;;3171:29:63;;;:10;3182:1;3171:13;;;;;;;;:::i;:::-;;;;;;:29;;;;3206:36;;;;;;;;;;;;;-1:-1:-1;;;3206:36:63;;;:10;3217:1;3206:13;;;;;;;;:::i;:::-;;;;;;:36;;;;3248:38;;;;;;;;;;;;;;;;;:10;3259:1;3248:13;;;;;;;;:::i;5574:520:58:-;5777:21;5801:17;:15;:17::i;:::-;5777:41;-1:-1:-1;5853:4:58;-1:-1:-1;;;;;5828:30:58;;;5824:266;;5868:91;5892:7;5901:11;5914:9;5925:11;5938:8;5948:10;5868:23;:91::i;:::-;5824:266;;;5980:103;;-1:-1:-1;;;5980:103:58;;-1:-1:-1;;;;;5980:35:58;;;;;:103;;6016:7;;6025:11;;6038:9;;6049:11;;6062:8;;6072:10;;5980:103;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5824:266;5771:323;5574:520;;;;;;:::o;1965:214:62:-;2063:19;;;2080:1;2063:19;;;;;;;;;2014:6;;;;2063:19;;;;;;;;;;;;-1:-1:-1;2063:19:62;2028:54;;2106:24;2088:12;2101:1;2088:15;;;;;;;;:::i;2591:144::-;2686:15;;;2699:1;2686:15;;;;;;;;;2639:26;;2686:15;;;;;;;;;;;;;;;;;;;;2673:28;;2707:23;;;;;;;;;;;;;-1:-1:-1;;;2707:23:62;;;:10;2718:1;2707:13;;;;;;;;:::i;1968:205:61:-;2066:19;;;2083:1;2066:19;;;;;;;;;2017:6;;;;2066:19;;;;;;;;;;;;-1:-1:-1;2066:19:61;2031:54;;2109:15;2091:12;2104:1;2091:15;;;;;;;;:::i;2307:141::-;2396:15;;;2409:1;2396:15;;;;;;;;;2353:24;;2396:15;;;;;;;;;;;;;;;;;;;;2385:26;;2417;;;;;;;;;;;;;-1:-1:-1;;;2417:26:61;;;:8;2426:1;2417:11;;;;;;;;:::i;2588:145::-;2683:15;;;2696:1;2683:15;;;;;;;;;2636:26;;2683:15;;;;;;;;;;;;;;;;;;;;2670:28;;2704:24;;;;;;;;;;;;;-1:-1:-1;;;2704:24:61;;;:10;2715:1;2704:13;;;;;;;;:::i;1247:2059:51:-;1315:6;647:2:64;1333:7:51;:14;:33;1329:85;;;1399:7;:14;1375:39;;-1:-1:-1;;;1375:39:51;;;;;;3301:25:113;;3289:2;3274:18;;3155:177;1375:39:51;;;;;;;;1329:85;1420:14;;;;1621:956;1645:7;:14;1641:1;:18;1621:956;;;1671:24;1698:32;:7;1706:1;1698:10;;;;;;;;:::i;:::-;;;;;;;:30;;;;;;;;:::i;:::-;;:32::i;:::-;1671:59;;1743:16;1763:1;1743:21;1739:404;;1928:15;;;;;1739:404;;;1972:17;;1968:175;;2096:38;;-1:-1:-1;;;2096:38:51;;;;;;;;;;;1968:175;2269:16;2254:31;;;;537:1:64;2531::51;2527;437:2:64;2509:19:51;:23;2508:40;2492:7;2500:1;2492:10;;;;;;;;:::i;:::-;;;;;;;2484:19;;;;;;;;:::i;:::-;:65;;2474:75;;;;;-1:-1:-1;2559:3:51;;1621:956;;;;902:1:64;2621:13:51;:34;2617:85;;;2664:38;;-1:-1:-1;;;2664:38:51;;;;;3301:25:113;;;3274:18;;2664:38:51;3155:177:113;2617:85:51;2802:14;;:30;;;537:1:64;1247:13;1259:1;334:2;1247:13;:::i;:::-;1246:30;;;;:::i;:::-;3090:41:51;;;3080:51;;;;;537:1:64;1425;1409:13;1421:1;334:2;1409:13;:::i;:::-;:17;;;;:::i;:::-;1408:34;;;;:::i;:::-;3147:47:51;;;3137:57;;;;;537:1:64;1597;;1577:13;1589:1;334:2;1577:13;:::i;:::-;:17;;;;:::i;:::-;:21;;;;:::i;:::-;1576:38;;;;:::i;:::-;3210:49:51;;;;3200:59;;;;;1247:2059;-1:-1:-1;;;;1247:2059:51:o;1766:227:58:-;-1:-1:-1;;;;;;;;;;;1855:22:58;1816:7;;-1:-1:-1;;;;;1855:22:58;;1883:106;;1931:10;1924:17;;;1766:227;:::o;1883:106::-;1969:13;1766:227;-1:-1:-1;1766:227:58:o;7479:1764:54:-;-1:-1:-1;;;7739:7:54;-1:-1:-1;;;;;;7739:35:54;;;;;:83;;-1:-1:-1;;;;7778:7:54;-1:-1:-1;;;;;;7778:44:54;;;7739:83;7735:209;;;-1:-1:-1;;;7894:7:54;7927;7910:25;;;;;;3936:19:113;;3980:2;3971:12;;3775:214;7910:25:54;;;;-1:-1:-1;;7910:25:54;;;;;;;;;;-1:-1:-1;;;7839:98:54;;;;;;;;;:::i;7735:209::-;7990:43;:11;8025:5;7990:20;:43::i;:::-;8074:40;:9;8107:4;8074:18;:40::i;:::-;8120:43;:11;8155:5;8120:20;:43::i;:::-;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;8251:8:54;:15;:40;8247:148;;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;8372:15:54;;8308:80;;-1:-1:-1;;;8308:80:54;;;;;4587:25:113;;;;4628:18;;;4621:34;4560:18;;8308:80:54;4413:248:113;8247:148:54;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;8445:10:54;:17;:44;8441:158;;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;8574:17:54;;8506:86;;-1:-1:-1;;;8506:86:54;;;;;4587:25:113;;;;4628:18;;;4621:34;4560:18;;8506:86:54;4413:248:113;8441:158:54;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;8656:50:54;8652:171;;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;8723:93:54;;-1:-1:-1;;;8723:93:54;;;;;4587:25:113;;;;4628:18;;;4621:34;4560:18;;8723:93:54;4413:248:113;8652:171:54;8885:31;8908:7;8885:22;:31::i;:::-;8881:140;;;8971:7;9004;8987:25;;;;;;3936:19:113;;3980:2;3971:12;;3775:214;8987:25:54;;;;-1:-1:-1;;8987:25:54;;;;;;;;;;-1:-1:-1;;;8933:81:54;;;;;;;;:::i;8881:140::-;9062:103;9074:7;9083:11;9096:9;9107:11;9131:8;9120:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;9153:10;9142:22;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9142:22:54;;;;;;;;;9062:11;:103::i;:::-;9201:37;9224:7;9233:4;9201:22;:37::i;:::-;7479:1764;;;;;;:::o;3195:520:17:-;3261:7;3274:13;3296:10;3290:17;;;;;;;;:::i;:::-;3274:33;;;;3324:2;3316:5;:10;3312:401;;;3568:2;3560:10;3574:1;3559:16;;;-1:-1:-1;;3195:520:17:o;3312:401::-;3610:18;3596:10;:32;;;;;;;;:::i;:::-;;3592:121;;-1:-1:-1;3643:2:17;;3195:520;-1:-1:-1;;3195:520:17:o;3592:121::-;-1:-1:-1;3707:1:17;;3195:520;-1:-1:-1;;3195:520:17:o;3592:121::-;3270:445;3195:520;;;:::o;6418:1197:37:-;6540:10;6539:11;:36;;;;-1:-1:-1;6022:45:37;;6554:21;6535:95;;;6584:46;;-1:-1:-1;;;6584:46:37;;6628:1;6584:46;;;3301:25:113;3274:18;;6584:46:37;3155:177:113;6535:95:37;6698:25;6726:30;:11;:28;:30::i;:::-;6698:58;;902:1:64;6766:17:37;:38;6762:113;;;6813:62;;-1:-1:-1;;;6813:62:37;;;;;3301:25:113;;;3274:18;;6813:62:37;3155:177:113;6762:113:37;6882:24;6909:29;:11;:27;:29::i;:::-;6882:56;-1:-1:-1;7013:23:37;7039:36;7058:17;6882:56;7039:36;:::i;:::-;7013:62;;647:2:64;7085:15:37;:34;7081:107;;;7128:60;;-1:-1:-1;;;7128:60:37;;;;;3301:25:113;;;3274:18;;7128:60:37;3155:177:113;7081:107:37;7236:9;7231:380;7251:16;7247:1;:20;7231:380;;;7279:24;7306:22;:11;7326:1;7306:19;:22::i;:::-;7279:49;;7340:16;7360:1;7340:21;7336:230;;7380:50;;-1:-1:-1;;;7380:50:37;;;;;;;;;;;7336:230;334:2:64;7449:16:37;:28;7445:121;;;7496:61;;-1:-1:-1;;;7496:61:37;;;;;;;;;;;7445:121;-1:-1:-1;7593:3:37;;7231:380;;5689:1683:51;5796:10;5795:11;:31;;;;-1:-1:-1;6022:45:37;;5810:16:51;5791:80;;;5835:36;;-1:-1:-1;;;5835:36:51;;5869:1;5835:36;;;3301:25:113;3274:18;;5835:36:51;3155:177:113;5791:80:51;5934:25;5962;:6;:23;:25::i;:::-;5934:53;;902:1:64;5997:17:51;:38;5993:103;;;6044:52;;-1:-1:-1;;;6044:52:51;;;;;3301:25:113;;;3274:18;;6044:52:51;3155:177:113;5993:103:51;6103:24;6130;:6;:22;:24::i;:::-;6103:51;-1:-1:-1;6224:23:51;6250:36;6269:17;6103:51;6250:36;:::i;:::-;6224:62;;647:2:64;6296:15:51;:34;6292:97;;;6339:50;;-1:-1:-1;;;6339:50:51;;;;;3301:25:113;;;3274:18;;6339:50:51;3155:177:113;6292:97:51;6448:25;6479:26;6516:9;6511:551;6531:15;6527:1;:19;6511:551;;;6604:1;6562:39;:17;:6;6577:1;6562:14;:17::i;:::-;:37;;;;;;;;:::i;:39::-;:43;6558:459;;;6666:16;6661:1;:21;6657:82;;6691:48;;-1:-1:-1;;;6691:48:51;;;;;;;;;;;6657:82;6771:19;;;;;6558:459;;;6873:16;6869:1;:20;6865:81;;;6898:48;;-1:-1:-1;;;6898:48:51;;;;;;;;;;;6865:81;6978:20;;;;;6558:459;7044:3;;6511:551;;;;7135:16;7114:17;:37;7110:102;;7160:52;;-1:-1:-1;;;7160:52:51;;;;;3301:25:113;;;3274:18;;7160:52:51;3155:177:113;7110:102:51;7288:17;7266:18;:39;7262:105;;7314:53;;-1:-1:-1;;;7314:53:51;;;;;3301:25:113;;;3274:18;;7314:53:51;3155:177:113;3569:314:61;3683:16;;;3697:1;3683:16;;;;;;;;;3635:11;;;;3683:16;;;;;;;;;;;;-1:-1:-1;3683:16:61;3654:45;;3738:10;3705:9;3715:1;3705:12;;;;;;;;:::i;:::-;;;;;;;;;;;:44;;;;1047:74;;;-1:-1:-1;;;1047:74:61;;;197:41:113;-1:-1:-1;;;254:11:113;;;247:58;-1:-1:-1;;;321:12:113;;;314:59;1047:74:61;;;;;;;;;;389:12:113;;1047:74:61;;-1:-1:-1;;3772:62:61;;1039:83;;;:::i;:::-;3807:9;3818:1;-1:-1:-1;;;3772:24:61;:62::i;:::-;3756:78;-1:-1:-1;3856:20:61;;;;3848:29;3840:38;3569:314;-1:-1:-1;;;;3569:314:61:o;20632:676:63:-;25186:53;;;;;;6079:19:113;;;6114:12;;;6107:28;;;25159:12:63;6151::113;;;6144:28;;;25186:53:63;;;;;;;;;;6188:12:113;;;;25186:53:63;;;20923:29;20955:55;20969:18;20989:20;20955:13;:55::i;:::-;20923:87;-1:-1:-1;21016:25:63;21044:55;21058:18;21078:20;21044:13;:55::i;:::-;21135:16;;;21149:1;21135:16;;;;;;;;;21016:83;;-1:-1:-1;21106:26:63;;21135:16;;;;;;;;;;;;-1:-1:-1;21135:16:63;21106:45;;21190:7;21157:9;21167:1;21157:12;;;;;;;;:::i;:::-;;;;;;;;;;;:41;;;;1147:69;;;-1:-1:-1;;;1147:69:63;;;197:41:113;-1:-1:-1;;;254:11:113;;;247:58;-1:-1:-1;;;321:12:113;;;314:59;1147:69:63;;;;;;;;;;389:12:113;;1147:69:63;;21205:98;;1139:78;;;:::i;:::-;21235:9;21246:11;21259:15;21276:12;-1:-1:-1;;;21205:19:63;:98::i;:::-;20834:474;;;;20632:676;;;;;;:::o;4933:268:61:-;5033:16;;;5047:1;5033:16;;;;;;;;;5004:26;;5033:16;;;;;;;;;;;-1:-1:-1;5033:16:61;5004:45;;5088:10;5055:9;5065:1;5055:12;;;;;;;;:::i;:::-;;;;;;;;;;;:44;;;;1047:74;;;-1:-1:-1;;;1047:74:61;;;197:41:113;-1:-1:-1;;;254:11:113;;;247:58;-1:-1:-1;;;321:12:113;;;314:59;1047:74:61;;;;;;;;;;389:12:113;;1047:74:61;;5106:90;;1039:83;;;:::i;:::-;5141:9;5152:1;5173:6;5155:26;;;;;;5750:14:113;5743:22;5738:3;5734:32;5722:45;;5792:1;5783:11;;5599:201;5155:26:61;;;;-1:-1:-1;;5155:26:61;;;;;;;;;-1:-1:-1;;;5106:24:61;:90::i;:::-;4998:203;4933:268;;:::o;5098:173:37:-;5172:7;537:1:64;1597;;1577:13;1589:1;334:2;1577:13;:::i;:::-;:17;;;;:::i;:::-;:21;;;;:::i;:::-;1576:38;;;;:::i;:::-;5208:11:37;5187:79;5200:65;;5187:79;;5098:173;-1:-1:-1;;5098:173:37:o;4700:171::-;4773:7;537:1:64;1425;1409:13;1421:1;334:2;1409:13;:::i;3883:217:37:-;4044:19;:27;;;537:1:64;4043:44:37;4009:79;;;3996:93;;3883:217;;;;;:::o;3948:206:51:-;4018:10;4108:19;:27;;;4139:1;4107:33;4086:6;4061:82;4078:63;;4061:82;;;;;;;;;:::i;:::-;4054:89;3948:206;-1:-1:-1;;;3948:206:51:o;35212:541:54:-;35369:7;35506:242;35550:59;35591:7;35600:8;35550:40;:59::i;:::-;35627:31;:11;:31;;;:19;:31::i;:::-;35676:63;35715:11;35728:10;35676:38;:63::i;:::-;35506:17;:242::i;:::-;35493:255;35212:541;-1:-1:-1;;;;;35212:541:54:o;25435:388:63:-;25561:29;25721:91;25749:18;25743:32;25783:20;25777:34;25721:21;;;:91;;:::i;25988:234::-;26114:12;26165:18;26194:20;26141:76;;;;;;;;;:::i;:::-;;;;;;;;;;;;;26134:83;;25988:234;;;;:::o;12721:3002:54:-;12994:7;12978:75;13003:8;13013:10;13025:14;13041:11;12978:75;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;13118:7:54;-1:-1:-1;;;;;;13118:35:54;;13163:7;13114:62;13314:22;13339:24;13355:7;13339:15;:24::i;:::-;13314:49;;13374:9;13369:340;13389:5;:12;13385:1;:16;13369:340;;;13416:9;13438:5;13444:1;13438:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;13459:33:54;-1:-1:-1;;;;;;13459:14:54;;343:6:66;13459:14:54;:33::i;:::-;13455:248;;;13504:190;;-1:-1:-1;;;13504:190:54;;3392:35:38;;;;;13504:47:54;;:190;;13563:7;;13582:8;;13602:10;;13624:14;;13650:11;;13673;;13504:190;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13455:248;-1:-1:-1;13403:3:54;;;;:::i;:::-;;;;13369:340;;;-1:-1:-1;13772:26:54;13801:59;13842:7;13851:8;13801:40;:59::i;:::-;13772:88;-1:-1:-1;13866:21:54;826:4:48;816:15;;13866:54:54;;13926:149;13964:18;13998:1;14022:13;14051:10;:17;13926:13;;;:149;;:::i;:::-;14175:1;14142:30;:11;:28;:30::i;:::-;:34;14138:1174;;;14261:33;14297:66;14345:7;14354:8;14297:47;:66::i;:::-;579:28:53;;;14261:102:54;-1:-1:-1;826:4:48;816:15;;14537:47:54;;14693:27;14728:25;14766:7;14761:545;14779:30;:11;:28;:30::i;:::-;14775:1;:34;;;14761:545;;;14845:63;14887:7;14896:8;14906:1;14845:41;:63::i;:::-;14823:85;-1:-1:-1;14938:25:54;:14;14961:1;6743:16:49;;862:5;6743:16;785:5;6732:27;6692:68;6670:92;;;6555:218;14938:25:54;14918:45;-1:-1:-1;14973:170:54;15015:19;15054:1;15082:13;14918:45;14973:13;:170::i;:::-;15153:34;15170:17;15153:34;;:::i;:::-;;-1:-1:-1;15284:3:54;;14761:545;;;;14178:1134;;;14138:1174;15386:9;15381:338;15401:5;:12;15397:1;:16;15381:338;;;15428:9;15450:5;15456:1;15450:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;15471:32:54;-1:-1:-1;;;;;;15471:14:54;;437:6:66;15471:14:54;:32::i;:::-;15467:246;;;15515:189;;-1:-1:-1;;;15515:189:54;;3392:35:38;;;;;15515:46:54;;:189;;15573:7;;15592:8;;15612:10;;15634:14;;15660:11;;15683;;15515:189;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15467:246;-1:-1:-1;15415:3:54;;;;:::i;:::-;;;;15381:338;;22277:355;22449:178;22483:7;22508:8;22538:63;22577:11;22590:10;22538:38;:63::i;:::-;22616:4;22449:16;:178::i;:::-;22277:355;;;;;:::o;49619:191::-;49721:7;49785;49794:8;49768:35;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;49768:35:54;;;;;;;;;49758:46;;49768:35;49758:46;;;;41226:22;49751:53;;49619:191;-1:-1:-1;;;49619:191:54:o;50636:242::-;50732:7;;;50771:84;50791:10;50787:14;;:1;:14;50771:84;;;50826:22;:11;50846:1;50826:19;:22::i;:::-;50816:32;;;;:::i;:::-;;-1:-1:-1;50803:3:54;;;;:::i;:::-;;;;50771:84;;;-1:-1:-1;50867:6:54;50636:242;-1:-1:-1;;;50636:242:54:o;8680:790:53:-;8778:14;8814:2;8804:6;:12;8800:112;;8873:2;8864:6;:11;8846:29;;;;8895:2;8885:12;;;;;;:::i;:::-;;;;8800:112;-1:-1:-1;9092:21:53;;9088:1;9076:14;;9072:42;9240:2;:11;;;9322:22;;;9318:148;;;9447:1;9431:14;9427:22;9421:29;9417:1;9402:13;9398:21;9394:57;9386:6;9383:69;9373:79;;8794:676;8680:790;;;;;:::o;2236:344:49:-;2489:23;2474:39;;;785:5;2408:39;;;2377:5;;;2390:58;2456;2236:344;;;;:::o;4372:342:62:-;4488:16;;;4502:1;4488:16;;;;;;;;;4429:22;;4459:26;;4488:16;;;;;;;;;;;;-1:-1:-1;4488:16:62;4459:45;;4543:7;4510:9;4520:1;4510:12;;;;;;;;:::i;:::-;;;;;;;;;;;:41;;;;1047:73;;;-1:-1:-1;;;1047:73:62;;;197:41:113;-1:-1:-1;;;254:11:113;;;247:58;-1:-1:-1;;;321:12:113;;;314:59;1047:73:62;;;;;;;;;;389:12:113;;1047:73:62;;-1:-1:-1;;4579:49:62;;1039:82;;;:::i;:::-;4615:9;4626:1;4579:25;:49::i;:::-;4558:70;;4642:66;:44;4663:5;4670:1;4673:5;:12;4642:20;;;:44;;:::i;:::-;:64;:66::i;2891:136:38:-;2961:4;2980:42;;;3013:9;2981:15;2991:4;3790:26;;;3660:162;2981:15;:27;2980:42;;;2973:49;;2891:136;;;;:::o;1373:2326:53:-;1486:10;;1482:1491;;1639:2;1629:6;:12;1625:122;;1702:2;1693:6;:11;1675:29;;;;1726:2;1716:12;;;;;;:::i;:::-;;;;1625:122;1837:10;;1833:1134;;2045:2;:11;;;1919:21;-1:-1:-1;;1080:1:65;1067:14;;1045:37;1043:40;2077:31:53;;2277:1;2269:6;2265:14;2313:4;2302:9;2298:20;2290:28;;2368:13;2362:20;2351:9;2347:36;2329:54;;2616:4;2612:9;2595:14;2589:21;2585:37;2516:4;2504:10;2500:21;2443:193;2415:14;2395:253;;2707:13;2697:6;:23;2693:36;;2722:7;;;;2693:36;-1:-1:-1;2870:1:53;2852:19;;;;;2883:30;;;;2925:23;;1833:1134;3003:253;3020:2;3010:6;:12;3003:253;;3115:20;;3092:44;;3189:1;3171:19;;;;3217:2;3200:19;;;;-1:-1:-1;;3229:12:53;3003:253;;;3324:10;;3320:375;;3626:21;;3542:20;;-1:-1:-1;;1080:1:65;1067:14;;1045:37;3622::53;;;1043:40:65;;3538:31:53;3487:184;3443:238;;3320:375;1373:2326;;;;:::o;52184:230:54:-;52305:7;52389;52398:8;52372:35;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;52372:35:54;;;;;;;;;52362:46;;52372:35;52362:46;;;;41389:40;52335:73;;52184:230;-1:-1:-1;;;52184:230:54:o;51555:274::-;51699:7;51804;51813:8;51787:35;;;;;;;;;:::i;:::-;;;;;;;;;;;;;51777:46;;;;;;51756:17;51749:25;;-1:-1:-1;;;;;51729:45:54;;41298:34;51729:45;:94;51721:103;;51714:110;;51555:274;;;;;:::o;16359:1506::-;16480:16;16499:59;16540:7;16549:8;16499:40;:59::i;:::-;16480:78;;16660:7;16616:100;16679:8;16696:5;16709:4;16616:100;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;16781:7:54;-1:-1:-1;;;;;;16781:35:54;;16777:62;;16826:7;;;16777:62;16984:22;17009:24;17025:7;17009:15;:24::i;:::-;16984:49;;17044:9;17039:328;17059:5;:12;17055:1;:16;17039:328;;;17086:9;17108:5;17114:1;17108:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;17129:41:54;-1:-1:-1;;;;;;17129:14:54;;548:6:66;17129:14:54;:41::i;:::-;17125:236;;;17182:170;;-1:-1:-1;;;17182:170:54;;3392:35:38;;;;;17182:54:54;;:170;;17258:7;;17287:8;;17314:5;;17337:4;;17182:170;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17125:236;-1:-1:-1;17073:3:54;;;;:::i;:::-;;;;17039:328;;;-1:-1:-1;17416:70:54;17448:8;17416:70;;;17479:4;17416:13;:70::i;:::-;17540:9;17535:326;17555:5;:12;17551:1;:16;17535:326;;;17582:9;17604:5;17610:1;17604:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;17625:40:54;-1:-1:-1;;;;;;17625:14:54;;657:6:66;17625:14:54;:40::i;:::-;17621:234;;;17677:169;;-1:-1:-1;;;17677:169:54;;3392:35:38;;;;;17677:53:54;;:169;;17752:7;;17781:8;;17808:5;;17831:4;;17677:169;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17621:234;-1:-1:-1;17569:3:54;;;;:::i;:::-;;;;17535:326;;36221:522;36357:12;36481:257;36520:79;36562:7;36571:8;36581:17;36520:41;:79::i;:::-;36617:93;36692:17;36617:66;36665:7;36674:8;36617:47;:66::i;:::-;:74;6743:16:49;;862:5;6743:16;785:5;6732:27;6692:68;6670:92;;;6555:218;36617:93:54;36728:1;36481:12;:257::i;2022:570:52:-;2113:5;2211:3;2202:5;:12;;:34;;;;;2225:4;:11;2218:3;:18;;2202:34;2196:85;;2264:4;2270:5;2277:3;2246:35;;-1:-1:-1;;;2246:35:52;;;;;;;;;;:::i;2196:85::-;2349:4;2339:15;;2396:17;2408:5;2339:15;2396:17;:::i;:::-;;-1:-1:-1;2419:12:52;2434:11;2440:5;2434:3;:11;:::i;:::-;-1:-1:-1;;;;;2570:15:52;2562:3;2550:15;;;;2549:37;;;;;;-1:-1:-1;;;;;2022:570:52:o;40037:220:68:-;40103:24;40135:30;40168:32;40186:6;40194:2;40135:30;40168:17;:32::i;850:162:53:-;939:68;945:14;961:6;826:4:48;816:15;;995:11:53;;939:5;:68::i;52752:301:54:-;52873:13;52965:82;52996:48;53026:7;53035:8;52996:29;:48::i;:::-;4572:21:53;;4466:137;4903:665;5315:4;5309:11;5356:4;5344:17;;-1:-1:-1;;5234:14:53;5403:26;;;5234:14;5230:28;5375:4;5368:63;5460:22;;;5493:51;5498:14;5475:6;5522;5530:13;5493:4;:51::i;2631:1127:70:-;2751:22;2781:21;2805;:11;2946:3:52;2924:25;;2850:104;2805:21:70;2781:45;-1:-1:-1;;;;;;3187:38:52;;2832:20:70;2994:11;3187:38:52;2994:11:70;2979:26;;;;:::i;:::-;;2965:40;;3114:4;3108:11;3099:20;;3157:4;3150:5;3146:16;3217:2;3204:11;3200:20;3186:12;3182:39;3176:4;3169:53;3265:11;3258:5;3251:26;3308:1;3285:463;3324:11;3321:1;3318:18;3285:463;;;3718:20;;3697:42;;3676:64;;3590:31;;;;3503:4;3485:23;;;;3411:1;3404:9;3285:463;;;3289:28;;3066:688;;;2631:1127;;;;;:::o;5933:2258:53:-;6050:10;;6046:1421;;6203:2;6193:6;:12;6189:122;;6266:2;6257:6;:11;6239:29;;;;6290:2;6280:12;;;;;;:::i;:::-;;;;6189:122;6401:10;;6397:1064;;6609:2;:11;;;6483:21;-1:-1:-1;;1080:1:65;1067:14;;1045:37;1043:40;6641:38:53;;6863:14;6857:21;6853:1;6845:6;6841:14;6837:42;7110:4;7106:9;7090:13;7084:20;7080:36;7011:4;6999:10;6995:21;6938:192;6911:13;6891:251;;7201:13;7191:6;:23;7187:36;;7216:7;;;;7187:36;-1:-1:-1;7364:1:53;7346:19;;;;;7419:23;;;;;7377:30;6397:1064;7496:253;7513:2;7503:6;:12;7496:253;;7607:21;;7585:44;;7682:1;7664:19;;;;-1:-1:-1;;7722:12:53;;;;7710:2;7693:19;7496:253;;;7817:10;;7813:374;;7837:12;-1:-1:-1;;1080:1:65;1067:14;;1045:37;1043:40;8119:20:53;;8034:21;;8030:32;;8141:9;;8115:36;7979:184;7936:237;;-1:-1:-1;5933:2258:53;;;;:::o;412:297:113:-;530:12;;577:4;566:16;;;560:23;;530:12;595:16;;592:111;;;-1:-1:-1;;669:4:113;665:17;;;;662:1;658:25;654:38;643:50;;412:297;-1:-1:-1;412:297:113:o;846:127::-;907:10;902:3;898:20;895:1;888:31;938:4;935:1;928:15;962:4;959:1;952:15;978:127;1039:10;1034:3;1030:20;1027:1;1020:31;1070:4;1067:1;1060:15;1094:4;1091:1;1084:15;1110:250;1195:1;1205:113;1219:6;1216:1;1213:13;1205:113;;;1295:11;;;1289:18;1276:11;;;1269:39;1241:2;1234:10;1205:113;;;-1:-1:-1;;1352:1:113;1334:16;;1327:27;1110:250::o;1365:271::-;1407:3;1445:5;1439:12;1472:6;1467:3;1460:19;1488:76;1557:6;1550:4;1545:3;1541:14;1534:4;1527:5;1523:16;1488:76;:::i;:::-;1618:2;1597:15;-1:-1:-1;;1593:29:113;1584:39;;;;1625:4;1580:50;;1365:271;-1:-1:-1;;1365:271:113:o;1641:592::-;1693:3;1724;1756:5;1750:12;1783:6;1778:3;1771:19;1809:4;1838:2;1833:3;1829:12;1822:19;;1894:2;1884:6;1881:1;1877:14;1870:5;1866:26;1862:35;1931:2;1924:5;1920:14;1952:1;1962:245;1976:6;1973:1;1970:13;1962:245;;;2063:2;2059:7;2051:5;2045:4;2041:16;2037:30;2032:3;2025:43;2089:38;2122:4;2113:6;2107:13;2089:38;:::i;:::-;2185:12;;;;2081:46;-1:-1:-1;2150:15:113;;;;1998:1;1991:9;1962:245;;;-1:-1:-1;2223:4:113;;1641:592;-1:-1:-1;;;;;;;1641:592:113:o;2238:912::-;2768:6;2757:9;2750:25;2811:6;2806:2;2795:9;2791:18;2784:34;2854:6;2849:2;2838:9;2834:18;2827:34;2897:6;2892:2;2881:9;2877:18;2870:34;2941:3;2935;2924:9;2920:19;2913:32;2731:4;2968:56;3019:3;3008:9;3004:19;2996:6;2968:56;:::i;:::-;3073:9;3065:6;3061:22;3055:3;3044:9;3040:19;3033:51;3101:43;3137:6;3129;3101:43;:::i;:::-;3093:51;2238:912;-1:-1:-1;;;;;;;;;2238:912:113:o;3337:127::-;3398:10;3393:3;3389:20;3386:1;3379:31;3429:4;3426:1;3419:15;3453:4;3450:1;3443:15;3469:128;3536:9;;;3557:11;;;3554:37;;;3571:18;;:::i;3602:168::-;3675:9;;;3706;;3723:15;;;3717:22;;3703:37;3693:71;;3744:18;;:::i;3994:414::-;4250:5;4245:3;4241:15;4233:6;4229:28;4218:9;4211:47;4294:6;4289:2;4278:9;4274:18;4267:34;4337:2;4332;4321:9;4317:18;4310:30;4192:4;4357:45;4398:2;4387:9;4383:18;4375:6;4357:45;:::i;4666:323::-;4875:6;4864:9;4857:25;4918:2;4913;4902:9;4898:18;4891:30;4838:4;4938:45;4979:2;4968:9;4964:18;4956:6;4938:45;:::i;4994:280::-;5193:2;5182:9;5175:21;5156:4;5213:55;5264:2;5253:9;5249:18;5241:6;5213:55;:::i;5469:125::-;5534:9;;;5555:10;;;5552:36;;;5568:18;;:::i;6211:492::-;6386:3;6424:6;6418:13;6440:66;6499:6;6494:3;6487:4;6479:6;6475:17;6440:66;:::i;:::-;6569:13;;6528:16;;;;6591:70;6569:13;6528:16;6638:4;6626:17;;6591:70;:::i;:::-;6677:20;;6211:492;-1:-1:-1;;;;6211:492:113:o;6708:435::-;6761:3;6799:5;6793:12;6826:6;6821:3;6814:19;6852:4;6881:2;6876:3;6872:12;6865:19;;6918:2;6911:5;6907:14;6939:1;6949:169;6963:6;6960:1;6957:13;6949:169;;;7024:13;;7012:26;;7058:12;;;;7093:15;;;;6985:1;6978:9;6949:169;;;-1:-1:-1;7134:3:113;;6708:435;-1:-1:-1;;;;;6708:435:113:o;7148:691::-;7482:3;7471:9;7464:22;7445:4;7509:57;7561:3;7550:9;7546:19;7538:6;7509:57;:::i;:::-;7614:9;7606:6;7602:22;7597:2;7586:9;7582:18;7575:50;7648:33;7674:6;7666;7648:33;:::i;:::-;7634:47;;7717:6;7712:2;7701:9;7697:18;7690:34;7772:9;7764:6;7760:22;7755:2;7744:9;7740:18;7733:50;7800:33;7826:6;7818;7800:33;:::i;:::-;7792:41;7148:691;-1:-1:-1;;;;;;;7148:691:113:o;7844:900::-;8299:6;8288:9;8281:25;8342:3;8337:2;8326:9;8322:18;8315:31;8262:4;8369:57;8421:3;8410:9;8406:19;8398:6;8369:57;:::i;:::-;8474:9;8466:6;8462:22;8457:2;8446:9;8442:18;8435:50;8508:33;8534:6;8526;8508:33;:::i;:::-;8494:47;;8577:6;8572:2;8561:9;8557:18;8550:34;8633:9;8625:6;8621:22;8615:3;8604:9;8600:19;8593:51;8661:33;8687:6;8679;8661:33;:::i;:::-;8653:41;;;8731:6;8725:3;8714:9;8710:19;8703:35;7844:900;;;;;;;;;:::o;8749:135::-;8788:3;8809:17;;;8806:43;;8829:18;;:::i;:::-;-1:-1:-1;8876:1:113;8865:13;;8749:135::o;8889:640::-;9140:6;9135:3;9128:19;9110:3;9166:2;9199;9194:3;9190:12;9231:6;9225:13;9296:2;9288:6;9284:15;9317:1;9327:175;9341:6;9338:1;9335:13;9327:175;;;9404:13;;9390:28;;9440:14;;;;9477:15;;;;9363:1;9356:9;9327:175;;;-1:-1:-1;9518:5:113;;8889:640;-1:-1:-1;;;;;;;8889:640:113:o;9534:127::-;9595:10;9590:3;9586:20;9583:1;9576:31;9626:4;9623:1;9616:15;9650:4;9647:1;9640:15;9666:512;9917:2;9906:9;9899:21;9880:4;9943:56;9995:2;9984:9;9980:18;9972:6;9943:56;:::i;:::-;10047:14;10039:6;10035:27;10030:2;10019:9;10015:18;10008:55;10111:9;10103:6;10099:22;10094:2;10083:9;10079:18;10072:50;10139:33;10165:6;10157;10139:33;:::i;:::-;10131:41;9666:512;-1:-1:-1;;;;;;9666:512:113:o;10183:617::-;10494:6;10483:9;10476:25;10537:3;10532:2;10521:9;10517:18;10510:31;10457:4;10564:57;10616:3;10605:9;10601:19;10593:6;10564:57;:::i;:::-;10669:14;10661:6;10657:27;10652:2;10641:9;10637:18;10630:55;10733:9;10725:6;10721:22;10716:2;10705:9;10701:18;10694:50;10761:33;10787:6;10779;10761:33;:::i;10805:360::-;11008:2;10997:9;10990:21;10971:4;11028:45;11069:2;11058:9;11054:18;11046:6;11028:45;:::i;:::-;11104:2;11089:18;;11082:34;;;;-1:-1:-1;11147:2:113;11132:18;11125:34;11020:53;10805:360;-1:-1:-1;10805:360:113:o;:::-;494:2729:80;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102d35760003560e01c806385226c8111610186578063c290114c116100e3578063d9c03a0411610097578063e228a4a311610071578063e228a4a314610587578063ef6ea8621461059a578063fa7626d4146105ad57600080fd5b8063d9c03a041461056c578063dbbf0e21146104a4578063e20c9f711461057f57600080fd5b8063cccb4cda116100c8578063cccb4cda1461053e578063d03edb8c14610546578063d4285dc21461055957600080fd5b8063c290114c14610523578063cc49db7e1461052b57600080fd5b8063b047c1eb1161013a578063ba414fa61161011f578063ba414fa6146104d2578063c0a2895a146104ea578063c1122229146104fd57600080fd5b8063b047c1eb146104b7578063b5508aa9146104ca57600080fd5b8063916a17c61161016b578063916a17c6146104895780639f1fcf0a14610491578063a53417ed146104a457600080fd5b806385226c81146104615780638c364d591461047657600080fd5b80633708196e11610234578063419b58fd116101e8578063505a181d116101cd578063505a181d14610426578063530f4b601461043957806366d9a9a01461044c57600080fd5b8063419b58fd146103f15780634dc77d971461041357600080fd5b80633a77c2c2116102195780633a77c2c2146103c05780633e5e3c23146103e15780633f7286f4146103e957600080fd5b80633708196e1461039a578063390baae0146103ad57600080fd5b8063114a72661161028b5780631e788977116102705780631e7889771461035f5780631ed7831c14610372578063298314fb1461038757600080fd5b8063114a726614610339578063150f32621461034c57600080fd5b80630a028481116102bc5780630a028481146103165780630ba51f491461031e5780630e757a2e1461033157600080fd5b806305242d2f146102d85780630560912914610301575b600080fd5b6102eb6102e6366004615a9f565b6105ba565b6040516102f89190615b55565b60405180910390f35b61031461030f366004615b7f565b610607565b005b610314610615565b61031461032c366004615bab565b61072b565b610314610755565b610314610347366004615c83565b6107af565b61031461035a366004615c83565b61082a565b6102eb61036d366004615d10565b61089d565b61037a6108e7565b6040516102f89190615d6e565b610314610395366004615dbb565b610949565b6103146103a8366004615e54565b6109f0565b6103146103bb366004615e54565b610a6e565b6103d36103ce366004615eea565b610ae3565b6040519081526020016102f8565b61037a610af4565b61037a610b54565b6104046103ff366004615f03565b610bb4565b6040516102f893929190615f56565b6102eb610421366004616057565b610c09565b6103146104343660046160c0565b610c18565b610314610447366004616107565b610c22565b610454610c32565b6040516102f89190616143565b610469610d36565b6040516102f89190616281565b6103d3610484366004615a9f565b610e06565b610454610e49565b6103d361049f366004616294565b610f44565b6103d36104b23660046162f3565b610f5a565b6103146104c5366004616341565b610f71565b610469610fe4565b6104da6110b4565b60405190151581526020016102f8565b6103146104f83660046163d0565b6111f6565b7f312e302e302d756e6175646974656400000000000000000000000000000000006103d3565b61031461126c565b61040461053936600461645d565b6112e8565b61031461133a565b6102eb610554366004615d10565b6115ef565b6103d3610567366004615eea565b611630565b61031461057a366004615a9f565b61163b565b61037a611683565b6103d3610595366004615eea565b6116e3565b6103146105a8366004615c83565b6116ee565b6000546104da9060ff1681565b60606105fd868686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508892508791506117619050565b9695505050505050565b61061182826117a6565b5050565b6106536040518060400160405280601a81526020017f7265676973746572204b6579456e636f64696e67207461626c6500000000000081525061180d565b61065b611ac9565b610663611b58565b60408051613a3160f11b60208201526473746f726560d81b60228201527f4b6579456e636f64696e6700000000000000000000000000000000000000000060308201526000916106cb91016040516020818303038152906040526106c6906164a9565b611dcc565b90506000630101000160d81b5b9050610611826040516020016106f091815260200190565b60408051601f198184030181528282528051602091820120908301859052910160405160208183030381529060405280519060200120611e9c565b61074b8888888861073c888a6164f5565b61074687896164f5565b611fa6565b5050505050505050565b61075d611ac9565b61077e602a60291961048d60f21b6001600160a01b03600160036001612293565b600061079f602a60291961048d60f21b6001600160a01b036001600361244c565b90506107ac8160016125fc565b50565b6108228686868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f8901819004810282018101909252878152899350915087908790819084018382808284376000920191909152506127e692505050565b505050505050565b6108228686868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f89018190048102820181019092528781528993509150879087908190840183828082843760009201919091525061280192505050565b60606108de8585858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525087925061283c915050565b95945050505050565b6060600d80548060200260200160405190810160405280929190818152602001828054801561093f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610921575b5050505050905090565b61074b8888888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a915089908190840183828082843760009201919091525050604080516020601f8a018190048102820181019092528881528a93509150889088908190840183828082843760009201919091525061287692505050565b610a658787878080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f8a018190048102820181019092528881528a93509150889088908190840183828082843760009201919091525088925061288c915050565b50505050505050565b610a658787878080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f8a018190048102820181019092528881528a9350915088908890819084018382808284376000920191909152508892506128cf915050565b6000610aee82611dcc565b92915050565b6060600f80548060200260200160405190810160405280929190818152602001828054801561093f576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610921575050505050905090565b6060600e80548060200260200160405190810160405280929190818152602001828054801561093f576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610921575050505050905090565b606060006060610bf9878787808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508992506128e4915050565b9250925092509450945094915050565b60606105fd86868686866129ec565b6106118282612aa5565b610c2d838383612ab8565b505050565b60606012805480602002602001604051908101604052809291908181526020016000905b82821015610d2d5760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610d1557602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411610cc25790505b50505050508152505081526020019060010190610c56565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b82821015610d2d578382906000526020600020018054610d79906165a5565b80601f0160208091040260200160405190810160405280929190818152602001828054610da5906165a5565b8015610df25780601f10610dc757610100808354040283529160200191610df2565b820191906000526020600020905b815481529060010190602001808311610dd557829003601f168201915b505050505081526020019060010190610d5a565b60006105fd86868680806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250889250879150612b449050565b60606013805480602002602001604051908101604052809291908181526020016000905b82821015610d2d5760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610f2c57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411610ed95790505b50505050508152505081526020019060010190610e6d565b60006108de85858585612b71565b949350505050565b6000610f67848484612bb9565b90505b9392505050565b6108228686868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f890181900481028201810190925287815289935091508790879081908401838280828437600092019190915250612bcf92505050565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015610d2d578382906000526020600020018054611027906165a5565b80601f0160208091040260200160405190810160405280929190818152602001828054611053906165a5565b80156110a05780601f10611075576101008083540402835291602001916110a0565b820191906000526020600020905b81548152906001019060200180831161108357829003601f168201915b505050505081526020019060010190611008565b60008054610100900460ff16156110d45750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156111f15760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c6564000000000000000000000000000000000000000000000000000082840152825180830384018152606083019093526000929091611179917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016165d9565b60408051601f198184030181529082905261119391616621565b6000604051808303816000865af19150503d80600081146111d0576040519150601f19603f3d011682016040523d82523d6000602084013e6111d5565b606091505b50915050808060200190518101906111ed919061663d565b9150505b919050565b61074b8888888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f89018190048102820181019092528781528b93508a925089918990899081908401838280828437600092019190915250612e2892505050565b611274611ac9565b60408051613a3160f11b60208201526473746f726560d81b60228201527f4b6579456e636f64696e6700000000000000000000000000000000000000000060308201526000916112dc91016040516020818303038152906040526112d7906164a9565b612e40565b905060006106d8612ea7565b60606000606061132b86868680806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250612f1f92505050565b92509250925093509350939050565b611342611ac9565b6000611363602a60291961048d60f21b6001600160a01b0360016003612f45565b905061137181516006613074565b611396816000815181106113875761138761665f565b6020026020010151602a611e9c565b6113bc816001815181106113ac576113ac61665f565b6020026020010151602919611e9c565b6113e5816002815181106113d2576113d261665f565b602002602001015161048d60f21b611e9c565b611410816003815181106113fb576113fb61665f565b60200260200101516001600160a01b03611e9c565b611435816004815181106114265761142661665f565b60200260200101516001611e9c565b61145a8160058151811061144b5761144b61665f565b60200260200101516003611e9c565b6114b0816000815181106114705761147061665f565b6020026020010151602a604051602001611493919060ff91909116815260200190565b6040516020818303038152906040526114ab906164a9565b611e9c565b6114ea816001815181106114c6576114c661665f565b6020026020010151602919604051602001611493919060009190910b815260200190565b611546816002815181106115005761150061665f565b602002602001015161048d60f21b60405160200161149391907fffffffffffffffffffffffffffffffff0000000000000000000000000000000091909116815260200190565b61158b8160038151811061155c5761155c61665f565b60200260200101516001600160a01b0360405160200161149391906001600160a01b0391909116815260200190565b6115bf816004815181106115a1576115a161665f565b60200260200101516001604051602001611493911515815260200190565b6107ac816005815181106115d5576115d561665f565b60200260200101516003604051602001611493919061668b565b60606108de8585858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525087925061316e915050565b6000610aee82613184565b61167c858585808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508792508691506131b29050565b5050505050565b6060600c80548060200260200160405190810160405280929190818152602001828054801561093f576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610921575050505050905090565b6000610aee82612e40565b6108228686868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f89018190048102820181019092528781528993509150879087908190840183828082843760009201919091525061320b92505050565b606061176c82613246565b8360ff1610156117895761178285858585613278565b9050610f52565b611782858561179785613246565b6117a190876166c9565b61283c565b60408051613a3160f11b60208201526473746f726560d81b60228201527f53746f7265486f6f6b730000000000000000000000000000000000000000000060308201526106119101604051602081830303815290604052611806906164a9565b83836132a5565b604080517f4777f3cf0000000000000000000000000000000000000000000000000000000081526004810191909152601460448201527f4741535f5245504f525445525f454e41424c4544000000000000000000000000606482015260006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90634777f3cf906084016020604051808303816000875af11580156118ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d2919061663d565b6118d95750565b601b80546118e6906165a5565b9050600014601b6040516020016118fd9190616773565b6040516020818303038152906040529061194d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119449190615b55565b60405180910390fd5b50601d8160405161195e9190616621565b9081526020016040518091039020546000148160405160200161198191906167f8565b604051602081830303815290604052906119c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119449190615b55565b50601b6119d582826168aa565b507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d1a5b36f6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611a3457600080fd5b505af1158015611a48573d6000803e3d6000fd5b505050505a601c55604080517f2bcd50e00000000000000000000000000000000000000000000000000000000081529051737109709ecfa91a80626ff3989d68f67f5b1dd12d91632bcd50e091600480830192600092919082900301818387803b158015611ab557600080fd5b505af115801561167c573d6000803e3d6000fd5b60408051613a3160f11b60208201526473746f726560d81b60228201527f4b6579456e636f64696e670000000000000000000000000000000000000000006030820152611b569101604051602081830303815290604052611b29906164a9565b630101000160d81b611b396133cc565b611b41612ea7565b611b49613560565b611b5161378a565b613801565b565b60005a604080517f4777f3cf0000000000000000000000000000000000000000000000000000000081526004810191909152601460448201527f4741535f5245504f525445525f454e41424c4544000000000000000000000000606482015260006024820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d90634777f3cf906084016020604051808303816000875af1158015611bff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c23919061663d565b611c2a5750565b600060a082601c54611c3c919061696a565b611c46919061696a565b611c5190600161697d565b905060008111611cbd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f676173207265706f7274206469646e27742075736520676173000000000000006044820152606401611944565b80601d601b604051611ccf9190616990565b90815260405190819003602001902055601e80546001810182556000919091527f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e35001611d1c601b8261699c565b50611db0601b8054611d2d906165a5565b80601f0160208091040260200160405190810160405280929190818152602001828054611d59906165a5565b8015611da65780601f10611d7b57610100808354040283529160200191611da6565b820191906000526020600020905b815481529060010190602001808311611d8957829003601f168201915b50505050506138ba565b604080516020810190915260008152601b90610c2d90826168aa565b60408051613a3160f11b60208201526473746f726560d81b6022820152655461626c657360d01b603082015260009101604051602081830303815290604052611e14906164a9565b8203611e4057507e60030220202000000000000000000000000000000000000000000000000000919050565b60408051613a3160f11b60208201526473746f726560d81b6022820152655461626c657360d01b6030820152610aee91611e939101604051602081830303815290604052611e8d906164a9565b846139b3565b60206000613a0c565b808214610611577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051611f289060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b62797460408201527f657333325d000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f9982604051611f5f9190616a6f565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f9981604051611f969190616aba565b60405180910390a1610611613a5e565b613a3160f11b867fffff000000000000000000000000000000000000000000000000000000000000161480159061201f57507f6f74000000000000000000000000000000000000000000000000000000000000867fffff0000000000000000000000000000000000000000000000000000000000001614155b1561208057613a3160f11b868760405160200161203e91815260200190565b60408051601f19818403018152908290527f31b46683000000000000000000000000000000000000000000000000000000008252611944939291600401616af7565b61208b856000613b9e565b612096846001613d20565b6120a1836000613d20565b60e084901c60e885901c0160ff168251146121015760e084901c60e885901c0160ff1682516040517f0f72cb9800000000000000000000000000000000000000000000000000000000815260048101929092526024820152604401611944565b60e085901c60e886901c0160ff168151146121615760e085901c60e886901c0160ff1681516040517f7dec4c0000000000000000000000000000000000000000000000000000000000815260048101929092526024820152604401611944565b60e085901c60e886901c0160ff1660e084901c60e885901c0160ff16146121d95760e085901c60e886901c0160ff1660e084901c60e885901c0160ff166040517ff29d4d8800000000000000000000000000000000000000000000000000000000815260048101929092526024820152604401611944565b6121e286613ecc565b1561223c5785866040516020016121fb91815260200190565b60408051601f19818403018152908290527fdfaaf9cf0000000000000000000000000000000000000000000000000000000082526119449291600401616b38565b61228886868686866040516020016122549190616281565b604051602081830303815290604052866040516020016122749190616281565b604051602081830303815290604052613f90565b610822866001614099565b60408051600680825260e082019092526000916020820160c0803683370190505090508760001b816000815181106122cd576122cd61665f565b6020026020010181815250508660030b60001b816001815181106122f3576122f361665f565b602002602001018181525050856fffffffffffffffffffffffffffffffff1916816002815181106123265761232661665f565b602002602001018181525050846001600160a01b031660001b816003815181106123525761235261665f565b602090810291909101015283816004815181106123715761237161665f565b60200260200101818152505082600381111561238f5761238f616675565b60ff1660001b816005815181106123a8576123a861665f565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b60228201527f4b6579456e636f64696e670000000000000000000000000000000000000000006030820152815180820390930183528101905261074b90612414906164a9565b8260008560405160200161242f91151560f81b815260010190565b60408051601f19818403018152919052630101000160d81b614173565b60408051600680825260e082019092526000918291906020820160c0803683370190505090508760001b816000815181106124895761248961665f565b6020026020010181815250508660030b60001b816001815181106124af576124af61665f565b602002602001018181525050856fffffffffffffffffffffffffffffffff1916816002815181106124e2576124e261665f565b602002602001018181525050846001600160a01b031660001b8160038151811061250e5761250e61665f565b6020908102919091010152838160048151811061252d5761252d61665f565b60200260200101818152505082600381111561254b5761254b616675565b60ff1660001b816005815181106125645761256461665f565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b60228201527f4b6579456e636f64696e67000000000000000000000000000000000000000000603082015281518082039093018352810190526000906125e3906125d3906164a9565b836000630101000160d81b61421c565b90506125ef8160f81c90565b9998505050505050505050565b80151582151514610611577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405161268c9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f60408201527f6c5d000000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583826126f5576040518060400160405280600581526020017f66616c736500000000000000000000000000000000000000000000000000000081525061272c565b6040518060400160405280600481526020017f74727565000000000000000000000000000000000000000000000000000000008152505b6040516127399190616b51565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816127a2576040518060400160405280600581526020017f66616c73650000000000000000000000000000000000000000000000000000008152506127d9565b6040518060400160405280600481526020017f74727565000000000000000000000000000000000000000000000000000000008152505b604051611f969190616ba0565b6127fb848484846127f689611dcc565b61288c565b50505050565b600061280d85856142d1565b9050600061282a828560ff166028026038011c64ffffffffff1690565b905061082286868684600088886142e4565b6060610f6761284c8585856146b8565b61286f8461285a88886142d1565b9060ff166028026038011c64ffffffffff1690565b6000614738565b61167c85858585856128878b611dcc565b61475b565b61289581613246565b8360ff1610156128b1576128ac85858585856128cf565b61167c565b61167c85856128bf84613246565b6128c990876166c9565b8561320b565b61167c85856128de8487614a4a565b85612bcf565b60606000606060006128f585614a85565b9050612902878783614aa8565b9350600061290f86614ae1565b905080156129e15761292188886142d1565b935066ffffffffffffff841667ffffffffffffffff81111561294557612945615f81565b6040519080825280601f01601f19166020018201604052801561296f576020820181803683370190505b5092506020830160005b828160ff1610156129de5760006129918b8b846146b8565b905060006129ae888460ff166028026038011c64ffffffffff1690565b90506129bd8282600087614afe565b6129c7818561697d565b9350505080806129d690616bdd565b915050612979565b50505b505093509350939050565b606060006129fa87876142d1565b90506000612a17828760ff166028026038011c64ffffffffff1690565b90508085101580612a2757508084115b15612a82578081861015612a4557612a4060018661696a565b612a47565b855b6040517f7e8578d300000000000000000000000000000000000000000000000000000000815260048101929092526024820152604401611944565b6000612a8f8989896146b8565b90506125ef81612a9f888861696a565b88614738565b6106118282612ab385611dcc565b614bb6565b613a3160f11b837fffff0000000000000000000000000000000000000000000000000000000000001614612b0057613a3160f11b838460405160200161203e91815260200190565b610c2d837fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606085901b166bff0000000000000000000000605885901b1617614e76565b60006108de612b538686614f5f565b60ff858116601b0360080285901c16612b6c8587614a4a565b613a0c565b600080612b7d83613246565b90508060ff168460ff161015612ba55760ff848116601b0360080284901c165b915050610f52565b612b9d8686612bb484886166c9565b614f74565b6000610f67848484612bca88611dcc565b612b71565b6000612bdb8585614f5f565b9050847f8c0b5119d4cec7b284c6b1b39252a03d1e2f2d7451a5895562524c113bb952be858585604051612c1193929190616c37565b60405180910390a2613a3160f11b857fffff0000000000000000000000000000000000000000000000000000000000001614612c4d57506127fb565b6000612c5886614f84565b905060005b8151811015612d37576000828281518110612c7a57612c7a61665f565b60200260200101519050612ca66004826affffffffffffffffffffff191661504c90919063ffffffff16565b15612d24576040517f964f667d000000000000000000000000000000000000000000000000000000008152606082901c9063964f667d90612cf1908b908b908b908b90600401616c6a565b600060405180830381600087803b158015612d0b57600080fd5b505af1158015612d1f573d6000803e3d6000fd5b505050505b5080612d2f81616cae565b915050612c5d565b50612d4b828565ffffffffffff168561506a565b60005b8151811015610a65576000828281518110612d6b57612d6b61665f565b60200260200101519050612d976008826affffffffffffffffffffff191661504c90919063ffffffff16565b15612e15576040517fa8ba8721000000000000000000000000000000000000000000000000000000008152606082901c9063a8ba872190612de2908b908b908b908b90600401616c6a565b600060405180830381600087803b158015612dfc57600080fd5b505af1158015612e10573d6000803e3d6000fd5b505050505b5080612e2081616cae565b915050612d4e565b610822868686868686612e3b8d8d6142d1565b6142e4565b6000612e4b8261507a565b9050806111f1578182604051602001612e6691815260200190565b60408051601f19818403018152908290527f41e713ad0000000000000000000000000000000000000000000000000000000082526119449291600401616b38565b60408051600180825281830190925260009182919060208083019080368337019050509050606081600081518110612ee157612ee161665f565b602002602001019060c5811115612efa57612efa616675565b908160c5811115612f0d57612f0d616675565b905250612f1981615133565b91505090565b606060006060612f388585612f3388611dcc565b6128e4565b9250925092509250925092565b60408051600680825260e08201909252606091600091906020820160c0803683370190505090508760001b81600081518110612f8357612f8361665f565b6020026020010181815250508660030b60001b81600181518110612fa957612fa961665f565b602002602001018181525050856fffffffffffffffffffffffffffffffff191681600281518110612fdc57612fdc61665f565b602002602001018181525050846001600160a01b031660001b816003815181106130085761300861665f565b602090810291909101015283816004815181106130275761302761665f565b60200260200101818152505082600381111561304557613045616675565b60ff1660001b8160058151811061305e5761305e61665f565b6020908102919091010152979650505050505050565b808214610611577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516131009060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e60408201527f745d000000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8826040516131379190616a6f565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051611f969190616aba565b6060610f6784848461317f88611dcc565b611761565b600061318f826152e9565b905061319a82613ecc565b6111f1578182604051602001612e6691815260200190565b60006131be85856142d1565b905060006131db828560ff166028026038011c64ffffffffff1690565b90506108228686866131f48764ffffffffff871661696a565b6040805160008152602081019091528890886142e4565b600061321785856142d1565b90506000613234828560ff166028026038011c64ffffffffff1690565b905061082286868660008588886142e4565b6000600860016132586002602061696a565b613262919061696a565b61326c9190616cc8565b8260ff911c1692915050565b60606108de6132878686614f5f565b60ff858116601b0360080285901c166132a08587614a4a565b614738565b60006132b184846153a2565b90506000815167ffffffffffffffff8111156132cf576132cf615f81565b6040519080825280602002602001820160405280156132f8578160200160208202803683370190505b5090506000805b83518110156133bd57846001600160a01b03166133438583815181106133275761332761665f565b60200260200101516affffffffffffffffffffff191660601c90565b6001600160a01b0316146133b5578381815181106133635761336361665f565b602002602001015183838151811061337d5761337d61665f565b7fffffffffffffffffffffffffffffffffffffffffff0000000000000000000000909216602092830291909101909101526001909101905b6001016132ff565b50808252610822868684615408565b60408051600680825260e082019092526000918291906020820160c080368337019050509050601f816000815181106134075761340761665f565b602002602001019060c581111561342057613420616675565b908160c581111561343357613433616675565b8152505060238160018151811061344c5761344c61665f565b602002602001019060c581111561346557613465616675565b908160c581111561347857613478616675565b81525050604f816002815181106134915761349161665f565b602002602001019060c58111156134aa576134aa616675565b908160c58111156134bd576134bd616675565b815250506061816003815181106134d6576134d661665f565b602002602001019060c58111156134ef576134ef616675565b908160c581111561350257613502616675565b8152505060608160048151811061351b5761351b61665f565b602002602001019060c581111561353457613534616675565b908160c581111561354757613547616675565b81525050600081600581518110612ee157612ee161665f565b60408051600680825260e08201909252606091816020015b60608152602001906001900390816135785790505090506040518060400160405280600281526020017f6b31000000000000000000000000000000000000000000000000000000000000815250816000815181106135d8576135d861665f565b60200260200101819052506040518060400160405280600281526020017f6b320000000000000000000000000000000000000000000000000000000000008152508160018151811061362c5761362c61665f565b60200260200101819052506040518060400160405280600281526020017f6b33000000000000000000000000000000000000000000000000000000000000815250816002815181106136805761368061665f565b60200260200101819052506040518060400160405280600281526020017f6b34000000000000000000000000000000000000000000000000000000000000815250816003815181106136d4576136d461665f565b60200260200101819052506040518060400160405280600281526020017f6b35000000000000000000000000000000000000000000000000000000000000815250816004815181106137285761372861665f565b60200260200101819052506040518060400160405280600281526020017f6b360000000000000000000000000000000000000000000000000000000000008152508160058151811061377c5761377c61665f565b602002602001018190525090565b604080516001808252818301909252606091816020015b60608152602001906001900390816137a15790505090506040518060400160405280600581526020017f76616c75650000000000000000000000000000000000000000000000000000008152508160008151811061377c5761377c61665f565b600061380b61545f565b9050306001600160a01b038216036138305761382b878787878787611fa6565b610a65565b6040517f0ba51f490000000000000000000000000000000000000000000000000000000081526001600160a01b03821690630ba51f499061387f908a908a908a908a908a908a90600401616cdf565b600060405180830381600087803b15801561389957600080fd5b505af11580156138ad573d6000803e3d6000fd5b5050505050505050505050565b6107ac7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b0316636900a3ae601d846040516138ff9190616621565b908152604051908190036020018120547fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1682526139489160040190815260200190565b600060405180830381865afa158015613965573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261398d9190810190616d1c565b8260405160200161399f929190616d8a565b604051602081830303815290604052615499565b60408051602081018490529081018290526000906060015b60408051601f1981840301815291905280516020909101207f86425bff6b57326c7859e89024fe4f238ca327a1ae4a230180dd2f0e88aaa7d9189392505050565b600060208210613a3257602082048401935060208281613a2e57613a2e616e0b565b0691505b508254600882021b602082900380841115613a56576001850154600882021c821791505b509392505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15613b705760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000009282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052613b0f92916020016165d9565b60408051601f1981840301815290829052613b2991616621565b6000604051808303816000865af19150503d8060008114613b66576040519150601f19603f3d011682016040523d82523d6000602084013e613b6b565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b80158015613baa575081155b15613be4576040517f97e36a0a00000000000000000000000000000000000000000000000000000000815260006004820152602401611944565b6000613bef83614ae1565b90506005811115613c2f576040517f97e36a0a00000000000000000000000000000000000000000000000000000000815260048101829052602401611944565b6000613c3a84613246565b90506000613c48838361697d565b9050601c811115613c88576040517f97e36a0a00000000000000000000000000000000000000000000000000000000815260048101829052602401611944565b60005b828110156108225760ff601b82900360080287901c166000819003613cdc576040517fbf1ac38300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6020811115613d17576040517f2392baa400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50600101613c8b565b80158015613d2c575081155b15613d4d57604051635318beb960e01b815260006004820152602401611944565b6000613d5883614ae1565b90506005811115613d7f57604051635318beb960e01b815260048101829052602401611944565b6000613d8a84613246565b90506000613d98838361697d565b9050601c811115613dbf57604051635318beb960e01b815260048101829052602401611944565b60008060005b83811015613e85576000613df2613ddc8a8461550a565b60c5811115613ded57613ded616675565b61552b565b1115613e3c57848110613e31576040517ff1e56be400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600190920191613e7d565b84811015613e76576040517ff1e56be400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001909101905b600101613dc5565b50838214613ea957604051635318beb960e01b815260048101839052602401611944565b848114610a6557604051635318beb960e01b815260048101829052602401611944565b604080516001808252818301909252600091829190602080830190803683370190505090508281600081518110613f0557613f0561665f565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b60228201527f5265736f7572636549647300000000000000000000000000000000000000000060308201528151808203909301835281019052600090613f8490613f74906164a9565b836000630101000160d81b612b44565b9050610f528160f81c90565b604080516020810187905280820186905260608082018690528251808303909101815260809091019091526000613fc7848461558b565b90506000613fd585856155a8565b6040805160018082528183019092529192506000919060208083019080368337019050509050898160008151811061400f5761400f61665f565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b6022820152655461626c657360d01b6030820152815180820390930183528101905261408d90614064906164a9565b828686867e6003022020200000000000000000000000000000000000000000000000000061475b565b50505050505050505050565b6040805160018082528183019092526000916020808301908036833701905050905082816000815181106140cf576140cf61665f565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b60228201527f5265736f7572636549647300000000000000000000000000000000000000000060308201528151808203909301835281019052610c2d9061413b906164a9565b8260008560405160200161415691151560f81b815260010190565b60408051601f19818403018152919052630101000160d81b6128cf565b600061417d61545f565b9050306001600160a01b038216036141a15761419c86868686866128cf565b610822565b6040517f390baae00000000000000000000000000000000000000000000000000000000081526001600160a01b0382169063390baae0906141ee9089908990899089908990600401616e21565b600060405180830381600087803b15801561420857600080fd5b505af115801561408d573d6000803e3d6000fd5b60008061422761545f565b9050306001600160a01b0382160361424557612b9d86868686612b44565b6040517f8c364d590000000000000000000000000000000000000000000000000000000081526001600160a01b03821690638c364d5990614290908990899089908990600401616e68565b602060405180830381865afa1580156142ad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b9d9190616e97565b6000610f6a6142e084846155d4565b5490565b613a3160f11b877fffff000000000000000000000000000000000000000000000000000000000000161461432c57613a3160f11b878860405160200161203e91815260200190565b6000614347828760ff166028026038011c64ffffffffff1690565b9050600083518564ffffffffff1683614360919061696a565b61436a919061697d565b905080821415801561438c5750816143828688616eb0565b64ffffffffff1614155b156143dc576040517fa65010b400000000000000000000000000000000000000000000000000000000815264ffffffffff8088166004830152808716602483015283166044820152606401611944565b818664ffffffffff16111561442d576040517f7e8578d30000000000000000000000000000000000000000000000000000000081526004810183905264ffffffffff87166024820152604401611944565b600061443a84898461562a565b905064ffffffffff871660005b8960ff168160ff16101561447a5761446e868260ff166028026038011c64ffffffffff1690565b90910190600101614447565b508a7faa63765a776145e5e6492f471ae097dfed11cd57a61bc2679dd43180422385b48b838a868b6040516144b3959493929190616ed5565b60405180910390a25060006144c78b614f84565b905060005b815181101561459c5760008282815181106144e9576144e961665f565b602002602001015190506145156010826affffffffffffffffffffff191661504c90919063ffffffff16565b1561458957606081901c6001600160a01b03166355eb5a288e8e8e8e8e8a8f6040518863ffffffff1660e01b81526004016145569796959493929190616f27565b600060405180830381600087803b15801561457057600080fd5b505af1158015614584573d6000803e3d6000fd5b505050505b508061459481616cae565b9150506144cc565b508284146145b55760006145b08c8c6155d4565b839055505b60006145c28c8c8c6146b8565b90506145d6818a64ffffffffff168961506a565b5060005b81518110156146aa5760008282815181106145f7576145f761665f565b602002602001015190506146236020826affffffffffffffffffffff191661504c90919063ffffffff16565b1561469757606081901c6001600160a01b031663635845338e8e8e8e8e8a8f6040518863ffffffff1660e01b81526004016146649796959493929190616f27565b600060405180830381600087803b15801561467e57600080fd5b505af1158015614692573d6000803e3d6000fd5b505050505b50806146a281616cae565b9150506145da565b505050505050505050505050565b600083836040516020016146cd929190616f85565b604051602081830303815290604052805190602001208260f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f3b4102da22e32d82fc925482184f16c09fd4281692720b87d124aef6da48a0f1181860001c90509392505050565b60405160208101601f19603f8584010116604052838252613a5685858584614afe565b857f8dbb3a9672eebfd3773e72dd9c102393436816d832c7ba9e1e1ac8fcadcac7a9868686866040516147919493929190616fb3565b60405180910390a2613a3160f11b867fffff00000000000000000000000000000000000000000000000000000000000016036108225760006147d287614f84565b905060005b81518110156148b55760008282815181106147f4576147f461665f565b602002602001015190506148206001826affffffffffffffffffffff191661504c90919063ffffffff16565b156148a2576040517f57066c9c000000000000000000000000000000000000000000000000000000008152606082901c906357066c9c9061486f908c908c908c908c908c908c90600401616ff2565b600060405180830381600087803b15801561488957600080fd5b505af115801561489d573d6000803e3d6000fd5b505050505b50806148ad81616cae565b9150506147d7565b5060006148c28888614f5f565b905060006020870190506148da826000838a516156f8565b60006148e585614ae1565b11156149695760006148f78a8a6155d4565b878155905060208601915060008060005b61491188614ae1565b8160ff161015614964576149268d8d836146b8565b92506149418a8260ff166028026038011c64ffffffffff1690565b915061495083600087856156f8565b61495a828661697d565b9450600101614908565b505050505b60005b835181101561408d5760008482815181106149895761498961665f565b602002602001015190506149b56002826affffffffffffffffffffff191661504c90919063ffffffff16565b15614a37576040517f5b28cdaf000000000000000000000000000000000000000000000000000000008152606082901c90635b28cdaf90614a04908e908e908e908e908e908e90600401616ff2565b600060405180830381600087803b158015614a1e57600080fd5b505af1158015614a32573d6000803e3d6000fd5b505050505b5080614a4281616cae565b91505061496c565b600080805b8360ff16811015613a5657614a7160ff601b83900360080287901c168361697d565b915080614a7d81616cae565b915050614a4f565b60006008614a956002602061696a565b614a9f9190616cc8565b9190911c919050565b606081600003614ac75750604080516020810190915260008152610f6a565b6000614ad38585614f5f565b90506108de81846000614738565b60006008600180614af46002602061696a565b613258919061696a565b8115614b705760208210614b2857602082048401935060208281614b2457614b24616e0b565b0691505b8115614b705760208290036000600019600883021c1990508554600885021b811984511682821617845250818511614b615750506127fb565b50600194909401939283900392015b5b60208310614b925783548152600190930192601f1990920191602001614b71565b82156127fb576000600019600885021c198251865482169119161782525050505050565b827f0e1f72f429eb97e64878619984a91e687ae91610348b9ff4216782cc96e49d0783604051614be6919061704b565b60405180910390a2613a3160f11b837fffff0000000000000000000000000000000000000000000000000000000000001614614c2157505050565b6000614c2c84614f84565b905060005b8151811015614d09576000828281518110614c4e57614c4e61665f565b60200260200101519050614c7a6040826affffffffffffffffffffff191661504c90919063ffffffff16565b15614cf6576040517f9faeaf45000000000000000000000000000000000000000000000000000000008152606082901c90639faeaf4590614cc39089908990899060040161705e565b600060405180830381600087803b158015614cdd57600080fd5b505af1158015614cf1573d6000803e3d6000fd5b505050505b5080614d0181616cae565b915050614c31565b506000614d168585614f5f565b9050614d6f816000614d2786614a85565b67ffffffffffffffff811115614d3f57614d3f615f81565b6040519080825280601f01601f191660200182016040528015614d69576020820181803683370190505b5061506a565b6000614d7a84614ae1565b1115614d9b576000614d8c86866155d4565b9050614d998160206157b8565b505b60005b8251811015610822576000838281518110614dbb57614dbb61665f565b60200260200101519050614de76080826affffffffffffffffffffff191661504c90919063ffffffff16565b15614e63576040517f83b5c95b000000000000000000000000000000000000000000000000000000008152606082901c906383b5c95b90614e30908a908a908a9060040161705e565b600060405180830381600087803b158015614e4a57600080fd5b505af1158015614e5e573d6000803e3d6000fd5b505050505b5080614e6e81616cae565b915050614d9e565b604080516001808252818301909252600091602080830190803683370190505090508281600081518110614eac57614eac61665f565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b60228201527f53746f7265486f6f6b730000000000000000000000000000000000000000000060308201528151808203909301835281019052610c2d90614f18906164a9565b6040517fffffffffffffffffffffffffffffffffffffffffff00000000000000000000008516602082015283906000906035016040516020818303038152906040526157f5565b600082826040516020016139cb929190616f85565b6000610f678261285a86866142d1565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110614fbe57614fbe61665f565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b60228201527f53746f7265486f6f6b7300000000000000000000000000000000000000000000603082015281518082039093018352810190526000906150359061502d906164a9565b83600061283c565b9050610f5261504782600084516158a1565b615931565b60008160ff168261505d8560581c90565b1660ff1614905092915050565b610c2d83836020840184516156f8565b6040805160018082528183019092526000918291906020808301908036833701905050905082816000815181106150b3576150b361665f565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b6022820152655461626c657360d01b60308201528151808203909301835281019052600090610f529061510b906164a9565b8360027e60030220202000000000000000000000000000000000000000000000000000612b44565b6000601c8251111561515d578151604051635318beb960e01b815260040161194491815260200190565b60008080805b855181101561523357600061519c8783815181106151835761518361665f565b602002602001015160c5811115613ded57613ded616675565b9050806000036151b1576001909201916151e9565b82156151e9576040517ff1e56be400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80840193506008826004601f03030287838151811061520a5761520a61665f565b602002602001015160c581111561522357615223616675565b901b949094179350600101615163565b50600581111561525957604051635318beb960e01b815260048101829052602401611944565b8451819003600861526c6002602061696a565b6152769190616cc8565b83901b93909317926008600161528e6002602061696a565b615298919061696a565b6152a29190616cc8565b81901b939093179260086001806152bb6002602061696a565b6152c5919061696a565b6152cf919061696a565b6152d99190616cc8565b9190911b92909217949350505050565b6040805160018082528183019092526000918291906020808301908036833701905050905082816000815181106153225761532261665f565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b6022820152655461626c657360d01b60308201528151808203909301835281019052600090610f529061537a906164a9565b8360017e60030220202000000000000000000000000000000000000000000000000000612b44565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106153dc576153dc61665f565b60200260200101818152505060006153f68583600061283c565b90506108de61504782600084516158a1565b60408051600180825281830190925260009160208083019080368337019050509050828160008151811061543e5761543e61665f565b6020026020010181815250506127fb8482600061545a86615942565b61320b565b7f629a4c26e296b22a8e0856e9f6ecb2d1008d7e00081111962cd175fa7488e175546000906001600160a01b0316806111f1573391505090565b6107ac816040516024016154ad9190615b55565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac00000000000000000000000000000000000000000000000000000000179052615952565b6000601b8290036008028360ff911c1660c5811115610f6a57610f6a616675565b6000808260c581111561554057615540616675565b60ff169050606181101561555a57601f1660010192915050565b60618360c581111561556e5761556e616675565b0361557c5750601492915050565b50600092915050565b50919050565b8151815160009181810160389190911b1760609190911b17610f6a565b606082826040516020016155bd929190617087565b604051602081830303815290604052905092915050565b600082826040516020016155e9929190616f85565b60408051601f1981840301815291905280516020909101207f14e2fcc58e58e68ec7edc30c8d50dccc3ce2714a623ec81f46b6a63922d76569189392505050565b600064ffffffffff82111561566e576040517f4767058800000000000000000000000000000000000000000000000000000000815260048101839052602401611944565b8366ffffffffffffff811660ff851660280260380182901c64ffffffffff168085106156a057808503820191506156a8565b848103820391505b5064ffffffffff6038602860ff8816020181811b197fffffffffffffffffffffffffffffffffffffffffffffffffff000000000000009490941690921792909216918416901b1790509392505050565b821561577257602083106157225760208304840193506020838161571e5761571e616e0b565b0692505b82156157725760208390036000600019600884021c1990506008850281811c91508451811c90508119875416828216178755508183116157635750506127fb565b50600194909401939182019190035b5b602081106157945781518455600190930192602090910190601f1901615773565b80156127fb576000600019600883021c198554845182169119161785555050505050565b600060206157c783601f61697d565b6157d191906170b6565b6157db908461697d565b90505b80831015610c2d57600083556001830192506157de565b60006157ff61545f565b9050306001600160a01b0382160361581d576128ac85858585612801565b6040517f150f32620000000000000000000000000000000000000000000000000000000081526001600160a01b0382169063150f3262906158689088908890889088906004016170d8565b600060405180830381600087803b15801561588257600080fd5b505af1158015615896573d6000803e3d6000fd5b505050505050505050565b60008183111580156158b4575083518211155b6158f0578383836040517f23230fa30000000000000000000000000000000000000000000000000000000081526004016119449392919061710c565b602084016158fe848261697d565b9050600061590c858561696a565b6fffffffffffffffffffffffffffffffff1660809290921b9190911795945050505050565b60606000610f6a8360156000615973565b606081610f6a81601560006159ee565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b606060006159818560801c90565b90506fffffffffffffffffffffffffffffffff851660008582816159a7576159a7616e0b565b04905060405193506020840160208202810160405281855260005b828110156159e2578451871c8252938701936020909101906001016159c2565b50505050509392505050565b825160609060006159ff8583616cc8565b9050604051925060208301601f19603f83860101166040528184526000602088015b848210156159e2578051871b83529187019160019190910190602001615a21565b60008083601f840112615a5457600080fd5b50813567ffffffffffffffff811115615a6c57600080fd5b6020830191508360208260051b8501011115615a8757600080fd5b9250929050565b803560ff811681146111f157600080fd5b600080600080600060808688031215615ab757600080fd5b85359450602086013567ffffffffffffffff811115615ad557600080fd5b615ae188828901615a42565b9095509350615af4905060408701615a8e565b949793965091946060013592915050565b60005b83811015615b20578181015183820152602001615b08565b50506000910152565b60008151808452615b41816020860160208601615b05565b601f01601f19169290920160200192915050565b602081526000610f6a6020830184615b29565b80356001600160a01b03811681146111f157600080fd5b60008060408385031215615b9257600080fd5b82359150615ba260208401615b68565b90509250929050565b60008060008060008060008060c0898b031215615bc757600080fd5b88359750602089013596506040890135955060608901359450608089013567ffffffffffffffff80821115615bfb57600080fd5b615c078c838d01615a42565b909650945060a08b0135915080821115615c2057600080fd5b50615c2d8b828c01615a42565b999c989b5096995094979396929594505050565b60008083601f840112615c5357600080fd5b50813567ffffffffffffffff811115615c6b57600080fd5b602083019150836020828501011115615a8757600080fd5b60008060008060008060808789031215615c9c57600080fd5b86359550602087013567ffffffffffffffff80821115615cbb57600080fd5b615cc78a838b01615a42565b9097509550859150615cdb60408a01615a8e565b94506060890135915080821115615cf157600080fd5b50615cfe89828a01615c41565b979a9699509497509295939492505050565b60008060008060608587031215615d2657600080fd5b84359350602085013567ffffffffffffffff811115615d4457600080fd5b615d5087828801615a42565b9094509250615d63905060408601615a8e565b905092959194509250565b6020808252825182820181905260009190848201906040850190845b81811015615daf5783516001600160a01b031683529284019291840191600101615d8a565b50909695505050505050565b60008060008060008060008060a0898b031215615dd757600080fd5b88359750602089013567ffffffffffffffff80821115615df657600080fd5b615e028c838d01615a42565b909950975060408b0135915080821115615e1b57600080fd5b615e278c838d01615c41565b909750955060608b0135945060808b0135915080821115615e4757600080fd5b50615c2d8b828c01615c41565b600080600080600080600060a0888a031215615e6f57600080fd5b87359650602088013567ffffffffffffffff80821115615e8e57600080fd5b615e9a8b838c01615a42565b9098509650869150615eae60408b01615a8e565b955060608a0135915080821115615ec457600080fd5b50615ed18a828b01615c41565b989b979a50959894979596608090950135949350505050565b600060208284031215615efc57600080fd5b5035919050565b60008060008060608587031215615f1957600080fd5b84359350602085013567ffffffffffffffff811115615f3757600080fd5b615f4387828801615a42565b9598909750949560400135949350505050565b606081526000615f696060830186615b29565b84602084015282810360408401526105fd8185615b29565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715615fc057615fc0615f81565b604052919050565b600067ffffffffffffffff821115615fe257615fe2615f81565b5060051b60200190565b600082601f830112615ffd57600080fd5b8135602061601261600d83615fc8565b615f97565b82815260059290921b8401810191818101908684111561603157600080fd5b8286015b8481101561604c5780358352918301918301616035565b509695505050505050565b600080600080600060a0868803121561606f57600080fd5b85359450602086013567ffffffffffffffff81111561608d57600080fd5b61609988828901615fec565b9450506160a860408701615a8e565b94979396509394606081013594506080013592915050565b600080604083850312156160d357600080fd5b82359150602083013567ffffffffffffffff8111156160f157600080fd5b6160fd85828601615fec565b9150509250929050565b60008060006060848603121561611c57600080fd5b8335925061612c60208501615b68565b915061613a60408501615a8e565b90509250925092565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561621d578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156162085783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b01906161c6565b50978a0197955050509187019160010161616b565b50919998505050505050505050565b600081518084526020808501808196508360051b8101915082860160005b85811015616274578284038952616262848351615b29565b9885019893509084019060010161624a565b5091979650505050505050565b602081526000610f6a602083018461622c565b600080600080608085870312156162aa57600080fd5b84359350602085013567ffffffffffffffff8111156162c857600080fd5b6162d487828801615fec565b9350506162e360408601615a8e565b9396929550929360600135925050565b60008060006060848603121561630857600080fd5b83359250602084013567ffffffffffffffff81111561632657600080fd5b61633286828701615fec565b92505061613a60408501615a8e565b6000806000806000806080878903121561635a57600080fd5b86359550602087013567ffffffffffffffff8082111561637957600080fd5b6163858a838b01615a42565b90975095506040890135915065ffffffffffff821682146163a557600080fd5b90935060608801359080821115615cf157600080fd5b803564ffffffffff811681146111f157600080fd5b60008060008060008060008060c0898b0312156163ec57600080fd5b88359750602089013567ffffffffffffffff8082111561640b57600080fd5b6164178c838d01615a42565b909950975087915061642b60408c01615a8e565b965061643960608c016163bb565b955061644760808c016163bb565b945060a08b0135915080821115615e4757600080fd5b60008060006040848603121561647257600080fd5b83359250602084013567ffffffffffffffff81111561649057600080fd5b61649c86828701615a42565b9497909650939450505050565b805160208083015191908110156155855760001960209190910360031b1b16919050565b600067ffffffffffffffff8211156164e7576164e7615f81565b50601f01601f191660200190565b600061650361600d84615fc8565b80848252602080830192508560051b85013681111561652157600080fd5b855b8181101561659957803567ffffffffffffffff8111156165435760008081fd5b870136601f8201126165555760008081fd5b803561656361600d826164cd565b81815236868385010111156165785760008081fd5b81868401878301376000918101860191909152865250938201938201616523565b50919695505050505050565b600181811c908216806165b957607f821691505b60208210810361558557634e487b7160e01b600052602260045260246000fd5b7fffffffff000000000000000000000000000000000000000000000000000000008316815260008251616613816004850160208701615b05565b919091016004019392505050565b60008251616633818460208701615b05565b9190910192915050565b60006020828403121561664f57600080fd5b81518015158114610f6a57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b60208101600483106166ad57634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052601160045260246000fd5b60ff8281168282160390811115610aee57610aee6166b3565b600081546166ef816165a5565b60018281168015616707576001811461673a57616769565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0084168752821515830287019450616769565b8560005260208060002060005b858110156167605781548a820152908401908201616747565b50505082870194505b5050505092915050565b7f676173207265706f727420220000000000000000000000000000000000000000815260006167a5600c8301846166e2565b7f2220697320616c72656164792072756e6e696e6720616e64206f6e6c79206f6e81527f65207265706f72742063616e2062652072756e20617420612074696d650000006020820152603d019392505050565b7f676173207265706f72742022000000000000000000000000000000000000000081526000825161683081600c850160208701615b05565b7f2220616c7265616479207573656420666f722074686973207465737400000000600c939091019283015250602801919050565b601f821115610c2d57600081815260208120601f850160051c8101602086101561688b5750805b601f850160051c820191505b8181101561082257828155600101616897565b815167ffffffffffffffff8111156168c4576168c4615f81565b6168d8816168d284546165a5565b84616864565b602080601f83116001811461690d57600084156168f55750858301515b600019600386901b1c1916600185901b178555610822565b600085815260208120601f198616915b8281101561693c5788860151825594840194600190910190840161691d565b508582101561695a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81810381811115610aee57610aee6166b3565b80820180821115610aee57610aee6166b3565b6000610f6a82846166e2565b8181036169a7575050565b6169b182546165a5565b67ffffffffffffffff8111156169c9576169c9615f81565b6169d7816168d284546165a5565b6000601f821160018114616a0b57600083156169f35750848201545b600019600385901b1c1916600184901b17845561167c565b600085815260209020601f19841690600086815260209020845b83811015616a455782860154825560019586019590910190602001616a25565b508583101561695a5793015460001960f8600387901b161c19169092555050600190811b01905550565b604081526000616aac60408301600a81527f2020202020204c65667400000000000000000000000000000000000000000000602082015260400190565b905082602083015292915050565b604081526000616aac60408301600a81527f2020202020526967687400000000000000000000000000000000000000000000602082015260400190565b7fffff000000000000000000000000000000000000000000000000000000000000841681528260208201526060604082015260006108de6060830184615b29565b828152604060208201526000610f676040830184615b29565b604081526000616b8e60408301600a81527f2020202020204c65667400000000000000000000000000000000000000000000602082015260400190565b8281036020840152610f528185615b29565b604081526000616b8e60408301600a81527f2020202020526967687400000000000000000000000000000000000000000000602082015260400190565b600060ff821660ff8103616bf357616bf36166b3565b60010192915050565b600081518084526020808501945080840160005b83811015616c2c57815187529582019590820190600101616c10565b509495945050505050565b606081526000616c4a6060830186616bfc565b65ffffffffffff8516602084015282810360408401526105fd8185615b29565b848152608060208201526000616c836080830186616bfc565b65ffffffffffff851660408401528281036060840152616ca38185615b29565b979650505050505050565b60006000198203616cc157616cc16166b3565b5060010190565b8082028115828204841417610aee57610aee6166b3565b86815285602082015284604082015283606082015260c060808201526000616d0a60c083018561622c565b82810360a08401526125ef818561622c565b600060208284031215616d2e57600080fd5b815167ffffffffffffffff811115616d4557600080fd5b8201601f81018413616d5657600080fd5b8051616d6461600d826164cd565b818152856020838501011115616d7957600080fd5b6108de826020830160208601615b05565b7f474153205245504f52543a200000000000000000000000000000000000000000815260008351616dc281600c850160208801615b05565b7f2000000000000000000000000000000000000000000000000000000000000000600c918401918201528351616dff81600d840160208801615b05565b01600d01949350505050565b634e487b7160e01b600052601260045260246000fd5b85815260a060208201526000616e3a60a0830187616bfc565b60ff861660408401528281036060840152616e558186615b29565b9150508260808301529695505050505050565b848152608060208201526000616e816080830186616bfc565b60ff949094166040830152506060015292915050565b600060208284031215616ea957600080fd5b5051919050565b64ffffffffff818116838216019080821115616ece57616ece6166b3565b5092915050565b60a081526000616ee860a0830188616bfc565b65ffffffffffff8716602084015264ffffffffff861660408401528460608401528281036080840152616f1b8185615b29565b98975050505050505050565b87815260e060208201526000616f4060e0830189616bfc565b60ff8816604084015264ffffffffff87811660608501528616608084015260a0830185905282810360c0840152616f778185615b29565b9a9950505050505050505050565b82815260006020808301845182860160005b8281101561627457815184529284019290840190600101616f97565b608081526000616fc66080830187616bfc565b8281036020840152616fd88187615b29565b90508460408401528281036060840152616ca38185615b29565b86815260c06020820152600061700b60c0830188616bfc565b828103604084015261701d8188615b29565b905085606084015282810360808401526170378186615b29565b9150508260a0830152979650505050505050565b602081526000610f6a6020830184616bfc565b8381526060602082015260006170776060830185616bfc565b9050826040830152949350505050565b60008351617099818460208801615b05565b8351908301906170ad818360208801615b05565b01949350505050565b6000826170d357634e487b7160e01b600052601260045260246000fd5b500490565b8481526080602082015260006170f16080830186616bfc565b60ff851660408401528281036060840152616ca38185615b29565b60608152600061711f6060830186615b29565b6020830194909452506040015291905056fea164736f6c6343000815000a",
    "sourceMap": "494:2729:80:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3989:258:57;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4426:150:96;;;;;;:::i;:::-;;:::i;:::-;;555:411:80;;;:::i;3769:309:96:-;;;;;;:::i;:::-;;:::i;1280:442:80:-;;;:::i;1853:207:96:-;;;;;;:::i;:::-;;:::i;3000:253::-;;;;;;:::i;:::-;;:::i;5256:244:57:-;;;;;;:::i;:::-;;:::i;2170:134:24:-;;;:::i;:::-;;;;;;;:::i;892:274:96:-;;;;;;:::i;:::-;;:::i;2101:249::-;;;;;;:::i;:::-;;:::i;2391:261::-;;;;;;:::i;:::-;;:::i;758:156:57:-;;;;;;:::i;:::-;;:::i;:::-;;;9038:25:113;;;9026:2;9011:18;758:156:57;8859:210:113;2939:133:24;;;:::i;2640:141::-;;;:::i;2651:288:57:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;7772:295::-;;;;;;:::i;:::-;;:::i;3629:136:96:-;;;;;;:::i;:::-;;:::i;4155:192::-;;;;;;:::i;:::-;;:::i;2456:178:24:-;;;:::i;:::-;;;;;;;:::i;2310:140::-;;;:::i;:::-;;;;;;;:::i;4644:265:57:-;;;;;;:::i;:::-;;:::i;2787:146:24:-;;;:::i;6514:258:57:-;;;;;;:::i;:::-;;:::i;5962:216::-;;;;;;:::i;:::-;;:::i;1220:214:96:-;;;;;;:::i;:::-;;:::i;1875:141:24:-;;;:::i;1819:584:18:-;;;:::i;:::-;;;18400:14:113;;18393:22;18375:41;;18363:2;18348:18;1819:584:18;18235:187:113;1489:323:96;;;;;;:::i;:::-;;:::i;927:85:55:-;994:13;927:85;;970:306:80;;;:::i;1953:246:57:-;;;;;;:::i;:::-;;:::i;1726:1495:80:-;;;:::i;3418:216:57:-;;;;;;:::i;:::-;;:::i;1433:143::-;;;;;;:::i;:::-;;:::i;3316:258:96:-;;;;;;:::i;:::-;;:::i;2022:142:24:-;;;:::i;1101:151:57:-;;;;;;:::i;:::-;;:::i;2701:235:96:-;;;;;;:::i;:::-;;:::i;1572:26:18:-;;;;;;;;;3989:258:57;4148:17;4180:62;4199:7;4208:8;;4180:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4218:10:57;;-1:-1:-1;4230:11:57;;-1:-1:-1;4180:18:57;;-1:-1:-1;4180:62:57:i;:::-;4173:69;3989:258;-1:-1:-1;;;;;;3989:258:57:o;4426:150:96:-;4520:51;4550:7;4559:11;4520:29;:51::i;:::-;4426:150;;:::o;555:411:80:-;609:44;;;;;;;;;;;;;;;;;;:14;:44::i;:::-;659:22;:20;:22::i;:::-;687:14;:12;:14::i;:::-;1125:74:103;;;-1:-1:-1;;;1125:74:103;;;21280:92:113;-1:-1:-1;;;21388:11:113;;;21381:100;1176:22:103;21497:12:113;;;21490:101;708:33:80;;744:44;;21607:12:113;1125:74:103;;;;;;;;;;;;1117:83;;;:::i;:::-;744:24:80;:44::i;:::-;708:80;-1:-1:-1;794:31:80;-1:-1:-1;;;828:28:80;794:62;;863:98;893:21;882:33;;;;;;9038:25:113;;9026:2;9011:18;;8859:210;882:33:80;;;;-1:-1:-1;;882:33:80;;;;;;;;;872:44;;882:33;872:44;;;;928:31;;;9038:25:113;;;872:44:80;9011:18:113;928:31:80;;;;;;;;;;;;918:42;;;;;;863:8;:98::i;3769:309:96:-;3982:91;4006:7;4015:11;4028:9;4039:11;3982:91;4052:8;;3982:91;:::i;:::-;;4062:10;;3982:91;:::i;:::-;:23;:91::i;:::-;3769:309;;;;;;;;:::o;1280:442:80:-;1318:22;:20;:22::i;:::-;1347:167;1370:2;-1:-1:-1;;;;;;;;;;1467:4:80;1479:17;1504:4;1347:15;:167::i;:::-;1521:10;1534:155;1557:2;-1:-1:-1;;;;;;;;;;1654:4:80;1666:17;1534:15;:155::i;:::-;1521:168;;1696:21;1705:5;1712:4;1696:8;:21::i;:::-;1312:410;1280:442::o;1853:207:96:-;2000:55;2019:7;2028:8;;2000:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2000:55:96;;;;;;;;;;;;;;;;;;;;;;2038:10;;-1:-1:-1;2000:55:96;-1:-1:-1;2050:4:96;;;;;;2000:55;;2050:4;;;;2000:55;;;;;;;;;-1:-1:-1;2000:18:96;;-1:-1:-1;;;2000:55:96:i;:::-;1853:207;;;;;;:::o;3000:253::-;3170:78;3199:7;3208:8;;3170:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3170:78:96;;;;;;;;;;;;;;;;;;;;;;3218:17;;-1:-1:-1;3170:78:96;-1:-1:-1;3237:10:96;;;;;;3170:78;;3237:10;;;;3170:78;;;;;;;;;-1:-1:-1;3170:28:96;;-1:-1:-1;;;3170:78:96:i;5256:244:57:-;5400:17;5432:63;5458:7;5467:8;;5432:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5477:17:57;;-1:-1:-1;5432:25:57;;-1:-1:-1;;5432:63:57:i;:::-;5425:70;5256:244;-1:-1:-1;;;;;5256:244:57:o;2170:134:24:-;2217:33;2281:16;2262:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2262:35:24;;;;;;;;;;;;;;;;;;;;;;;2170:134;:::o;892:274:96:-;1082:79;1102:7;1111:8;;1082:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1082:79:96;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1121:10:96;;-1:-1:-1;1121:10:96;;;;1082:79;;1121:10;;;;1082:79;;;;;;;;;-1:-1:-1;;1082:79:96;;;;;;;;;;;;;;;;;;;;;;1133:14;;-1:-1:-1;1082:79:96;-1:-1:-1;1149:11:96;;;;;;1082:79;;1149:11;;;;1082:79;;;;;;;;;-1:-1:-1;1082:19:96;;-1:-1:-1;;;1082:79:96:i;2101:249::-;2277:68;2296:7;2305:8;;2277:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2277:68:96;;;;;;;;;;;;;;;;;;;;;;2315:10;;-1:-1:-1;2277:68:96;-1:-1:-1;2327:4:96;;;;;;2277:68;;2327:4;;;;2277:68;;;;;;;;;-1:-1:-1;2333:11:96;;-1:-1:-1;2277:18:96;;-1:-1:-1;;2277:68:96:i;:::-;2101:249;;;;;;;:::o;2391:261::-;2573:74;2598:7;2607:8;;2573:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2573:74:96;;;;;;;;;;;;;;;;;;;;;;2617:10;;-1:-1:-1;2573:74:96;-1:-1:-1;2629:4:96;;;;;;2573:74;;2629:4;;;;2573:74;;;;;;;;;-1:-1:-1;2635:11:96;;-1:-1:-1;2573:24:96;;-1:-1:-1;;2573:74:96:i;758:156:57:-;831:23;876:33;901:7;876:24;:33::i;:::-;862:47;758:156;-1:-1:-1;;758:156:57:o;2939:133:24:-;2985:33;3049:16;3030:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3030:35:24;;;;;;;;;;;;;;;;;;;;;;2939:133;:::o;2640:141::-;2688:35;2756:18;2735:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2735:39:24;;;;;;;;;;;;;;;;;;;;;;2640:141;:::o;2651:288:57:-;2789:23;2814:28;2844:24;2883:51;2903:7;2912:8;;2883:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2922:11:57;;-1:-1:-1;2883:19:57;;-1:-1:-1;;2883:51:57:i;:::-;2876:58;;;;;;2651:288;;;;;;;;:::o;7772:295::-;7955:12;7982:80;8013:7;8022:8;8032:17;8051:5;8058:3;7982:30;:80::i;3629:136:96:-;3719:41;3742:7;3751:8;3719:22;:41::i;4155:192::-;4273:69;4301:7;4310:11;4323:18;4273:27;:69::i;:::-;4155:192;;;:::o;2456:178:24:-;2512:48;2601:26;2572:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2572:55:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2456:178;:::o;2310:140::-;2358:34;2425:18;2404:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4644:265:57;4809:12;4836:68;4861:7;4870:8;;4836:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4880:10:57;;-1:-1:-1;4892:11:57;;-1:-1:-1;4836:24:57;;-1:-1:-1;4836:68:57:i;2787:146:24:-;2835:40;2908:18;2887:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2887:39:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6514:258:57;6677:7;6699:68;6724:7;6733:8;6743:10;6755:11;6699:24;:68::i;6514:258::-;;;;;;;:::o;5962:216::-;6096:7;6118:55;6143:7;6152:8;6162:10;6118:24;:55::i;:::-;6111:62;;5962:216;;;;;;:::o;1220:214:96:-;1371:58;1398:7;1407:8;;1371:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1371:58:96;;;;;;;;;;;;;;;;;;;;;;1417:5;;-1:-1:-1;1371:58:96;-1:-1:-1;1424:4:96;;;;;;1371:58;;1424:4;;;;1371:58;;;;;;;;;-1:-1:-1;1371:26:96;;-1:-1:-1;;;1371:58:96:i;1875:141:24:-;1924:34;1991:18;1970:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:18;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:18;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;24276:74:113;;;2221:17:18;24366:18:113;;;24359:34;2196:43:18;;;;;;;;;24249:18:113;;;2196:43:18;;;-1:-1:-1;;1671:64:18;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:18;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:18:o;1489:323:96:-;1705:102;1733:7;1742:8;;1705:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1705:102:96;;;;;;;;;;;;;;;;;;;;;;1752:17;;-1:-1:-1;1771:16:96;;-1:-1:-1;1789:11:96;;1802:4;;;;;;1705:102;;1802:4;;;;1705:102;;;;;;;;;-1:-1:-1;1705:27:96;;-1:-1:-1;;;1705:102:96:i;970:306:80:-;1019:22;:20;:22::i;:::-;1125:74:103;;;-1:-1:-1;;;1125:74:103;;;21280:92:113;-1:-1:-1;;;21388:11:113;;;21381:100;1176:22:103;21497:12:113;;;21490:101;1048:23:80;;1074:44;;21607:12:113;1125:74:103;;;;;;;;;;;;1117:83;;;:::i;:::-;1074:24:80;:44::i;:::-;1048:70;;1124:21;1148:28;:26;:28::i;1953:246:57:-;2062:23;2087:28;2117:24;2156:38;2176:7;2185:8;;2156:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2156:19:57;;-1:-1:-1;;;2156:38:57:i;:::-;2149:45;;;;;;1953:246;;;;;;;:::o;1726:1495:80:-;1766:22;:20;:22::i;:::-;1795:25;1823:166;1857:2;-1:-1:-1;;;;;;;;;;1954:4:80;1966:17;1823:26;:166::i;:::-;1795:194;;1996:28;2005:8;:15;2022:1;1996:8;:28::i;:::-;2089:101;2098:8;2107:1;2098:11;;;;;;;;:::i;:::-;;;;;;;2111:78;2089:8;:101::i;:::-;2196;2205:8;2214:1;2205:11;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;2196:8:80;:101::i;:::-;2303;2312:8;2321:1;2312:11;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;2303:8:80;:101::i;:::-;2410;2419:8;2428:1;2419:11;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2410:8:80;:101::i;:::-;2517;2526:8;2535:1;2526:11;;;;;;;;:::i;:::-;;;;;;;2539:78;2517:8;:101::i;:::-;2624;2633:8;2642:1;2633:11;;;;;;;;:::i;:::-;;;;;;;2646:78;2624:8;:101::i;:::-;2836:46;2845:8;2854:1;2845:11;;;;;;;;:::i;:::-;;;;;;;2877:2;2866:14;;;;;;;25785:4:113;25773:17;;;;25755:36;;25743:2;25728:18;;25602:195;2866:14:80;;;;;;;;;;;;;2858:23;;;:::i;:::-;2836:8;:46::i;:::-;2888:47;2897:8;2906:1;2897:11;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;2918:15:80;;;;;;;25906:4:113;25978:21;;;;25960:40;;25948:2;25933:18;;25802:204;2888:47:80;2941:62;2950:8;2959:1;2950:11;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;2971:30:80;;;;;;;26187:66:113;26175:79;;;;26157:98;;26145:2;26130:18;;26011:250;2941:62:80;3009:86;3018:8;3027:1;3018:11;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3039:54:80;;;;;;;-1:-1:-1;;;;;26430:55:113;;;;26412:74;;26400:2;26385:18;;26266:226;3009:86:80;3101:48;3110:8;3119:1;3110:11;;;;;;;;:::i;:::-;;;;;;;3142:4;3131:16;;;;;;18400:14:113;18393:22;18375:41;;18363:2;18348:18;;18235:187;3101:48:80;3155:61;3164:8;3173:1;3164:11;;;;;;;;:::i;:::-;;;;;;;3196:17;3185:29;;;;;;;;:::i;3418:216:57:-;3548:17;3580:49;3599:7;3608:8;;3580:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3618:10:57;;-1:-1:-1;3580:18:57;;-1:-1:-1;;3580:49:57:i;1433:143::-;1504:16;1540:31;1563:7;1540:22;:31::i;3316:258:96:-;3485:84;3515:7;3524:8;;3485:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3534:17:96;;-1:-1:-1;3553:15:96;;-1:-1:-1;3485:29:96;;-1:-1:-1;3485:84:96:i;:::-;3316:258;;;;;:::o;2022:142:24:-;2071:35;2139:18;2118:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2118:39:24;;;;;;;;;;;;;;;;;;;;;;2022:142;:::o;1101:151:57:-;1174:18;1214:33;1239:7;1214:24;:33::i;2701:235:96:-;2862:69;2888:7;2897:8;;2862:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2862:69:96;;;;;;;;;;;;;;;;;;;;;;2907:17;;-1:-1:-1;2862:69:96;-1:-1:-1;2926:4:96;;;;;;2862:69;;2926:4;;;;2862:69;;;;;;;;;-1:-1:-1;2862:25:96;;-1:-1:-1;;;2862:69:96:i;34165:440:54:-;34316:12;34353:29;:11;:27;:29::i;:::-;34340:10;:42;;;34336:265;;;34399:82;34438:7;34447:8;34457:10;34469:11;34399:38;:82::i;:::-;34392:89;;;;34336:265;34509:85;34525:7;34534:8;34563:29;:11;:27;:29::i;:::-;34544:49;;:10;:49;:::i;:::-;34509:15;:85::i;10496:170::-;1047:73:62;;;-1:-1:-1;;;1047:73:62;;;21280:92:113;-1:-1:-1;;;21388:11:113;;;21381:100;1098:21:62;21497:12:113;;;21490:101;10584:77:54;;21607:12:113;1047:73:62;;;;;;;;;;;;1039:82;;;:::i;:::-;10631:7:54;10648:11;10584:27;:77::i;330:580:16:-;394:39;;;;;;;;;27644:21:113;;;;27701:2;27681:18;;;27674:30;27740:22;27720:18;;;27713:50;309:37:19;27815:20:113;;;27808:52;394:8:16;;;;27780:19:113;;394:39:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;389:53;;330:580;:::o;389:53::-;468:22;462:36;;;;;:::i;:::-;;;502:1;462:41;558:22;511:150;;;;;;;;:::i;:::-;;;;;;;;;;;;;447:220;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;681:12;694:4;681:18;;;;;;:::i;:::-;;;;;;;;;;;;;;703:1;681:23;736:4;706:67;;;;;;;;:::i;:::-;;;;;;;;;;;;;673:101;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;780:22:16;:29;805:4;780:22;:29;:::i;:::-;;317:28:19;309:37;;-1:-1:-1;;;;;815:19:16;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;868:9;842:23;:35;883:22;;;;;;;;:20;;;;:22;;;;;309:37:19;;883:22:16;;;;;;;309:37:19;883:20:16;:22;;;;;;;;;;;;;;;;;;;;;;;;;;3180:155:103;1125:74;;;-1:-1:-1;;;1125:74:103;;;21280:92:113;-1:-1:-1;;;21388:11:113;;;21381:100;1176:22:103;21497:12:113;;;21490:101;3215:115:103;;21607:12:113;1125:74:103;;;;;;;;;;;;1117:83;;;:::i;:::-;-1:-1:-1;;;3265:14:103;:12;:14::i;:::-;3281:16;:14;:16::i;:::-;3299:13;:11;:13::i;:::-;3314:15;:13;:15::i;:::-;3215:25;:115::i;:::-;3180:155::o;914:534:16:-;953:11;967:9;987:39;;;;;;;;;27644:21:113;;;;27701:2;27681:18;;;27674:30;27740:22;27720:18;;;27713:50;309:37:19;27815:20:113;;;27808:52;953:23:16;;-1:-1:-1;987:8:16;;;;27780:19:113;;987:39:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;982:53;;1028:7;914:534::o;982:53::-;1151:15;1201:3;1195;1169:23;;:29;;;;:::i;:::-;:35;;;;:::i;:::-;:39;;1207:1;1169:39;:::i;:::-;1151:57;;1232:1;1222:7;:11;1214:49;;;;;;;33390:2:113;1214:49:16;;;33372:21:113;33429:2;33409:18;;;33402:30;33468:27;33448:18;;;33441:55;33513:18;;1214:49:16;33188:349:113;1214:49:16;1308:7;1269:12;1282:22;1269:36;;;;;;:::i;:::-;;;;;;;;;;;;;;:46;1321:16;:45;;;;;;;-1:-1:-1;1321:45:16;;;;;;;1343:22;1321:45;;:::i;:::-;;1372:38;1387:22;1372:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:38::i;:::-;1416:27;;;;;;;;;-1:-1:-1;1416:27:16;;:22;;:27;;:22;:27;:::i;4858:651:54:-;1147:69:63;;;-1:-1:-1;;;1147:69:63;;;21280:92:113;-1:-1:-1;;;21388:11:113;;;21381:100;-1:-1:-1;;;21497:12:113;;;21490:101;4925:11:54;;21607:12:113;1147:69:63;;;;;;;;;;;;1139:78;;;:::i;:::-;5179:7:54;5161:62;5157:112;;-1:-1:-1;1324:66:63;;4858:651:54;-1:-1:-1;4858:651:54:o;5157:112::-;1147:69:63;;;-1:-1:-1;;;1147:69:63;;;21280:92:113;-1:-1:-1;;;21388:11:113;;;21381:100;-1:-1:-1;;;21497:12:113;;;21490:101;5313:183:54;;5359:83;;21607:12:113;1147:69:63;;;;;;;;;;;;1139:78;;;:::i;:::-;5433:7:54;5359:40;:83::i;:::-;5462:2;5484:1;5313:17;:183::i;4095:277:18:-;4163:1;4158;:6;4154:212;;4185:44;;;;;35505:2:113;35487:21;;;35544:2;35524:18;;;35517:30;35583:34;35578:2;35563:18;;35556:62;35654:7;35649:2;35634:18;;35627:35;35694:3;35679:19;;35303:401;4185:44:18;;;;;;;;4248:34;4280:1;4248:34;;;;;;:::i;:::-;;;;;;;;4301;4333:1;4301:34;;;;;;:::i;:::-;;;;;;;;4349:6;:4;:6::i;7479:1764:54:-;-1:-1:-1;;;7739:7:54;:35;;;;;;:83;;-1:-1:-1;7799:23:54;7778:7;:44;;;;7739:83;7735:209;;;-1:-1:-1;;;7894:7:54;7927;7910:25;;;;;;36904:19:113;;36948:2;36939:12;;36743:214;7910:25:54;;;;-1:-1:-1;;7910:25:54;;;;;;;;;;7839:98;;;;;;;;;;:::i;7735:209::-;7990:43;:11;8025:5;7990:20;:43::i;:::-;8074:40;:9;8107:4;8074:18;:40::i;:::-;8120:43;:11;8155:5;8120:20;:43::i;:::-;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;8251:8:54;:15;:40;8247:148;;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;8372:15:54;;8308:80;;;;;;;;37605:25:113;;;;37646:18;;;37639:34;37578:18;;8308:80:54;37431:248:113;8247:148:54;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;8445:10:54;:17;:44;8441:158;;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;8574:17:54;;8506:86;;;;;;;;37605:25:113;;;;37646:18;;;37639:34;37578:18;;8506:86:54;37431:248:113;8441:158:54;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;8656:50:54;8652:171;;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;8723:93:54;;;;;;;;37605:25:113;;;;37646:18;;;37639:34;37578:18;;8723:93:54;37431:248:113;8652:171:54;8885:31;8908:7;8885:22;:31::i;:::-;8881:140;;;8971:7;9004;8987:25;;;;;;36904:19:113;;36948:2;36939:12;;36743:214;8987:25:54;;;;-1:-1:-1;;8987:25:54;;;;;;;;;;8933:81;;;;;;;;;:::i;8881:140::-;9062:103;9074:7;9083:11;9096:9;9107:11;9131:8;9120:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;9153:10;9142:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;9062:11;:103::i;:::-;9201:37;9224:7;9233:4;9201:22;:37::i;7259:518:103:-;7399:16;;;7413:1;7399:16;;;;;;;;;7370:26;;7399:16;;;;;;;;;;-1:-1:-1;7399:16:103;7370:45;;7452:2;7436:20;;7421:9;7431:1;7421:12;;;;;;;;:::i;:::-;;;;;;:35;;;;;7500:2;7493:10;;7477:28;;7462:9;7472:1;7462:12;;;;;;;;:::i;:::-;;;;;;:43;;;;;7534:2;7526:11;;;7511:9;7521:1;7511:12;;;;;;;;:::i;:::-;;;;;;:26;;;;;7582:2;-1:-1:-1;;;;;7566:20:103;7558:29;;7543:9;7553:1;7543:12;;;;;;;;:::i;:::-;;;;;;;;;;:44;7623:2;7593:9;7603:1;7593:12;;;;;;;;:::i;:::-;;;;;;:33;;;;;7669:2;7663:9;;;;;;;;:::i;:::-;7655:18;;7647:27;;7632:9;7642:1;7632:12;;;;;;;;:::i;:::-;;;;;;;;;;;:42;;;;1125:74;;;-1:-1:-1;;;1125:74:103;;;21280:92:113;-1:-1:-1;;;21388:11:113;;;21381:100;1176:22:103;21497:12:113;;;21490:101;1125:74:103;;;;;;;;;;21607:12:113;;1125:74:103;;7681:91;;1117:83;;;:::i;:::-;7718:9;7729:1;7750:5;7732:25;;;;;;38162:14:113;38155:22;38150:3;38146:32;38134:45;;38204:1;38195:11;;38011:201;7732:25:103;;;;-1:-1:-1;;7732:25:103;;;;;;;;;-1:-1:-1;;;7681:26:103;:91::i;4869:593::-;5051:16;;;5065:1;5051:16;;;;;;;;;5004:10;;;;5051:16;;;;;;;;;;;-1:-1:-1;5051:16:103;5022:45;;5104:2;5088:20;;5073:9;5083:1;5073:12;;;;;;;;:::i;:::-;;;;;;:35;;;;;5152:2;5145:10;;5129:28;;5114:9;5124:1;5114:12;;;;;;;;:::i;:::-;;;;;;:43;;;;;5186:2;5178:11;;;5163:9;5173:1;5163:12;;;;;;;;:::i;:::-;;;;;;:26;;;;;5234:2;-1:-1:-1;;;;;5218:20:103;5210:29;;5195:9;5205:1;5195:12;;;;;;;;:::i;:::-;;;;;;;;;;:44;5275:2;5245:9;5255:1;5245:12;;;;;;;;:::i;:::-;;;;;;:33;;;;;5321:2;5315:9;;;;;;;;:::i;:::-;5307:18;;5299:27;;5284:9;5294:1;5284:12;;;;;;;;:::i;:::-;;;;;;;;;;;:42;;;;1125:74;;;-1:-1:-1;;;1125:74:103;;;21280:92:113;-1:-1:-1;;;21388:11:113;;;21381:100;1176:22:103;21497:12:113;;;21490:101;1125:74:103;;;;;;;;;;21607:12:113;;1125:74:103;;-1:-1:-1;;5349:64:103;;1117:83;;;:::i;:::-;5386:9;5397:1;-1:-1:-1;;;5349:26:103;:64::i;:::-;5333:80;;5427:29;5448:5;5435:20;;1596:10:50;1487:126;5427:29:103;5419:38;4869:593;-1:-1:-1;;;;;;;;;4869:593:103:o;789:312:20:-;859:1;854:6;;:1;:6;;;850:245;;881:41;;;;;38419:2:113;38401:21;;;38458:2;38438:18;;;38431:30;38497:34;38492:2;38477:18;;38470:62;38568:4;38563:2;38548:18;;38541:32;38605:3;38590:19;;38217:398;881:41:20;;;;;;;;941:52;972:1;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;941:52;;;;;;:::i;:::-;;;;;;;;1012;1043:1;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1012:52;;;;;;:::i;20119:192:54:-;20236:70;20245:7;20254:8;20264:10;20276:4;20282:23;20297:7;20282:14;:23::i;:::-;20236:8;:70::i;:::-;20119:192;;;;:::o;27809:790::-;28068:36;28107:66;28155:7;28164:8;28107:47;:66::i;:::-;28068:105;-1:-1:-1;28179:26:54;28215:49;28068:105;28246:17;6743:16:49;;862:5;6743:16;785:5;6732:27;6692:68;6670:92;;;6555:218;28215:49:54;28179:86;;28303:291;28357:7;28382:8;28417:17;28467:19;28508:1;28523:10;28565:22;28303:36;:291::i;36221:522::-;36357:12;36481:257;36520:79;36562:7;36571:8;36581:17;36520:41;:79::i;:::-;36617:93;36692:17;36617:66;36665:7;36674:8;36617:47;:66::i;:::-;:74;6743:16:49;;862:5;6743:16;785:5;6732:27;6692:68;6670:92;;;6555:218;36617:93:54;36728:1;36481:12;:257::i;11576:285::-;11762:94;11772:7;11781:8;11791:10;11803:14;11819:11;11832:23;11847:7;11832:14;:23::i;:::-;11762:9;:94::i;21210:409::-;21393:29;:11;:27;:29::i;:::-;21380:10;:42;;;21376:239;;;21432:64;21447:7;21456:8;21466:10;21478:4;21484:11;21432:14;:64::i;:::-;21376:239;;;21517:91;21533:7;21542:8;21571:29;:11;:27;:29::i;:::-;21552:49;;:10;:49;:::i;:::-;21603:4;21517:15;:91::i;22277:355::-;22449:178;22483:7;22508:8;22538:63;22577:11;22590:10;22538:38;:63::i;:::-;22616:4;22449:16;:178::i;31801:1314::-;31931:23;31956:28;31986:24;32052:20;32075:30;:11;:28;:30::i;:::-;32052:53;;32166:65;32199:7;32208:8;32218:12;32166:32;:65::i;:::-;32153:78;;32295:24;32322:30;:11;:28;:30::i;:::-;32295:57;-1:-1:-1;32362:20:54;;32358:753;;32455:66;32503:7;32512:8;32455:47;:66::i;:::-;32438:83;-1:-1:-1;6126:59:49;;;32573:33:54;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;32573:33:54;-1:-1:-1;32559:47:54;-1:-1:-1;826:4:48;816:15;;32614:21:54;32678:427;32696:16;32692:1;:20;;;32678:427;;;32729:27;32759:63;32801:7;32810:8;32820:1;32759:41;:63::i;:::-;32729:93;-1:-1:-1;32832:14:54;32849:25;:14;32872:1;6743:16:49;;862:5;6743:16;785:5;6732:27;6692:68;6670:92;;;6555:218;32849:25:54;32832:42;;32884:110;32915:19;32944:6;32960:1;32978:13;32884:12;:110::i;:::-;33073:23;33090:6;33073:23;;:::i;:::-;;;32719:386;;32714:3;;;;;:::i;:::-;;;;32678:427;;;;32384:727;32358:753;32012:1103;;31801:1314;;;;;;;:::o;39944:995::-;40121:12;40345:28;40376:66;40424:7;40433:8;40376:47;:66::i;:::-;40345:97;-1:-1:-1;40448:19:54;40470:41;40345:97;40493:17;6743:16:49;;862:5;6743:16;785:5;6732:27;6692:68;6670:92;;;6555:218;40470:41:54;40448:63;;40530:11;40521:5;:20;;:41;;;;40551:11;40545:3;:17;40521:41;40517:157;;;40615:11;40637;40628:5;:20;;:38;;40659:7;40665:1;40659:3;:7;:::i;:::-;40628:38;;;40651:5;40628:38;40579:88;;;;;;;;37605:25:113;;;;37646:18;;;37639:34;37578:18;;40579:88:54;37431:248:113;40517:157:54;40744:16;40763:79;40805:7;40814:8;40824:17;40763:41;:79::i;:::-;40744:98;-1:-1:-1;40856:78:54;40744:98;40905:11;40911:5;40905:3;:11;:::i;:::-;40926:5;40856:12;:78::i;24721:145::-;24805:56;24818:7;24827:8;24837:23;24852:7;24837:14;:23::i;:::-;24805:12;:56::i;9845:447::-;-1:-1:-1;;;10029:7:54;:35;;;10025:161;;-1:-1:-1;;;10136:7:54;10169;10152:25;;;;;;36904:19:113;;36948:2;36939:12;;36743:214;10025:161:54;10192:95;10208:7;979:29:38;987:20;;;;979:29;1011:30;;;;;;979:62;10192:15:54;:95::i;35212:541::-;35369:7;35506:242;35550:59;35591:7;35600:8;35550:40;:59::i;:::-;35627:31;;;;4044:19:37;:27;537:1:64;4043:44:37;4009:79;;;3996:93;35676:63:54;35715:11;35728:10;35676:38;:63::i;:::-;35506:17;:242::i;38007:427::-;38164:7;38179:21;38209:29;:11;:27;:29::i;:::-;38179:60;;38262:15;38249:28;;:10;:28;;;38245:185;;;38294:31;;;;4044:19:37;:27;537:1:64;4043:44:37;4009:79;;;3996:93;38294:31:54;38287:38;;;;;38245:185;38353:70;38375:7;38384:8;38394:28;38407:15;38394:10;:28;:::i;:::-;38353:21;:70::i;37360:225::-;37488:7;37510:70;37525:7;37534:8;37544:10;37556:23;37571:7;37556:14;:23::i;:::-;37510:14;:70::i;16359:1506::-;16480:16;16499:59;16540:7;16549:8;16499:40;:59::i;:::-;16480:78;;16660:7;16616:100;16679:8;16696:5;16709:4;16616:100;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;16781:7:54;:35;;;16777:62;;16826:7;;;16777:62;16984:22;17009:24;17025:7;17009:15;:24::i;:::-;16984:49;;17044:9;17039:328;17059:5;:12;17055:1;:16;17039:328;;;17086:9;17108:5;17114:1;17108:8;;;;;;;;:::i;:::-;;;;;;;17086:31;;17129:41;548:6:66;17129:4:54;:14;;;;;:41;;;;:::i;:::-;17125:236;;;17182:170;;;;;3392:35:38;;;;;17182:54:54;;:170;;17258:7;;17287:8;;17314:5;;17337:4;;17182:170;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17125:236;-1:-1:-1;17073:3:54;;;;:::i;:::-;;;;17039:328;;;;17416:70;17448:8;17466:5;17416:70;;17479:4;17416:13;:70::i;:::-;17540:9;17535:326;17555:5;:12;17551:1;:16;17535:326;;;17582:9;17604:5;17610:1;17604:8;;;;;;;;:::i;:::-;;;;;;;17582:31;;17625:40;657:6:66;17625:4:54;:14;;;;;:40;;;;:::i;:::-;17621:234;;;17677:169;;;;;3392:35:38;;;;;17677:53:54;;:169;;17752:7;;17781:8;;17808:5;;17831:4;;17677:169;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17621:234;-1:-1:-1;17569:3:54;;;;:::i;:::-;;;;17535:326;;18764:539;18970:328;19024:7;19049:8;19084:17;19127:16;19164:11;19189:4;19225:66;19273:7;19282:8;19225:47;:66::i;:::-;18970:36;:328::i;6416:273::-;6483:18;6523:31;6546:7;6523:22;:31::i;:::-;6509:45;-1:-1:-1;5479:35:51;6560:125:54;;6635:7;6668;6651:25;;;;;;36904:19:113;;36948:2;36939:12;;36743:214;6651:25:54;;;;-1:-1:-1;;6651:25:54;;;;;;;;;;6602:76;;;;;;;;;:::i;2239:205:103:-;2337:19;;;2354:1;2337:19;;;;;;;;;2288:6;;;;2337:19;;;;;;;;;;;;-1:-1:-1;2337:19:103;2302:54;;2380:15;2362:12;2375:1;2362:15;;;;;;;;:::i;:::-;;;;;;:33;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;2409:30:103;2426:12;2409:16;:30::i;:::-;2402:37;;;2239:205;:::o;31001:253:54:-;31102:23;31127:28;31157:24;31196:53;31206:7;31215:8;31225:23;31240:7;31225:14;:23::i;:::-;31196:9;:53::i;:::-;31189:60;;;;;;31001:253;;;;;:::o;10357:502:103:-;10556:16;;;10570:1;10556:16;;;;;;;;;10503;;10527:26;;10556:16;;;;;;;;;;;-1:-1:-1;10556:16:103;10527:45;;10609:2;10593:20;;10578:9;10588:1;10578:12;;;;;;;;:::i;:::-;;;;;;:35;;;;;10657:2;10650:10;;10634:28;;10619:9;10629:1;10619:12;;;;;;;;:::i;:::-;;;;;;:43;;;;;10691:2;10683:11;;;10668:9;10678:1;10668:12;;;;;;;;:::i;:::-;;;;;;:26;;;;;10739:2;-1:-1:-1;;;;;10723:20:103;10715:29;;10700:9;10710:1;10700:12;;;;;;;;:::i;:::-;;;;;;;;;;:44;10780:2;10750:9;10760:1;10750:12;;;;;;;;:::i;:::-;;;;;;:33;;;;;10826:2;10820:9;;;;;;;;:::i;:::-;10812:18;;10804:27;;10789:9;10799:1;10789:12;;;;;;;;:::i;:::-;;;;;;;;;;:42;10845:9;10357:502;-1:-1:-1;;;;;;;10357:502:103:o;5209:262:18:-;5271:1;5266;:6;5262:203;;5293:41;;;;;41667:2:113;41649:21;;;41706:2;41686:18;;;41679:30;41745:34;41740:2;41725:18;;41718:62;41816:4;41811:2;41796:18;;41789:32;41853:3;41838:19;;41465:398;5293:41:18;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;33544:218:54:-;33666:12;33693:64;33702:7;33711:8;33721:10;33733:23;33748:7;33733:14;:23::i;:::-;33693:8;:64::i;5769:379::-;5834:16;5870:29;5891:7;5870:20;:29::i;:::-;5858:41;;6013:31;6036:7;6013:22;:31::i;:::-;6008:136;;6094:7;6127;6110:25;;;;;;36904:19:113;;36948:2;36939:12;;36743:214;29279:833:54;29539:36;29578:66;29626:7;29635:8;29578:47;:66::i;:::-;29539:105;-1:-1:-1;29650:26:54;29686:49;29539:105;29717:17;6743:16:49;;862:5;6743:16;785:5;6732:27;6692:68;6670:92;;;6555:218;29686:49:54;29650:86;-1:-1:-1;29774:333:54;29828:7;29853:8;29888:17;29938:37;29960:15;29938:37;;;;:::i;:::-;30034:12;;;30044:1;30034:12;;;;;;;;30004:15;;30078:22;29774:36;:333::i;23322:737::-;23573:36;23612:66;23660:7;23669:8;23612:47;:66::i;:::-;23573:105;-1:-1:-1;23684:26:54;23720:49;23573:105;23751:17;6743:16:49;;862:5;6743:16;785:5;6732:27;6692:68;6670:92;;;6555:218;23720:49:54;23684:86;;23777:277;23831:7;23856:8;23891:17;23934:1;23956:19;23989:4;24025:22;23777:36;:277::i;4700:171:37:-;4773:7;537:1:64;1425;1409:13;1421:1;334:2;1409:13;:::i;:::-;:17;;;;:::i;:::-;1408:34;;;;:::i;:::-;4809:11:37;4788:78;4801:64;;4788:78;;4700:171;-1:-1:-1;;4700:171:37:o;48461:511:54:-;48624:12;48766:201;48805:41;48828:7;48837:8;48805:22;:41::i;:::-;48864:31;;;;4044:19:37;:27;537:1:64;4043:44:37;4009:79;;;3996:93;48913:45:54;48934:11;48947:10;48913:20;:45::i;:::-;48766:12;:201::i;1405:1060:38:-;1545:29;1577:39;1588:11;1601:14;1577:10;:39::i;:::-;1545:71;;1734:25;1776:12;:19;1762:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1762:34:38;;1734:62;;1844:21;1894:25;1889:312;1941:12;:19;1921:17;:39;1889:312;;;2064:19;-1:-1:-1;;;;;1997:87:38;:55;2007:12;2020:17;2007:31;;;;;;;;:::i;:::-;;;;;;;1997:53;;;3392:35;;;3262:170;1997:55;-1:-1:-1;;;;;1997:87:38;;1993:200;;2124:12;2137:17;2124:31;;;;;;;;:::i;:::-;;;;;;;2098:8;2107:13;2098:23;;;;;;;;:::i;:::-;:57;;;;:23;;;;;;;;;;;:57;2167:15;;;;;1993:200;1962:19;;1889:312;;;;2354:13;2344:8;2337:31;2411:49;2422:11;2435:14;2451:8;2411:10;:49::i;1729:393:103:-;1823:19;;;1840:1;1823:19;;;;;;;;;1776:6;;;;1823:19;;;;;;;;;;;-1:-1:-1;1823:19:103;1790:52;;1864:18;1848:10;1859:1;1848:13;;;;;;;;:::i;:::-;;;;;;:34;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1904:16;1888:10;1899:1;1888:13;;;;;;;;:::i;:::-;;;;;;:32;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1942:18;1926:10;1937:1;1926:13;;;;;;;;:::i;:::-;;;;;;:34;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1982:18;1966:10;1977:1;1966:13;;;;;;;;:::i;:::-;;;;;;:34;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;2022:15;2006:10;2017:1;2006:13;;;;;;;;:::i;:::-;;;;;;:31;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;2059:16;2043:10;2054:1;2043:13;;;;;;;;:::i;2578:253::-;2667:15;;;2680:1;2667:15;;;;;;;;;2624:24;;2667:15;;;;;;;;;;;;;;;;;;;;2656:26;;2688:18;;;;;;;;;;;;;;;;;:8;2697:1;2688:11;;;;;;;;:::i;:::-;;;;;;:18;;;;2712;;;;;;;;;;;;;;;;;:8;2721:1;2712:11;;;;;;;;:::i;:::-;;;;;;:18;;;;2736;;;;;;;;;;;;;;;;;:8;2745:1;2736:11;;;;;;;;:::i;:::-;;;;;;:18;;;;2760;;;;;;;;;;;;;;;;;:8;2769:1;2760:11;;;;;;;;:::i;:::-;;;;;;:18;;;;2784;;;;;;;;;;;;;;;;;:8;2793:1;2784:11;;;;;;;;:::i;:::-;;;;;;:18;;;;2808;;;;;;;;;;;;;;;;;:8;2817:1;2808:11;;;;;;;;:::i;:::-;;;;;;:18;;;;2578:253;:::o;2971:144::-;3066:15;;;3079:1;3066:15;;;;;;;;;3019:26;;3066:15;;;;;;;;;;;;;;;;;;;;3053:28;;3087:23;;;;;;;;;;;;;;;;;:10;3098:1;3087:13;;;;;;;;:::i;5574:520:58:-;5777:21;5801:17;:15;:17::i;:::-;5777:41;-1:-1:-1;5853:4:58;-1:-1:-1;;;;;5828:30:58;;;5824:266;;5868:91;5892:7;5901:11;5914:9;5925:11;5938:8;5948:10;5868:23;:91::i;:::-;5824:266;;;5980:103;;;;;-1:-1:-1;;;;;5980:35:58;;;;;:103;;6016:7;;6025:11;;6038:9;;6049:11;;6062:8;;6072:10;;5980:103;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5771:323;5574:520;;;;;;:::o;1754:155:16:-;1818:86;317:28:19;309:37;;-1:-1:-1;;;;;1860:11:16;;1872:12;1885:4;1872:18;;;;;;:::i;:::-;;;;;;;;;;;;;;;1860:31;;;;;;;;;;;;9038:25:113;;;9026:2;9011:18;;8859:210;1860:31:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1860:31:16;;;;;;;;;;;;:::i;:::-;1898:4;1830:73;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1818:11;:86::i;50062:282:54:-;50307:30;;;;;;45276:19:113;;;45311:12;;;45304:28;;;50150:7:54;;45348:12:113;;50307:30:54;;;;-1:-1:-1;;50307:30:54;;;;;;;;;50297:41;;50307:30;50297:41;;;;41226:22;50290:48;;50062:282;-1:-1:-1;;;50062:282:54:o;8680:790:53:-;8778:14;8814:2;8804:6;:12;8800:112;;8873:2;8864:6;:11;8846:29;;;;8895:2;8885:12;;;;;;:::i;:::-;;;;8800:112;-1:-1:-1;9092:21:53;;9088:1;9076:14;;9072:42;9240:2;:11;;;9322:22;;;9318:148;;;9447:1;9431:14;9427:22;9421:29;9417:1;9402:13;9398:21;9394:57;9386:6;9383:69;9373:79;;9318:148;8794:676;8680:790;;;;;:::o;2409:432:18:-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;45762:74:113;;;2677:17:18;45852:18:113;;;45845:34;;;;2712:4:18;45895:18:113;;;45888:34;2489:11:18;;1671:64;2586:43;;45735:18:113;;2652:67:18;;;-1:-1:-1;;2652:67:18;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:18;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:18;2820:7;:14;;;;;;;;2409:432::o;6418:1197:37:-;6540:10;6539:11;:36;;;;-1:-1:-1;5479:35:51;;6554:21:37;6535:95;;;6584:46;;;;;6628:1;6584:46;;;9038:25:113;9011:18;;6584:46:37;8859:210:113;6535:95:37;6698:25;6726:30;:11;:28;:30::i;:::-;6698:58;;902:1:64;6766:17:37;:38;6762:113;;;6813:62;;;;;;;;9038:25:113;;;9011:18;;6813:62:37;8859:210:113;6762:113:37;6882:24;6909:29;:11;:27;:29::i;:::-;6882:56;-1:-1:-1;7013:23:37;7039:36;7058:17;6882:56;7039:36;:::i;:::-;7013:62;;647:2:64;7085:15:37;:34;7081:107;;;7128:60;;;;;;;;9038:25:113;;;9011:18;;7128:60:37;8859:210:113;7081:107:37;7236:9;7231:380;7251:16;7247:1;:20;7231:380;;;3996:93;4044:19;:27;;;537:1:64;4043:44:37;4009:79;;;3996:93;7279:24;7340:21;;;7336:230;;7380:50;;;;;;;;;;;;;;7336:230;334:2:64;7449:16:37;:28;7445:121;;;7496:61;;;;;;;;;;;;;;7445:121;-1:-1:-1;7593:3:37;;7231:380;;5689:1683:51;5796:10;5795:11;:31;;;;-1:-1:-1;5479:35:51;;5810:16;5791:80;;;5835:36;;-1:-1:-1;;;5835:36:51;;5869:1;5835:36;;;9038:25:113;9011:18;;5835:36:51;8859:210:113;5791:80:51;5934:25;5962;:6;:23;:25::i;:::-;5934:53;;902:1:64;5997:17:51;:38;5993:103;;;6044:52;;-1:-1:-1;;;6044:52:51;;;;;9038:25:113;;;9011:18;;6044:52:51;8859:210:113;5993:103:51;6103:24;6130;:6;:22;:24::i;:::-;6103:51;-1:-1:-1;6224:23:51;6250:36;6269:17;6103:51;6250:36;:::i;:::-;6224:62;;647:2:64;6296:15:51;:34;6292:97;;;6339:50;;-1:-1:-1;;;6339:50:51;;;;;9038:25:113;;;9011:18;;6339:50:51;8859:210:113;6292:97:51;6448:25;6479:26;6516:9;6511:551;6531:15;6527:1;:19;6511:551;;;6604:1;6562:39;:17;:6;6577:1;6562:14;:17::i;:::-;:37;;;;;;;;:::i;:::-;;:39::i;:::-;:43;6558:459;;;6666:16;6661:1;:21;6657:82;;6691:48;;;;;;;;;;;;;;6657:82;6771:19;;;;;6558:459;;;6873:16;6869:1;:20;6865:81;;;6898:48;;;;;;;;;;;;;;6865:81;6978:20;;;;;6558:459;7044:3;;6511:551;;;;7135:16;7114:17;:37;7110:102;;7160:52;;-1:-1:-1;;;7160:52:51;;;;;9038:25:113;;;9011:18;;7160:52:51;8859:210:113;7110:102:51;7288:17;7266:18;:39;7262:105;;7314:53;;-1:-1:-1;;;7314:53:51;;;;;9038:25:113;;;9011:18;;7314:53:51;8859:210:113;3569:314:61;3683:16;;;3697:1;3683:16;;;;;;;;;3635:11;;;;3683:16;;;;;;;;;;;;-1:-1:-1;3683:16:61;3654:45;;3738:10;3705:9;3715:1;3705:12;;;;;;;;:::i;:::-;;;;;;;;;;;:44;;;;1047:74;;;-1:-1:-1;;;1047:74:61;;;21280:92:113;-1:-1:-1;;;21388:11:113;;;21381:100;1098:22:61;21497:12:113;;;21490:101;1047:74:61;;;;;;;;;;21607:12:113;;1047:74:61;;-1:-1:-1;;3772:62:61;;1039:83;;;:::i;:::-;3807:9;3818:1;-1:-1:-1;;;3772:24:61;:62::i;:::-;3756:78;;3848:29;3869:5;3856:20;;1596:10:50;1487:126;20632:676:63;25186:53;;;;;;53538:19:113;;;53573:12;;;53566:28;;;25159:12:63;53610::113;;;53603:28;;;25186:53:63;;;;;;;;;;53647:12:113;;;;25186:53:63;;;20923:29;20955:55;20969:18;20989:20;20955:13;:55::i;:::-;20923:87;;21016:25;21044:55;21058:18;21078:20;21044:13;:55::i;:::-;21135:16;;;21149:1;21135:16;;;;;;;;;21016:83;;-1:-1:-1;21106:26:63;;21135:16;;;;;;;;;;;;-1:-1:-1;21135:16:63;21106:45;;21190:7;21157:9;21167:1;21157:12;;;;;;;;:::i;:::-;;;;;;;;;;;:41;;;;1147:69;;;-1:-1:-1;;;1147:69:63;;;21280:92:113;-1:-1:-1;;;21388:11:113;;;21381:100;-1:-1:-1;;;21497:12:113;;;21490:101;1147:69:63;;;;;;;;;;21607:12:113;;1147:69:63;;21205:98;;1139:78;;;:::i;:::-;21235:9;21246:11;21259:15;21276:12;1324:66;21205:19;:98::i;:::-;20834:474;;;;20632:676;;;;;;:::o;4933:268:61:-;5033:16;;;5047:1;5033:16;;;;;;;;;5004:26;;5033:16;;;;;;;;;;;-1:-1:-1;5033:16:61;5004:45;;5088:10;5055:9;5065:1;5055:12;;;;;;;;:::i;:::-;;;;;;;;;;;:44;;;;1047:74;;;-1:-1:-1;;;1047:74:61;;;21280:92:113;-1:-1:-1;;;21388:11:113;;;21381:100;1098:22:61;21497:12:113;;;21490:101;1047:74:61;;;;;;;;;;21607:12:113;;1047:74:61;;5106:90;;1039:83;;;:::i;:::-;5141:9;5152:1;5173:6;5155:26;;;;;;38162:14:113;38155:22;38150:3;38146:32;38134:45;;38204:1;38195:11;;38011:201;5155:26:61;;;;-1:-1:-1;;5155:26:61;;;;;;;;;-1:-1:-1;;;5106:24:61;:90::i;10690:455:58:-;10862:21;10886:17;:15;:17::i;:::-;10862:41;-1:-1:-1;10938:4:58;-1:-1:-1;;;;;10913:30:58;;;10909:232;;10953:74;10978:7;10987:8;10997:10;11009:4;11015:11;10953:24;:74::i;:::-;10909:232;;;11048:86;;;;;-1:-1:-1;;;;;11048:36:58;;;;;:86;;11085:7;;11094:8;;11104:10;;11116:4;;11122:11;;11048:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17702:457;17859:7;17874:21;17898:17;:15;:17::i;:::-;17874:41;-1:-1:-1;17950:4:58;-1:-1:-1;;;;;17925:30:58;;;17921:234;;17972:68;17997:7;18006:8;18016:10;18028:11;17972:24;:68::i;17921:234::-;18068:80;;;;;-1:-1:-1;;;;;18068:36:58;;;;;:80;;18105:7;;18114:8;;18124:10;;18136:11;;18068:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;52752:301:54:-;52873:13;52965:82;52996:48;53026:7;53035:8;52996:29;:48::i;:::-;4572:21:53;;4466:137;43119:3949:54;-1:-1:-1;;;43516:7:54;:35;;;43512:161;;-1:-1:-1;;;43623:7:54;43656;43639:25;;;;;;36904:19:113;;36948:2;36939:12;;36743:214;43512:161:54;43679:27;43709:49;:22;43740:17;6743:16:49;;862:5;6743:16;785:5;6732:27;6692:68;6670:92;;;6555:218;43709:49:54;43679:79;;43764:26;43829:4;:11;43815;43793:33;;:19;:33;;;;:::i;:::-;:47;;;;:::i;:::-;43764:76;;44112:18;44089:19;:41;;:98;;;;-1:-1:-1;44168:19:54;44134:30;44153:11;44134:16;:30;:::i;:::-;:53;;;;44089:98;44085:218;;;44204:92;;;;;47964:12:113;48003:15;;;44204:92:54;;;47985:34:113;48055:15;;;48035:18;;;48028:43;48107:15;;48087:18;;;48080:43;47927:18;;44204:92:54;47758:371:113;44085:218:54;44409:19;44390:16;:38;;;44386:140;;;44445:74;;;;;;;;48307:25:113;;;48380:12;48368:25;;48348:18;;;48341:53;48280:18;;44445:74:54;48134:266:113;44386:140:54;44565:35;44603:72;:22;44637:17;44656:18;44603:33;:72::i;:::-;44565:110;-1:-1:-1;44734:32:54;;;:13;44874:107;44892:17;44888:21;;:1;:21;;;44874:107;;;44937:33;:22;44968:1;6743:16:49;;862:5;6743:16;785:5;6732:27;6692:68;6670:92;;;6555:218;44937:33:54;44928:42;;;;44911:3;;44874:107;;;;45103:7;45050:228;45130:8;45162:5;45191:11;45228:21;45265:4;45050:228;;;;;;;;;;:::i;:::-;;;;;;;;44682:603;45431:22;45456:24;45472:7;45456:15;:24::i;:::-;45431:49;;45491:9;45486:485;45506:5;:12;45502:1;:16;45486:485;;;45533:9;45555:5;45561:1;45555:8;;;;;;;;:::i;:::-;;;;;;;45533:31;;45576:42;770:6:66;45576:4:54;:14;;;;;:42;;;;:::i;:::-;45572:393;;;3392:35:38;;;;-1:-1:-1;;;;;45630:55:54;;45707:7;45736:8;45775:17;45822:16;45863:11;45902:21;45941:4;45630:326;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45572:393;-1:-1:-1;45520:3:54;;;;:::i;:::-;;;;45486:485;;;;46056:18;46033:19;:41;46029:248;;46084:31;46118:48;46148:7;46157:8;46118:29;:48::i;:::-;579:28:53;;;-1:-1:-1;46029:248:54;46334:27;46364:61;46388:7;46397:8;46407:17;46364:23;:61::i;:::-;46334:91;;46433:92;46465:19;46494:16;46433:92;;46518:4;46433:13;:92::i;:::-;46326:206;46586:9;46581:483;46601:5;:12;46597:1;:16;46581:483;;;46628:9;46650:5;46656:1;46650:8;;;;;;;;:::i;:::-;;;;;;;46628:31;;46671:41;881:6:66;46671:4:54;:14;;;;;:41;;;;:::i;:::-;46667:391;;;3392:35:38;;;;-1:-1:-1;;;;;46724:54:54;;46800:7;46829:8;46868:17;46915:16;46956:11;46995:21;47034:4;46724:325;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46667:391;-1:-1:-1;46615:3:54;;;;:::i;:::-;;;;46581:483;;;;43362:3706;;;;43119:3949;;;;;;;:::o;51555:274::-;51699:7;51804;51813:8;51787:35;;;;;;;;;:::i;:::-;;;;;;;;;;;;;51777:46;;;;;;51756:17;51749:25;;51729:45;;;41298:34;51729:45;:94;51721:103;;51714:110;;51555:274;;;;;:::o;4903:665:53:-;5315:4;5309:11;5356:4;5344:17;;-1:-1:-1;;5234:14:53;5403:26;;;5234:14;5230:28;5375:4;5368:63;5475:6;5467;5460:22;5493:51;5498:14;5514:6;5522;5530:13;5493:4;:51::i;12721:3002:54:-;12994:7;12978:75;13003:8;13013:10;13025:14;13041:11;12978:75;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;13118:7:54;:35;;;13163:7;13114:62;13314:22;13339:24;13355:7;13339:15;:24::i;:::-;13314:49;;13374:9;13369:340;13389:5;:12;13385:1;:16;13369:340;;;13416:9;13438:5;13444:1;13438:8;;;;;;;;:::i;:::-;;;;;;;13416:31;;13459:33;343:6:66;13459:4:54;:14;;;;;:33;;;;:::i;:::-;13455:248;;;13504:190;;;;;3392:35:38;;;;;13504:47:54;;:190;;13563:7;;13582:8;;13602:10;;13624:14;;13650:11;;13673;;13504:190;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13455:248;-1:-1:-1;13403:3:54;;;;:::i;:::-;;;;13369:340;;;;13772:26;13801:59;13842:7;13851:8;13801:40;:59::i;:::-;13772:88;-1:-1:-1;13866:21:54;826:4:48;816:15;;13866:54:54;;13926:149;13964:18;13998:1;14022:13;14051:10;:17;13926:13;:149::i;:::-;14175:1;14142:30;:11;:28;:30::i;:::-;:34;14138:1174;;;14261:33;14297:66;14345:7;14354:8;14297:47;:66::i;:::-;579:28:53;;;14261:102:54;-1:-1:-1;826:4:48;816:15;;14537:47:54;;14693:27;14728:25;14766:7;14761:545;14779:30;:11;:28;:30::i;:::-;14775:1;:34;;;14761:545;;;14845:63;14887:7;14896:8;14906:1;14845:41;:63::i;:::-;14823:85;-1:-1:-1;14938:25:54;:14;14961:1;6743:16:49;;862:5;6743:16;785:5;6732:27;6692:68;6670:92;;;6555:218;14938:25:54;14918:45;;14973:170;15015:19;15054:1;15082:13;15115:17;14973:13;:170::i;:::-;15153:34;15170:17;15153:34;;:::i;:::-;;-1:-1:-1;15284:3:54;;14761:545;;;;14178:1134;;;14138:1174;15386:9;15381:338;15401:5;:12;15397:1;:16;15381:338;;;15428:9;15450:5;15456:1;15450:8;;;;;;;;:::i;:::-;;;;;;;15428:31;;15471:32;437:6:66;15471:4:54;:14;;;;;:32;;;;:::i;:::-;15467:246;;;15515:189;;;;;3392:35:38;;;;;15515:46:54;;:189;;15573:7;;15592:8;;15612:10;;15634:14;;15660:11;;15683;;15515:189;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15467:246;-1:-1:-1;15415:3:54;;;;:::i;:::-;;;;15381:338;;50636:242;50732:7;;;50771:84;50791:10;50787:14;;:1;:14;50771:84;;;50816:32;3996:93:37;4044:19;:27;;;537:1:64;4043:44:37;4009:79;;;3996:93;50816:32:54;;:::i;:::-;;-1:-1:-1;50803:3:54;;;;:::i;:::-;;;;50771:84;;4319:171:37;4393:7;537:1:64;1247:13;1259:1;334:2;1247:13;:::i;:::-;1246:30;;;;:::i;:::-;4415:70:37;;;;;4319:171;-1:-1:-1;4319:171:37:o;47636:360:54:-;47762:12;47786:6;47796:1;47786:11;47782:26;;-1:-1:-1;47799:9:54;;;;;;;;;-1:-1:-1;47799:9:54;;;;47782:26;47849:16;47868:41;47891:7;47900:8;47868:22;:41::i;:::-;47849:60;;47922:69;47953:8;47971:6;47987:1;47922:12;:69::i;5098:173:37:-;5172:7;537:1:64;1597;;1577:13;1589:1;334:2;1577:13;:::i;:::-;:17;;;;:::i;5933:2258:53:-;6050:10;;6046:1421;;6203:2;6193:6;:12;6189:122;;6266:2;6257:6;:11;6239:29;;;;6290:2;6280:12;;;;;;:::i;:::-;;;;6189:122;6401:10;;6397:1064;;6609:2;:11;;;6483:21;-1:-1:-1;;1080:1:65;1067:14;;1045:37;1043:40;6641:38:53;;6863:14;6857:21;6853:1;6845:6;6841:14;6837:42;7110:4;7106:9;7090:13;7084:20;7080:36;7011:4;6999:10;6995:21;6938:192;6911:13;6891:251;;7201:13;7191:6;:23;7187:36;;7216:7;;;;7187:36;-1:-1:-1;7364:1:53;7346:19;;;;;7419:23;;;;;7377:30;6397:1064;7496:253;7513:2;7503:6;:12;7496:253;;7607:21;;7585:44;;7682:1;7664:19;;;;-1:-1:-1;;7722:12:53;;;;7710:2;7693:19;7496:253;;;7817:10;;7813:374;;7837:12;-1:-1:-1;;1080:1:65;1067:14;;1045:37;1043:40;8119:20:53;;8034:21;;8030:32;;8141:9;;8115:36;7979:184;7936:237;;-1:-1:-1;5933:2258:53;;;;:::o;25465:1680:54:-;25635:7;25616:37;25644:8;25616:37;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;25718:7:54;:35;;;25714:62;;25465:1680;;;:::o;25714:62::-;25917:22;25942:24;25958:7;25942:15;:24::i;:::-;25917:49;;25977:9;25972:235;25992:5;:12;25988:1;:16;25972:235;;;26019:9;26041:5;26047:1;26041:8;;;;;;;;:::i;:::-;;;;;;;26019:31;;26062:36;983:6:66;26062:4:54;:14;;;;;:36;;;;:::i;:::-;26058:143;;;26110:82;;;;;3392:35:38;;;;;26110:50:54;;:82;;26161:7;;26170:8;;26180:11;;26110:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26058:143;-1:-1:-1;26006:3:54;;;;:::i;:::-;;;;25972:235;;;;26239:26;26268:59;26309:7;26318:8;26268:40;:59::i;:::-;26239:88;;26333:113;26365:18;26393:1;26412:30;:11;:28;:30::i;:::-;26402:41;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26402:41:54;;26333:13;:113::i;:::-;26665:1;26632:30;:11;:28;:30::i;:::-;:34;26628:236;;;26676:33;26712:66;26760:7;26769:8;26712:47;:66::i;:::-;26676:102;;26786:71;26817:25;26852:2;26786:12;:71::i;:::-;26668:196;26628:236;26913:9;26908:233;26928:5;:12;26924:1;:16;26908:233;;;26955:9;26977:5;26983:1;26977:8;;;;;;;;:::i;:::-;;;;;;;26955:31;;26998:35;1083:6:66;26998:4:54;:14;;;;;:35;;;;:::i;:::-;26994:141;;;27045:81;;;;;3392:35:38;;;;;27045:49:54;;:81;;27095:7;;27104:8;;27114:11;;27045:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26994:141;-1:-1:-1;26942:3:54;;;;:::i;:::-;;;;26908:233;;10062:255:62;10158:16;;;10172:1;10158:16;;;;;;;;;10129:26;;10158:16;;;;;;;;;;;-1:-1:-1;10158:16:62;10129:45;;10213:7;10180:9;10190:1;10180:12;;;;;;;;:::i;:::-;;;;;;;;;;;:41;;;;1047:73;;;-1:-1:-1;;;1047:73:62;;;21280:92:113;-1:-1:-1;;;21388:11:113;;;21381:100;1098:21:62;21497:12:113;;;21490:101;1047:73:62;;;;;;;;;;21607:12:113;;1047:73:62;;10228:84;;1039:82;;;:::i;:::-;10283:28;;53157:66:113;53145:79;;10283:28:62;;;53133:92:113;10269:9:62;;10280:1;;53241:12:113;;10283:28:62;;;;;;;;;;;;10228:30;:84::i;49619:191:54:-;49721:7;49785;49794:8;49768:35;;;;;;;;;:::i;38950:262::-;39092:7;39114:93;39189:17;39114:66;39162:7;39171:8;39114:47;:66::i;4372:342:62:-;4488:16;;;4502:1;4488:16;;;;;;;;;4429:22;;4459:26;;4488:16;;;;;;;;;;;;-1:-1:-1;4488:16:62;4459:45;;4543:7;4510:9;4520:1;4510:12;;;;;;;;:::i;:::-;;;;;;;;;;;:41;;;;1047:73;;;-1:-1:-1;;;1047:73:62;;;21280:92:113;-1:-1:-1;;;21388:11:113;;;21381:100;1098:21:62;21497:12:113;;;21490:101;1047:73:62;;;;;;;;;;21607:12:113;;1047:73:62;;-1:-1:-1;;4579:49:62;;1039:82;;;:::i;:::-;4615:9;4626:1;4579:25;:49::i;:::-;4558:70;;4642:66;:44;4663:5;4670:1;4673:5;:12;4642:20;:44::i;:::-;:64;:66::i;2891:136:38:-;2961:4;3013:9;2980:42;;2999:9;2981:15;2991:4;3790:26;;;3660:162;2981:15;:27;2980:42;;;2973:49;;2891:136;;;;:::o;850:162:53:-;939:68;945:14;961:6;826:4:48;816:15;;995:4:53;:11;939:5;:68::i;6955:316:63:-;7078:16;;;7092:1;7078:16;;;;;;;;;7023:18;;;;7078:16;;;;;;;;;;;;-1:-1:-1;7078:16:63;7049:45;;7133:7;7100:9;7110:1;7100:12;;;;;;;;:::i;:::-;;;;;;;;;;;:41;;;;1147:69;;;-1:-1:-1;;;1147:69:63;;;21280:92:113;-1:-1:-1;;;21388:11:113;;;21381:100;-1:-1:-1;;;21497:12:113;;;21490:101;1147:69:63;;;;;;;;;;21607:12:113;;1147:69:63;;-1:-1:-1;;7164:62:63;;1139:78;;;:::i;:::-;7199:9;7210:1;1324:66;7164:24;:62::i;1247:2059:51:-;1315:6;647:2:64;1333:7:51;:14;:33;1329:85;;;1399:7;:14;1375:39;;-1:-1:-1;;;1375:39:51;;;;;;9038:25:113;;9026:2;9011:18;;8859:210;1329:85:51;1420:14;;;;1621:956;1645:7;:14;1641:1;:18;1621:956;;;1671:24;1698:32;:7;1706:1;1698:10;;;;;;;;:::i;:::-;;;;;;;:30;;;;;;;;:::i;:32::-;1671:59;;1743:16;1763:1;1743:21;1739:404;;1928:15;;;;;1739:404;;;1972:17;;1968:175;;2096:38;;;;;;;;;;;;;;1968:175;2269:16;2254:31;;;;537:1:64;2531::51;2527;437:2:64;2509:19:51;:23;2508:40;2492:7;2500:1;2492:10;;;;;;;;:::i;:::-;;;;;;;2484:19;;;;;;;;:::i;:::-;:65;;2474:75;;;;;-1:-1:-1;2559:3:51;;1621:956;;;;902:1:64;2621:13:51;:34;2617:85;;;2664:38;;-1:-1:-1;;;2664:38:51;;;;;9038:25:113;;;9011:18;;2664:38:51;8859:210:113;2617:85:51;2802:14;;:30;;;537:1:64;1247:13;1259:1;334:2;1247:13;:::i;:::-;1246:30;;;;:::i;:::-;3090:41:51;;;3080:51;;;;;537:1:64;1425;1409:13;1421:1;334:2;1409:13;:::i;:::-;:17;;;;:::i;:::-;1408:34;;;;:::i;:::-;3147:47:51;;;3137:57;;;;;537:1:64;1597;;1577:13;1589:1;334:2;1577:13;:::i;:::-;:17;;;;:::i;:::-;:21;;;;:::i;:::-;1576:38;;;;:::i;:::-;3210:49:51;;;;3200:59;;;;;1247:2059;-1:-1:-1;;;;1247:2059:51:o;5573:312:63:-;5692:16;;;5706:1;5692:16;;;;;;;;;5639;;;;5692;;;;;;;;;;;;-1:-1:-1;5692:16:63;5663:45;;5747:7;5714:9;5724:1;5714:12;;;;;;;;:::i;:::-;;;;;;;;;;;:41;;;;1147:69;;;-1:-1:-1;;;1147:69:63;;;21280:92:113;-1:-1:-1;;;21388:11:113;;;21381:100;-1:-1:-1;;;21497:12:113;;;21490:101;1147:69:63;;;;;;;;;;21607:12:113;;1147:69:63;;-1:-1:-1;;5778:62:63;;1139:78;;;:::i;:::-;5813:9;5824:1;1324:66;5778:24;:62::i;4302:369:60:-;4442:16;;;4456:1;4442:16;;;;;;;;;4383:22;;4413:26;;4442:16;;;;;;;;;;;;-1:-1:-1;4442:16:60;4413:45;;4497:10;4464:9;4474:1;4464:12;;;;;;;;:::i;:::-;;;;;;:44;;;;;4515:18;4536:49;4562:8;4572:9;4583:1;4536:25;:49::i;:::-;4515:70;;4599:66;:44;4620:5;4627:1;4630:5;:12;4599:20;:44::i;5689:282::-;5815:16;;;5829:1;5815:16;;;;;;;;;5786:26;;5815:16;;;;;;;;;;;-1:-1:-1;5815:16:60;5786:45;;5870:10;5837:9;5847:1;5837:12;;;;;;;;:::i;:::-;;;;;;:44;;;;;5888:78;5914:8;5924:9;5935:1;5938:27;5958:5;5938:18;:27::i;:::-;5888:25;:78::i;1766:227:58:-;996:42;1855:22;1816:7;;-1:-1:-1;;;;;1855:22:58;;1883:106;;1931:10;1924:17;;;1766:227;:::o;5630:121:32:-;5685:59;5740:2;5701:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5701:42:32;;;;;;;;;;;;;;;;;;;;5685:15;:59::i;3948:206:51:-;4018:10;4108:19;:27;;;4139:1;4107:33;4086:6;4061:82;4078:63;;4061:82;;;;;;;;;:::i;3195:520:17:-;3261:7;3274:13;3296:10;3290:17;;;;;;;;:::i;:::-;3274:33;;;;3324:2;3316:5;:10;3312:401;;;3568:2;3560:10;3574:1;3559:16;;;-1:-1:-1;;3195:520:17:o;3312:401::-;3610:18;3596:10;:32;;;;;;;;:::i;:::-;;3592:121;;-1:-1:-1;3643:2:17;;3195:520;-1:-1:-1;;3195:520:17:o;3592:121::-;-1:-1:-1;3707:1:17;;3195:520;-1:-1:-1;;3195:520:17:o;3592:121::-;3270:445;3195:520;;;:::o;25435:388:63:-;25743:32;;25777:34;;25561:29;;2377:5:49;;;785;2408:39;;;;2390:58;2489:23;2474:39;;;;2456:58;25721:91:63;2236:344:49;25988:234:63;26114:12;26165:18;26194:20;26141:76;;;;;;;;;:::i;:::-;;;;;;;;;;;;;26134:83;;25988:234;;;;:::o;52184:230:54:-;52305:7;52389;52398:8;52372:35;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;52372:35:54;;;;;;;;;52362:46;;52372:35;52362:46;;;;41389:40;52335:73;;52184:230;-1:-1:-1;;;52184:230:54:o;7139:1488:49:-;7265:13;933:16;7290:25;;7286:97;;;7332:44;;;;;;;;9038:25:113;;;9011:18;;7332:44:49;8859:210:113;7286:97:49;7445:13;6126:59;;;6743:16;;;862:5;6743:16;785:5;6732:27;6692:68;;;6670:92;;7708:38;;;7704:192;;7791:19;7773:15;:37;7758:52;;;;7704:192;;;7872:15;7850:19;:37;7835:52;;;;7704:192;-1:-1:-1;8212:16:49;785:5;862;8079:16;;;;8068:27;8204:35;;;8518:5;8357:26;8338:45;;;;8337:61;;;8499:24;;;;8528:34;;;;;8498:65;;-1:-1:-1;7139:1488:49;;;;;:::o;1373:2326:53:-;1486:10;;1482:1491;;1639:2;1629:6;:12;1625:122;;1702:2;1693:6;:11;1675:29;;;;1726:2;1716:12;;;;;;:::i;:::-;;;;1625:122;1837:10;;1833:1134;;2045:2;:11;;;1919:21;-1:-1:-1;;1080:1:65;1067:14;;1045:37;1043:40;2077:31:53;;2277:1;2269:6;2265:14;2313:4;2302:9;2298:20;2290:28;;2368:13;2362:20;2351:9;2347:36;2329:54;;2616:4;2612:9;2595:14;2589:21;2585:37;2516:4;2504:10;2500:21;2443:193;2415:14;2395:253;;2707:13;2697:6;:23;2693:36;;2722:7;;;;2693:36;-1:-1:-1;2870:1:53;2852:19;;;;;2883:30;;;;2925:23;;1833:1134;3003:253;3020:2;3010:6;:12;3003:253;;3115:20;;3092:44;;3189:1;3171:19;;;;3217:2;3200:19;;;;-1:-1:-1;;3229:12:53;3003:253;;;3324:10;;3320:375;;3344:12;-1:-1:-1;;1080:1:65;1067:14;;1045:37;1043:40;3626:21:53;;3542:20;;3538:31;;3649:9;;3622:37;3487:184;3443:238;;-1:-1:-1;1373:2326:53;;;;:::o;3893:370::-;4015:13;4064:2;4049:11;:6;4058:2;4049:11;:::i;:::-;4048:18;;;;:::i;:::-;4031:35;;:14;:35;:::i;:::-;4015:51;;4072:187;4096:5;4079:14;:22;4072:187;;;4194:1;4178:14;4171:25;4243:1;4227:14;4223:22;4205:40;;4072:187;;12274:451:58;12434:21;12458:17;:15;:17::i;:::-;12434:41;-1:-1:-1;12510:4:58;-1:-1:-1;;;;;12485:30:58;;;12481:240;;12525:78;12554:7;12563:8;12573:17;12592:10;12525:28;:78::i;12481:240::-;12624:90;;;;;-1:-1:-1;;;;;12624:40:58;;;;;:90;;12665:7;;12674:8;;12684:17;;12703:10;;12624:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12428:297;12274:451;;;;:::o;2022:570:52:-;2113:5;2211:3;2202:5;:12;;:34;;;;;2225:4;:11;2218:3;:18;;2202:34;2196:85;;2264:4;2270:5;2277:3;2246:35;;;;;;;;;;;;;:::i;2196:85::-;2349:4;2339:15;;2396:17;2408:5;2339:15;2396:17;:::i;:::-;;-1:-1:-1;2419:12:52;2434:11;2440:5;2434:3;:11;:::i;:::-;643:17;2570:15;2562:3;2550:15;;;;2549:37;;;;;;-1:-1:-1;;;;;2022:570:52:o;40037:220:68:-;40103:24;40135:30;40168:32;40186:6;40194:2;40198:1;40168:17;:32::i;39736:222:69:-;39800:12;39890:6;39914:39;39890:6;39947:2;39951:1;39914:17;:39::i;181:376:32:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;2631:1127:70:-;2751:22;2781:21;2805;:11;2946:3:52;2924:25;;2850:104;2805:21:70;2781:45;-1:-1:-1;643:17:52;3187:38;;2832:20:70;2994:11;3187:38:52;2994:11:70;2979:26;;;;:::i;:::-;;2965:40;;3114:4;3108:11;3099:20;;3157:4;3150:5;3146:16;3217:2;3204:11;3200:20;3186:12;3182:39;3176:4;3169:53;3265:11;3258:5;3251:26;3308:1;3285:463;3324:11;3321:1;3318:18;3285:463;;;3718:20;;3697:42;;3676:64;;3590:31;;;;3503:4;3485:23;;;;3411:1;3404:9;3285:463;;;3289:28;;3066:688;;;2631:1127;;;;;:::o;784:1339::-;956:12;;909:17;;934:19;997:26;1012:11;956:12;997:26;:::i;:::-;974:49;;1391:4;1385:11;;-1:-1:-1;1434:4:70;1424:15;;-1:-1:-1;;5234:14:53;1481:32:70;;;5234:14:53;5230:28;1453:4:70;1446:69;1557:12;1551:4;1544:26;1601:1;1671:4;1664:5;1660:16;1578:535;1691:11;1688:1;1685:18;1578:535;;;2084:19;;2063:41;;2041:64;;1957:31;;;;1778:1;1771:9;;;;;1870:4;1852:23;1578:535;;14:367:113;77:8;87:6;141:3;134:4;126:6;122:17;118:27;108:55;;159:1;156;149:12;108:55;-1:-1:-1;182:20:113;;225:18;214:30;;211:50;;;257:1;254;247:12;211:50;294:4;286:6;282:17;270:29;;354:3;347:4;337:6;334:1;330:14;322:6;318:27;314:38;311:47;308:67;;;371:1;368;361:12;308:67;14:367;;;;;:::o;386:156::-;452:20;;512:4;501:16;;491:27;;481:55;;532:1;529;522:12;547:709;723:6;731;739;747;755;808:3;796:9;787:7;783:23;779:33;776:53;;;825:1;822;815:12;776:53;861:9;848:23;838:33;;922:2;911:9;907:18;894:32;949:18;941:6;938:30;935:50;;;981:1;978;971:12;935:50;1020:70;1082:7;1073:6;1062:9;1058:22;1020:70;:::i;:::-;1109:8;;-1:-1:-1;994:96:113;-1:-1:-1;1163:36:113;;-1:-1:-1;1195:2:113;1180:18;;1163:36;:::i;:::-;547:709;;;;-1:-1:-1;547:709:113;;1246:2;1231:18;1218:32;;547:709;-1:-1:-1;;547:709:113:o;1261:250::-;1346:1;1356:113;1370:6;1367:1;1364:13;1356:113;;;1446:11;;;1440:18;1427:11;;;1420:39;1392:2;1385:10;1356:113;;;-1:-1:-1;;1503:1:113;1485:16;;1478:27;1261:250::o;1516:329::-;1557:3;1595:5;1589:12;1622:6;1617:3;1610:19;1638:76;1707:6;1700:4;1695:3;1691:14;1684:4;1677:5;1673:16;1638:76;:::i;:::-;1759:2;1747:15;-1:-1:-1;;1743:88:113;1734:98;;;;1834:4;1730:109;;1516:329;-1:-1:-1;;1516:329:113:o;1850:217::-;1997:2;1986:9;1979:21;1960:4;2017:44;2057:2;2046:9;2042:18;2034:6;2017:44;:::i;2072:208::-;2152:20;;-1:-1:-1;;;;;2201:54:113;;2191:65;;2181:93;;2270:1;2267;2260:12;2285:318;2405:6;2413;2466:2;2454:9;2445:7;2441:23;2437:32;2434:52;;;2482:1;2479;2472:12;2434:52;2518:9;2505:23;2495:33;;2547:50;2593:2;2582:9;2578:18;2547:50;:::i;:::-;2537:60;;2285:318;;;;;:::o;2608:1193::-;2911:6;2919;2927;2935;2943;2951;2959;2967;3020:3;3008:9;2999:7;2995:23;2991:33;2988:53;;;3037:1;3034;3027:12;2988:53;3073:9;3060:23;3050:33;;3130:2;3119:9;3115:18;3102:32;3092:42;;3181:2;3170:9;3166:18;3153:32;3143:42;;3232:2;3221:9;3217:18;3204:32;3194:42;;3287:3;3276:9;3272:19;3259:33;3311:18;3352:2;3344:6;3341:14;3338:34;;;3368:1;3365;3358:12;3338:34;3407:70;3469:7;3460:6;3449:9;3445:22;3407:70;:::i;:::-;3496:8;;-1:-1:-1;3381:96:113;-1:-1:-1;3584:3:113;3569:19;;3556:33;;-1:-1:-1;3601:16:113;;;3598:36;;;3630:1;3627;3620:12;3598:36;;3669:72;3733:7;3722:8;3711:9;3707:24;3669:72;:::i;:::-;2608:1193;;;;-1:-1:-1;2608:1193:113;;-1:-1:-1;2608:1193:113;;;;;;3760:8;-1:-1:-1;;;2608:1193:113:o;3806:347::-;3857:8;3867:6;3921:3;3914:4;3906:6;3902:17;3898:27;3888:55;;3939:1;3936;3929:12;3888:55;-1:-1:-1;3962:20:113;;4005:18;3994:30;;3991:50;;;4037:1;4034;4027:12;3991:50;4074:4;4066:6;4062:17;4050:29;;4126:3;4119:4;4110:6;4102;4098:19;4094:30;4091:39;4088:59;;;4143:1;4140;4133:12;4158:916;4312:6;4320;4328;4336;4344;4352;4405:3;4393:9;4384:7;4380:23;4376:33;4373:53;;;4422:1;4419;4412:12;4373:53;4458:9;4445:23;4435:33;;4519:2;4508:9;4504:18;4491:32;4542:18;4583:2;4575:6;4572:14;4569:34;;;4599:1;4596;4589:12;4569:34;4638:70;4700:7;4691:6;4680:9;4676:22;4638:70;:::i;:::-;4727:8;;-1:-1:-1;4612:96:113;-1:-1:-1;4612:96:113;;-1:-1:-1;4781:36:113;4813:2;4798:18;;4781:36;:::i;:::-;4771:46;;4870:2;4859:9;4855:18;4842:32;4826:48;;4899:2;4889:8;4886:16;4883:36;;;4915:1;4912;4905:12;4883:36;;4954:60;5006:7;4995:8;4984:9;4980:24;4954:60;:::i;:::-;4158:916;;;;-1:-1:-1;4158:916:113;;-1:-1:-1;4158:916:113;;5033:8;;4158:916;-1:-1:-1;;;4158:916:113:o;5079:607::-;5213:6;5221;5229;5237;5290:2;5278:9;5269:7;5265:23;5261:32;5258:52;;;5306:1;5303;5296:12;5258:52;5342:9;5329:23;5319:33;;5403:2;5392:9;5388:18;5375:32;5430:18;5422:6;5419:30;5416:50;;;5462:1;5459;5452:12;5416:50;5501:70;5563:7;5554:6;5543:9;5539:22;5501:70;:::i;:::-;5590:8;;-1:-1:-1;5475:96:113;-1:-1:-1;5644:36:113;;-1:-1:-1;5676:2:113;5661:18;;5644:36;:::i;:::-;5634:46;;5079:607;;;;;;;:::o;5691:681::-;5862:2;5914:21;;;5984:13;;5887:18;;;6006:22;;;5833:4;;5862:2;6085:15;;;;6059:2;6044:18;;;5833:4;6128:218;6142:6;6139:1;6136:13;6128:218;;;6207:13;;-1:-1:-1;;;;;6203:62:113;6191:75;;6321:15;;;;6286:12;;;;6164:1;6157:9;6128:218;;;-1:-1:-1;6363:3:113;;5691:681;-1:-1:-1;;;;;;5691:681:113:o;6377:1237::-;6588:6;6596;6604;6612;6620;6628;6636;6644;6697:3;6685:9;6676:7;6672:23;6668:33;6665:53;;;6714:1;6711;6704:12;6665:53;6750:9;6737:23;6727:33;;6811:2;6800:9;6796:18;6783:32;6834:18;6875:2;6867:6;6864:14;6861:34;;;6891:1;6888;6881:12;6861:34;6930:70;6992:7;6983:6;6972:9;6968:22;6930:70;:::i;:::-;7019:8;;-1:-1:-1;6904:96:113;-1:-1:-1;7107:2:113;7092:18;;7079:32;;-1:-1:-1;7123:16:113;;;7120:36;;;7152:1;7149;7142:12;7120:36;7191:60;7243:7;7232:8;7221:9;7217:24;7191:60;:::i;:::-;7270:8;;-1:-1:-1;7165:86:113;-1:-1:-1;7352:2:113;7337:18;;7324:32;;-1:-1:-1;7409:3:113;7394:19;;7381:33;;-1:-1:-1;7426:16:113;;;7423:36;;;7455:1;7452;7445:12;7423:36;;7494:60;7546:7;7535:8;7524:9;7520:24;7494:60;:::i;7619:1018::-;7815:6;7823;7831;7839;7847;7855;7863;7916:3;7904:9;7895:7;7891:23;7887:33;7884:53;;;7933:1;7930;7923:12;7884:53;7969:9;7956:23;7946:33;;8030:2;8019:9;8015:18;8002:32;8053:18;8094:2;8086:6;8083:14;8080:34;;;8110:1;8107;8100:12;8080:34;8149:70;8211:7;8202:6;8191:9;8187:22;8149:70;:::i;:::-;8238:8;;-1:-1:-1;8123:96:113;-1:-1:-1;8123:96:113;;-1:-1:-1;8292:36:113;8324:2;8309:18;;8292:36;:::i;:::-;8282:46;;8381:2;8370:9;8366:18;8353:32;8337:48;;8410:2;8400:8;8397:16;8394:36;;;8426:1;8423;8416:12;8394:36;;8465:60;8517:7;8506:8;8495:9;8491:24;8465:60;:::i;:::-;7619:1018;;;;-1:-1:-1;7619:1018:113;;;;;;8626:3;8611:19;;;8598:33;;7619:1018;-1:-1:-1;;;;7619:1018:113:o;8642:212::-;8733:6;8786:2;8774:9;8765:7;8761:23;8757:32;8754:52;;;8802:1;8799;8792:12;8754:52;-1:-1:-1;8825:23:113;;8642:212;-1:-1:-1;8642:212:113:o;9074:638::-;9243:6;9251;9259;9267;9320:2;9308:9;9299:7;9295:23;9291:32;9288:52;;;9336:1;9333;9326:12;9288:52;9372:9;9359:23;9349:33;;9433:2;9422:9;9418:18;9405:32;9460:18;9452:6;9449:30;9446:50;;;9492:1;9489;9482:12;9446:50;9531:70;9593:7;9584:6;9573:9;9569:22;9531:70;:::i;:::-;9074:638;;9620:8;;-1:-1:-1;9505:96:113;;9702:2;9687:18;9674:32;;9074:638;-1:-1:-1;;;;9074:638:113:o;9717:483::-;9973:2;9962:9;9955:21;9936:4;9999:44;10039:2;10028:9;10024:18;10016:6;9999:44;:::i;:::-;10079:6;10074:2;10063:9;10059:18;10052:34;10134:9;10126:6;10122:22;10117:2;10106:9;10102:18;10095:50;10162:32;10187:6;10179;10162:32;:::i;10205:184::-;-1:-1:-1;;;10254:1:113;10247:88;10354:4;10351:1;10344:15;10378:4;10375:1;10368:15;10394:334;10465:2;10459:9;10521:2;10511:13;;-1:-1:-1;;10507:86:113;10495:99;;10624:18;10609:34;;10645:22;;;10606:62;10603:88;;;10671:18;;:::i;:::-;10707:2;10700:22;10394:334;;-1:-1:-1;10394:334:113:o;10733:183::-;10793:4;10826:18;10818:6;10815:30;10812:56;;;10848:18;;:::i;:::-;-1:-1:-1;10893:1:113;10889:14;10905:4;10885:25;;10733:183::o;10921:662::-;10975:5;11028:3;11021:4;11013:6;11009:17;11005:27;10995:55;;11046:1;11043;11036:12;10995:55;11082:6;11069:20;11108:4;11132:60;11148:43;11188:2;11148:43;:::i;:::-;11132:60;:::i;:::-;11226:15;;;11312:1;11308:10;;;;11296:23;;11292:32;;;11257:12;;;;11336:15;;;11333:35;;;11364:1;11361;11354:12;11333:35;11400:2;11392:6;11388:15;11412:142;11428:6;11423:3;11420:15;11412:142;;;11494:17;;11482:30;;11532:12;;;;11445;;11412:142;;;-1:-1:-1;11572:5:113;10921:662;-1:-1:-1;;;;;;10921:662:113:o;11588:656::-;11738:6;11746;11754;11762;11770;11823:3;11811:9;11802:7;11798:23;11794:33;11791:53;;;11840:1;11837;11830:12;11791:53;11876:9;11863:23;11853:33;;11937:2;11926:9;11922:18;11909:32;11964:18;11956:6;11953:30;11950:50;;;11996:1;11993;11986:12;11950:50;12019:61;12072:7;12063:6;12052:9;12048:22;12019:61;:::i;:::-;12009:71;;;12099:36;12131:2;12120:9;12116:18;12099:36;:::i;:::-;11588:656;;;;-1:-1:-1;12089:46:113;;12182:2;12167:18;;12154:32;;-1:-1:-1;12233:3:113;12218:19;12205:33;;11588:656;-1:-1:-1;;11588:656:113:o;12249:448::-;12374:6;12382;12435:2;12423:9;12414:7;12410:23;12406:32;12403:52;;;12451:1;12448;12441:12;12403:52;12487:9;12474:23;12464:33;;12548:2;12537:9;12533:18;12520:32;12575:18;12567:6;12564:30;12561:50;;;12607:1;12604;12597:12;12561:50;12630:61;12683:7;12674:6;12663:9;12659:22;12630:61;:::i;:::-;12620:71;;;12249:448;;;;;:::o;12702:388::-;12829:6;12837;12845;12898:2;12886:9;12877:7;12873:23;12869:32;12866:52;;;12914:1;12911;12904:12;12866:52;12950:9;12937:23;12927:33;;12979:50;13025:2;13014:9;13010:18;12979:50;:::i;:::-;12969:60;;13048:36;13080:2;13069:9;13065:18;13048:36;:::i;:::-;13038:46;;12702:388;;;;;:::o;13095:1699::-;13301:4;13330:2;13370;13359:9;13355:18;13400:2;13389:9;13382:21;13423:6;13458;13452:13;13489:6;13481;13474:22;13515:2;13505:12;;13548:2;13537:9;13533:18;13526:25;;13610:2;13600:6;13597:1;13593:14;13582:9;13578:30;13574:39;13648:2;13640:6;13636:15;13669:1;13690;13700:1065;13716:6;13711:3;13708:15;13700:1065;;;13785:22;;;13809:66;13781:95;13769:108;;13900:13;;13987:9;;-1:-1:-1;;;;;13983:58:113;13968:74;;14081:11;;14075:18;14113:15;;;14106:27;;;14194:19;;13940:15;;;14226:24;;;14316:21;;;;14361:1;;14284:2;14272:15;;;14375:282;14391:8;14386:3;14383:17;14375:282;;;14472:15;;14489:66;14468:88;14454:103;;14626:17;;;;14419:1;14410:11;;;;;14583:14;;;;14375:282;;;-1:-1:-1;14743:12:113;;;;14680:5;-1:-1:-1;;;14708:15:113;;;;13742:1;13733:11;13700:1065;;;-1:-1:-1;14782:6:113;;13095:1699;-1:-1:-1;;;;;;;;;13095:1699:113:o;14799:615::-;14851:3;14889:5;14883:12;14916:6;14911:3;14904:19;14942:4;14983:2;14978:3;14974:12;15008:11;15035;15028:18;;15085:6;15082:1;15078:14;15071:5;15067:26;15055:38;;15127:2;15120:5;15116:14;15148:1;15158:230;15172:6;15169:1;15166:13;15158:230;;;15243:5;15237:4;15233:16;15228:3;15221:29;15271:37;15303:4;15294:6;15288:13;15271:37;:::i;:::-;15366:12;;;;15263:45;-1:-1:-1;15331:15:113;;;;15194:1;15187:9;15158:230;;;-1:-1:-1;15404:4:113;;14799:615;-1:-1:-1;;;;;;;14799:615:113:o;15419:280::-;15618:2;15607:9;15600:21;15581:4;15638:55;15689:2;15678:9;15674:18;15666:6;15638:55;:::i;15886:620::-;16060:6;16068;16076;16084;16137:3;16125:9;16116:7;16112:23;16108:33;16105:53;;;16154:1;16151;16144:12;16105:53;16190:9;16177:23;16167:33;;16251:2;16240:9;16236:18;16223:32;16278:18;16270:6;16267:30;16264:50;;;16310:1;16307;16300:12;16264:50;16333:61;16386:7;16377:6;16366:9;16362:22;16333:61;:::i;:::-;16323:71;;;16413:36;16445:2;16434:9;16430:18;16413:36;:::i;:::-;15886:620;;;;-1:-1:-1;16403:46:113;;16496:2;16481:18;16468:32;;-1:-1:-1;;15886:620:113:o;16693:518::-;16825:6;16833;16841;16894:2;16882:9;16873:7;16869:23;16865:32;16862:52;;;16910:1;16907;16900:12;16862:52;16946:9;16933:23;16923:33;;17007:2;16996:9;16992:18;16979:32;17034:18;17026:6;17023:30;17020:50;;;17066:1;17063;17056:12;17020:50;17089:61;17142:7;17133:6;17122:9;17118:22;17089:61;:::i;:::-;17079:71;;;17169:36;17201:2;17190:9;17186:18;17169:36;:::i;17216:1014::-;17371:6;17379;17387;17395;17403;17411;17464:3;17452:9;17443:7;17439:23;17435:33;17432:53;;;17481:1;17478;17471:12;17432:53;17517:9;17504:23;17494:33;;17578:2;17567:9;17563:18;17550:32;17601:18;17642:2;17634:6;17631:14;17628:34;;;17658:1;17655;17648:12;17628:34;17697:70;17759:7;17750:6;17739:9;17735:22;17697:70;:::i;:::-;17786:8;;-1:-1:-1;17671:96:113;-1:-1:-1;17871:2:113;17856:18;;17843:32;;-1:-1:-1;17915:14:113;17904:26;;17894:37;;17884:65;;17945:1;17942;17935:12;17884:65;17968:5;;-1:-1:-1;18026:2:113;18011:18;;17998:32;;18042:16;;;18039:36;;;18071:1;18068;18061:12;18427:165;18494:20;;18554:12;18543:24;;18533:35;;18523:63;;18582:1;18579;18572:12;18597:1062;18767:6;18775;18783;18791;18799;18807;18815;18823;18876:3;18864:9;18855:7;18851:23;18847:33;18844:53;;;18893:1;18890;18883:12;18844:53;18929:9;18916:23;18906:33;;18990:2;18979:9;18975:18;18962:32;19013:18;19054:2;19046:6;19043:14;19040:34;;;19070:1;19067;19060:12;19040:34;19109:70;19171:7;19162:6;19151:9;19147:22;19109:70;:::i;:::-;19198:8;;-1:-1:-1;19083:96:113;-1:-1:-1;19083:96:113;;-1:-1:-1;19252:36:113;19284:2;19269:18;;19252:36;:::i;:::-;19242:46;;19307:37;19340:2;19329:9;19325:18;19307:37;:::i;:::-;19297:47;;19363:38;19396:3;19385:9;19381:19;19363:38;:::i;:::-;19353:48;;19454:3;19443:9;19439:19;19426:33;19410:49;;19484:2;19474:8;19471:16;19468:36;;;19500:1;19497;19490:12;19664:537;19791:6;19799;19807;19860:2;19848:9;19839:7;19835:23;19831:32;19828:52;;;19876:1;19873;19866:12;19828:52;19912:9;19899:23;19889:33;;19973:2;19962:9;19958:18;19945:32;20000:18;19992:6;19989:30;19986:50;;;20032:1;20029;20022:12;19986:50;20071:70;20133:7;20124:6;20113:9;20109:22;20071:70;:::i;:::-;19664:537;;20160:8;;-1:-1:-1;20045:96:113;;-1:-1:-1;;;;19664:537:113:o;21630:357::-;21748:12;;21795:4;21784:16;;;21778:23;;21748:12;21813:16;;21810:171;;;-1:-1:-1;;21887:4:113;21883:17;;;;21880:1;21876:25;21872:98;21861:110;;21630:357;-1:-1:-1;21630:357:113:o;21992:246::-;22041:4;22074:18;22066:6;22063:30;22060:56;;;22096:18;;:::i;:::-;-1:-1:-1;22153:2:113;22141:15;-1:-1:-1;;22137:88:113;22227:4;22133:99;;21992:246::o;22243:1412::-;22381:9;22416:64;22432:47;22472:6;22432:47;:::i;22416:64::-;22502:3;22526:6;22521:3;22514:19;22552:4;22581:2;22576:3;22572:12;22565:19;;22625:6;22622:1;22618:14;22611:5;22607:26;22656:14;22648:6;22645:26;22642:46;;;22684:1;22681;22674:12;22642:46;22708:5;22722:900;22738:6;22733:3;22730:15;22722:900;;;22824:3;22811:17;22860:18;22847:11;22844:35;22841:125;;;22920:1;22949:2;22945;22938:14;22841:125;22989:23;;23054:14;23047:4;23039:13;;23035:34;23025:132;;23111:1;23140:2;23136;23129:14;23025:132;23193:2;23180:16;23222:49;23238:32;23267:2;23238:32;:::i;23222:49::-;23298:2;23291:5;23284:17;23342:14;23337:2;23332;23328;23324:11;23320:20;23317:40;23314:130;;;23398:1;23427:2;23423;23416:14;23314:130;23499:2;23494;23490;23486:11;23481:2;23474:5;23470:14;23457:45;23547:1;23526:14;;;23522:23;;23515:34;;;;23562:18;;-1:-1:-1;23600:12:113;;;;22755;;22722:900;;;-1:-1:-1;23644:5:113;;22243:1412;-1:-1:-1;;;;;;22243:1412:113:o;23660:437::-;23739:1;23735:12;;;;23782;;;23803:61;;23857:4;23849:6;23845:17;23835:27;;23803:61;23910:2;23902:6;23899:14;23879:18;23876:38;23873:218;;-1:-1:-1;;;23944:1:113;23937:88;24048:4;24045:1;24038:15;24076:4;24073:1;24066:15;24404:430;24601:66;24593:6;24589:79;24584:3;24577:92;24559:3;24698:6;24692:13;24714:74;24781:6;24777:1;24772:3;24768:11;24761:4;24753:6;24749:17;24714:74;:::i;:::-;24808:16;;;;24826:1;24804:24;;24404:430;-1:-1:-1;;;24404:430:113:o;24839:287::-;24968:3;25006:6;25000:13;25022:66;25081:6;25076:3;25069:4;25061:6;25057:17;25022:66;:::i;:::-;25104:16;;;;;24839:287;-1:-1:-1;;24839:287:113:o;25131:277::-;25198:6;25251:2;25239:9;25230:7;25226:23;25222:32;25219:52;;;25267:1;25264;25257:12;25219:52;25299:9;25293:16;25352:5;25345:13;25338:21;25331:5;25328:32;25318:60;;25374:1;25371;25364:12;25413:184;-1:-1:-1;;;25462:1:113;25455:88;25562:4;25559:1;25552:15;25586:4;25583:1;25576:15;26497:184;-1:-1:-1;;;26546:1:113;26539:88;26646:4;26643:1;26636:15;26670:4;26667:1;26660:15;26686:402;26835:2;26820:18;;26868:1;26857:13;;26847:201;;-1:-1:-1;;;26901:1:113;26894:88;27005:4;27002:1;26995:15;27033:4;27030:1;27023:15;26847:201;27057:25;;;26686:402;:::o;27093:184::-;-1:-1:-1;;;27142:1:113;27135:88;27242:4;27239:1;27232:15;27266:4;27263:1;27256:15;27282:151;27372:4;27365:12;;;27351;;;27347:31;;27390:14;;27387:40;;;27407:18;;:::i;27997:780::-;28047:3;28088:5;28082:12;28117:36;28143:9;28117:36;:::i;:::-;28172:1;28189:18;;;28216:191;;;;28421:1;28416:355;;;;28182:589;;28216:191;28264:66;28253:9;28249:82;28244:3;28237:95;28387:6;28380:14;28373:22;28365:6;28361:35;28356:3;28352:45;28345:52;;28216:191;;28416:355;28447:5;28444:1;28437:16;28476:4;28521:2;28518:1;28508:16;28546:1;28560:165;28574:6;28571:1;28568:13;28560:165;;;28652:14;;28639:11;;;28632:35;28695:16;;;;28589:10;;28560:165;;;28564:3;;;28754:6;28749:3;28745:16;28738:23;;28182:589;;;;;27997:780;;;;:::o;28782:664::-;29132:66;29127:3;29120:79;29102:3;29218:47;29261:2;29256:3;29252:12;29244:6;29218:47;:::i;:::-;29285:66;29274:78;;29381:31;29376:2;29368:11;;29361:52;29437:2;29429:11;;28782:664;-1:-1:-1;;;28782:664:113:o;29969:694::-;30312:66;30307:3;30300:79;30282:3;30408:6;30402:13;30424:75;30492:6;30487:2;30482:3;30478:12;30471:4;30463:6;30459:17;30424:75;:::i;:::-;30563:66;30558:2;30518:16;;;;30550:11;;;30543:87;-1:-1:-1;30654:2:113;30646:11;;29969:694;-1:-1:-1;29969:694:113:o;30668:545::-;30770:2;30765:3;30762:11;30759:448;;;30806:1;30831:5;30827:2;30820:17;30876:4;30872:2;30862:19;30946:2;30934:10;30930:19;30927:1;30923:27;30917:4;30913:38;30982:4;30970:10;30967:20;30964:47;;;-1:-1:-1;31005:4:113;30964:47;31060:2;31055:3;31051:12;31048:1;31044:20;31038:4;31034:31;31024:41;;31115:82;31133:2;31126:5;31123:13;31115:82;;;31178:17;;;31159:1;31148:13;31115:82;;31449:1471;31575:3;31569:10;31602:18;31594:6;31591:30;31588:56;;;31624:18;;:::i;:::-;31653:97;31743:6;31703:38;31735:4;31729:11;31703:38;:::i;:::-;31697:4;31653:97;:::i;:::-;31805:4;;31869:2;31858:14;;31886:1;31881:782;;;;32707:1;32724:6;32721:89;;;-1:-1:-1;32776:19:113;;;32770:26;32721:89;-1:-1:-1;;31346:1:113;31342:11;;;31338:84;31334:89;31324:100;31430:1;31426:11;;;31321:117;32823:81;;31851:1063;;31881:782;27944:1;27937:14;;;27981:4;27968:18;;-1:-1:-1;;31917:79:113;;;32094:236;32108:7;32105:1;32102:14;32094:236;;;32197:19;;;32191:26;32176:42;;32289:27;;;;32257:1;32245:14;;;;32124:19;;32094:236;;;32098:3;32358:6;32349:7;32346:19;32343:261;;;32419:19;;;32413:26;-1:-1:-1;;32502:1:113;32498:14;;;32514:3;32494:24;32490:97;32486:102;32471:118;32456:134;;32343:261;-1:-1:-1;;;;;32650:1:113;32634:14;;;32630:22;32617:36;;-1:-1:-1;31449:1471:113:o;32925:128::-;32992:9;;;33013:11;;;33010:37;;;33027:18;;:::i;33058:125::-;33123:9;;;33144:10;;;33141:36;;;33157:18;;:::i;33542:197::-;33670:3;33695:38;33729:3;33721:6;33695:38;:::i;33744:1554::-;33863:3;33857:4;33854:13;33851:26;;33870:5;;33744:1554::o;33851:26::-;33900:37;33932:3;33926:10;33900:37;:::i;:::-;33960:18;33952:6;33949:30;33946:56;;;33982:18;;:::i;:::-;34011:97;34101:6;34061:38;34093:4;34087:11;34061:38;:::i;34011:97::-;34134:1;34162:2;34154:6;34151:14;34179:1;34174:867;;;;35085:1;35102:6;35099:89;;;-1:-1:-1;35154:19:113;;;35148:26;35099:89;-1:-1:-1;;31346:1:113;31342:11;;;31338:84;31334:89;31324:100;31430:1;31426:11;;;31321:117;35201:81;;34144:1148;;34174:867;27944:1;27937:14;;;27981:4;27968:18;;-1:-1:-1;;34210:79:113;;;27944:1;27937:14;;;27981:4;27968:18;;34433:9;34455:251;34469:7;34466:1;34463:14;34455:251;;;34551:21;;;34545:28;34530:44;;34601:1;34674:18;;;;34629:15;;;;34492:4;34485:12;34455:251;;;34459:3;34734:6;34725:7;34722:19;34719:263;;;34795:21;;34789:28;-1:-1:-1;;34892:3:113;34880:1;34876:14;;;34872:24;34868:97;34864:102;34849:118;34834:134;;;-1:-1:-1;;35028:1:113;35012:14;;;35008:22;34995:36;;-1:-1:-1;33744:1554:113:o;35873:348::-;36103:2;36092:9;36085:21;36066:4;36123:49;36168:2;36157:9;36153:18;35786:2;35774:15;;35821:12;35814:4;35805:14;;35798:36;35859:2;35850:12;;35709:159;36123:49;36115:57;;36208:6;36203:2;36192:9;36188:18;36181:34;35873:348;;;;:::o;36390:::-;36620:2;36609:9;36602:21;36583:4;36640:49;36685:2;36674:9;36670:18;36303:2;36291:15;;36338:12;36331:4;36322:14;;36315:36;36376:2;36367:12;;36226:159;36962:464;37209:66;37201:6;37197:79;37186:9;37179:98;37313:6;37308:2;37297:9;37293:18;37286:34;37356:2;37351;37340:9;37336:18;37329:30;37160:4;37376:44;37416:2;37405:9;37401:18;37393:6;37376:44;:::i;37684:322::-;37893:6;37882:9;37875:25;37936:2;37931;37920:9;37916:18;37909:30;37856:4;37956:44;37996:2;37985:9;37981:18;37973:6;37956:44;:::i;38620:439::-;38870:2;38859:9;38852:21;38833:4;38896:49;38941:2;38930:9;38926:18;35786:2;35774:15;;35821:12;35814:4;35805:14;;35798:36;35859:2;35850:12;;35709:159;38896:49;38993:9;38985:6;38981:22;38976:2;38965:9;38961:18;38954:50;39021:32;39046:6;39038;39021:32;:::i;39064:439::-;39314:2;39303:9;39296:21;39277:4;39340:49;39385:2;39374:9;39370:18;36303:2;36291:15;;36338:12;36331:4;36322:14;;36315:36;36376:2;36367:12;;36226:159;39508:175;39545:3;39589:4;39582:5;39578:16;39618:4;39609:7;39606:17;39603:43;;39626:18;;:::i;:::-;39675:1;39662:15;;39508:175;-1:-1:-1;;39508:175:113:o;39688:435::-;39741:3;39779:5;39773:12;39806:6;39801:3;39794:19;39832:4;39861:2;39856:3;39852:12;39845:19;;39898:2;39891:5;39887:14;39919:1;39929:169;39943:6;39940:1;39937:13;39929:169;;;40004:13;;39992:26;;40038:12;;;;40073:15;;;;39965:1;39958:9;39929:169;;;-1:-1:-1;40114:3:113;;39688:435;-1:-1:-1;;;;;39688:435:113:o;40128:511::-;40379:2;40368:9;40361:21;40342:4;40405:56;40457:2;40446:9;40442:18;40434:6;40405:56;:::i;:::-;40509:14;40501:6;40497:27;40492:2;40481:9;40477:18;40470:55;40573:9;40565:6;40561:22;40556:2;40545:9;40541:18;40534:50;40601:32;40626:6;40618;40601:32;:::i;40644:616::-;40955:6;40944:9;40937:25;40998:3;40993:2;40982:9;40978:18;40971:31;40918:4;41025:57;41077:3;41066:9;41062:19;41054:6;41025:57;:::i;:::-;41130:14;41122:6;41118:27;41113:2;41102:9;41098:18;41091:55;41194:9;41186:6;41182:22;41177:2;41166:9;41162:18;41155:50;41222:32;41247:6;41239;41222:32;:::i;:::-;41214:40;40644:616;-1:-1:-1;;;;;;;40644:616:113:o;41265:195::-;41304:3;-1:-1:-1;;41328:5:113;41325:77;41322:103;;41405:18;;:::i;:::-;-1:-1:-1;41452:1:113;41441:13;;41265:195::o;42574:168::-;42647:9;;;42678;;42695:15;;;42689:22;;42675:37;42665:71;;42716:18;;:::i;42747:912::-;43277:6;43266:9;43259:25;43320:6;43315:2;43304:9;43300:18;43293:34;43363:6;43358:2;43347:9;43343:18;43336:34;43406:6;43401:2;43390:9;43386:18;43379:34;43450:3;43444;43433:9;43429:19;43422:32;43240:4;43477:56;43528:3;43517:9;43513:19;43505:6;43477:56;:::i;:::-;43582:9;43574:6;43570:22;43564:3;43553:9;43549:19;43542:51;43610:43;43646:6;43638;43610:43;:::i;43664:649::-;43744:6;43797:2;43785:9;43776:7;43772:23;43768:32;43765:52;;;43813:1;43810;43803:12;43765:52;43846:9;43840:16;43879:18;43871:6;43868:30;43865:50;;;43911:1;43908;43901:12;43865:50;43934:22;;43987:4;43979:13;;43975:27;-1:-1:-1;43965:55:113;;44016:1;44013;44006:12;43965:55;44045:2;44039:9;44070:49;44086:32;44115:2;44086:32;:::i;44070:49::-;44142:2;44135:5;44128:17;44182:7;44177:2;44172;44168;44164:11;44160:20;44157:33;44154:53;;;44203:1;44200;44193:12;44154:53;44216:67;44280:2;44275;44268:5;44264:14;44259:2;44255;44251:11;44216:67;:::i;44318:764::-;44708:14;44703:3;44696:27;44678:3;44752:6;44746:13;44768:75;44836:6;44831:2;44826:3;44822:12;44815:4;44807:6;44803:17;44768:75;:::i;:::-;44907:3;44902:2;44862:16;;;44894:11;;;44887:24;44936:13;;44958:76;44936:13;45020:2;45012:11;;45005:4;44993:17;;44958:76;:::i;:::-;45054:17;45073:2;45050:26;;44318:764;-1:-1:-1;;;;44318:764:113:o;45371:184::-;-1:-1:-1;;;45420:1:113;45413:88;45520:4;45517:1;45510:15;45544:4;45541:1;45534:15;46123:709;46493:6;46482:9;46475:25;46536:3;46531:2;46520:9;46516:18;46509:31;46456:4;46563:57;46615:3;46604:9;46600:19;46592:6;46563:57;:::i;:::-;46668:4;46660:6;46656:17;46651:2;46640:9;46636:18;46629:45;46722:9;46714:6;46710:22;46705:2;46694:9;46690:18;46683:50;46750:32;46775:6;46767;46750:32;:::i;:::-;46742:40;;;46819:6;46813:3;46802:9;46798:19;46791:35;46123:709;;;;;;;;:::o;46837:548::-;47161:6;47150:9;47143:25;47204:3;47199:2;47188:9;47184:18;47177:31;47124:4;47225:57;47277:3;47266:9;47262:19;47254:6;47225:57;:::i;:::-;47330:4;47318:17;;;;47313:2;47298:18;;47291:45;-1:-1:-1;47367:2:113;47352:18;47345:34;47217:65;46837:548;-1:-1:-1;;46837:548:113:o;47390:184::-;47460:6;47513:2;47501:9;47492:7;47488:23;47484:32;47481:52;;;47529:1;47526;47519:12;47481:52;-1:-1:-1;47552:16:113;;47390:184;-1:-1:-1;47390:184:113:o;47579:174::-;47646:12;47678:10;;;47690;;;47674:27;;47713:11;;;47710:37;;;47727:18;;:::i;:::-;47710:37;47579:174;;;;:::o;48405:708::-;48745:3;48734:9;48727:22;48708:4;48772:57;48824:3;48813:9;48809:19;48801:6;48772:57;:::i;:::-;48877:14;48869:6;48865:27;48860:2;48849:9;48845:18;48838:55;48941:12;48933:6;48929:25;48924:2;48913:9;48909:18;48902:53;48991:6;48986:2;48975:9;48971:18;48964:34;49047:9;49039:6;49035:22;49029:3;49018:9;49014:19;49007:51;49075:32;49100:6;49092;49075:32;:::i;:::-;49067:40;48405:708;-1:-1:-1;;;;;;;;48405:708:113:o;49118:900::-;49542:6;49531:9;49524:25;49585:3;49580:2;49569:9;49565:18;49558:31;49505:4;49612:57;49664:3;49653:9;49649:19;49641:6;49612:57;:::i;:::-;49717:4;49705:17;;49700:2;49685:18;;49678:45;49742:12;49790:15;;;49785:2;49770:18;;49763:43;49843:15;;49837:3;49822:19;;49815:44;49890:3;49875:19;;49868:35;;;49940:22;;;49934:3;49919:19;;49912:51;49980:32;49944:6;49997;49980:32;:::i;:::-;49972:40;49118:900;-1:-1:-1;;;;;;;;;;49118:900:113:o;50023:640::-;50274:6;50269:3;50262:19;50244:3;50300:2;50333;50328:3;50324:12;50365:6;50359:13;50430:2;50422:6;50418:15;50451:1;50461:175;50475:6;50472:1;50469:13;50461:175;;;50538:13;;50524:28;;50574:14;;;;50611:15;;;;50497:1;50490:9;50461:175;;50668:689;51002:3;50991:9;50984:22;50965:4;51029:57;51081:3;51070:9;51066:19;51058:6;51029:57;:::i;:::-;51134:9;51126:6;51122:22;51117:2;51106:9;51102:18;51095:50;51168:32;51193:6;51185;51168:32;:::i;:::-;51154:46;;51236:6;51231:2;51220:9;51216:18;51209:34;51291:9;51283:6;51279:22;51274:2;51263:9;51259:18;51252:50;51319:32;51344:6;51336;51319:32;:::i;51362:898::-;51817:6;51806:9;51799:25;51860:3;51855:2;51844:9;51840:18;51833:31;51780:4;51887:57;51939:3;51928:9;51924:19;51916:6;51887:57;:::i;:::-;51992:9;51984:6;51980:22;51975:2;51964:9;51960:18;51953:50;52026:32;52051:6;52043;52026:32;:::i;:::-;52012:46;;52094:6;52089:2;52078:9;52074:18;52067:34;52150:9;52142:6;52138:22;52132:3;52121:9;52117:19;52110:51;52178:32;52203:6;52195;52178:32;:::i;:::-;52170:40;;;52247:6;52241:3;52230:9;52226:19;52219:35;51362:898;;;;;;;;;:::o;52265:261::-;52444:2;52433:9;52426:21;52407:4;52464:56;52516:2;52505:9;52501:18;52493:6;52464:56;:::i;52531:468::-;52831:6;52820:9;52813:25;52874:2;52869;52858:9;52854:18;52847:30;52794:4;52894:56;52946:2;52935:9;52931:18;52923:6;52894:56;:::i;:::-;52886:64;;52986:6;52981:2;52970:9;52966:18;52959:34;52531:468;;;;;;:::o;53670:492::-;53845:3;53883:6;53877:13;53899:66;53958:6;53953:3;53946:4;53938:6;53934:17;53899:66;:::i;:::-;54028:13;;53987:16;;;;54050:70;54028:13;53987:16;54097:4;54085:17;;54050:70;:::i;:::-;54136:20;;53670:492;-1:-1:-1;;;;53670:492:113:o;54167:274::-;54207:1;54233;54223:189;;-1:-1:-1;;;54265:1:113;54258:88;54369:4;54366:1;54359:15;54397:4;54394:1;54387:15;54223:189;-1:-1:-1;54426:9:113;;54167:274::o;54446:604::-;54755:6;54744:9;54737:25;54798:3;54793:2;54782:9;54778:18;54771:31;54718:4;54825:57;54877:3;54866:9;54862:19;54854:6;54825:57;:::i;:::-;54930:4;54922:6;54918:17;54913:2;54902:9;54898:18;54891:45;54984:9;54976:6;54972:22;54967:2;54956:9;54952:18;54945:50;55012:32;55037:6;55029;55012:32;:::i;55055:359::-;55258:2;55247:9;55240:21;55221:4;55278:44;55318:2;55307:9;55303:18;55295:6;55278:44;:::i;:::-;55353:2;55338:18;;55331:34;;;;-1:-1:-1;55396:2:113;55381:18;55374:34;55270:52;55055:359;-1:-1:-1;55055:359:113:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "deleteRecord(bytes32,bytes32[])": "505a181d",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "getDynamicField(bytes32,bytes32[],uint8)": "1e788977",
    "getDynamicFieldLength(bytes32,bytes32[],uint8)": "dbbf0e21",
    "getDynamicFieldSlice(bytes32,bytes32[],uint8,uint256,uint256)": "4dc77d97",
    "getField(bytes32,bytes32[],uint8)": "d03edb8c",
    "getField(bytes32,bytes32[],uint8,bytes32)": "05242d2f",
    "getFieldLayout(bytes32)": "3a77c2c2",
    "getFieldLength(bytes32,bytes32[],uint8)": "a53417ed",
    "getFieldLength(bytes32,bytes32[],uint8,bytes32)": "9f1fcf0a",
    "getKeySchema(bytes32)": "d4285dc2",
    "getRecord(bytes32,bytes32[])": "cc49db7e",
    "getRecord(bytes32,bytes32[],bytes32)": "419b58fd",
    "getStaticField(bytes32,bytes32[],uint8,bytes32)": "8c364d59",
    "getValueSchema(bytes32)": "e228a4a3",
    "popFromDynamicField(bytes32,bytes32[],uint8,uint256)": "d9c03a04",
    "pushToDynamicField(bytes32,bytes32[],uint8,bytes)": "150f3262",
    "registerStoreHook(bytes32,address,uint8)": "530f4b60",
    "registerTable(bytes32,bytes32,bytes32,bytes32,string[],string[])": "0ba51f49",
    "setDynamicField(bytes32,bytes32[],uint8,bytes)": "ef6ea862",
    "setField(bytes32,bytes32[],uint8,bytes)": "114a7266",
    "setField(bytes32,bytes32[],uint8,bytes,bytes32)": "3708196e",
    "setRecord(bytes32,bytes32[],bytes,bytes32,bytes)": "298314fb",
    "setStaticField(bytes32,bytes32[],uint8,bytes,bytes32)": "390baae0",
    "spliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes)": "c0a2895a",
    "spliceStaticData(bytes32,bytes32[],uint48,bytes)": "b047c1eb",
    "storeVersion()": "c1122229",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testKeyEncoding()": "cccb4cda",
    "testRegisterAndGetFieldLayout()": "0a028481",
    "testRegisterAndGetSchema()": "c290114c",
    "testSetAndGet()": "0e757a2e",
    "unregisterStoreHook(bytes32,address)": "05609129"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"FieldLayoutLib_InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FieldLayoutLib_StaticLengthDoesNotFitInAWord\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FieldLayoutLib_StaticLengthIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"PackedCounter_InvalidLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"SchemaLib_InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SchemaLib_StaticTypeAfterDynamicType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"name\":\"Slice_OutOfBounds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessedIndex\",\"type\":\"uint256\"}],\"name\":\"Store_IndexOutOfBounds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"received\",\"type\":\"uint256\"}],\"name\":\"Store_InvalidDynamicDataLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"received\",\"type\":\"uint256\"}],\"name\":\"Store_InvalidFieldNamesLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"received\",\"type\":\"uint256\"}],\"name\":\"Store_InvalidKeyNamesLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes2\",\"name\":\"expected\",\"type\":\"bytes2\"},{\"internalType\":\"ResourceId\",\"name\":\"resourceId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"resourceIdString\",\"type\":\"string\"}],\"name\":\"Store_InvalidResourceType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint40\",\"name\":\"startWithinField\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"deleteCount\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"fieldLength\",\"type\":\"uint40\"}],\"name\":\"Store_InvalidSplice\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"received\",\"type\":\"uint256\"}],\"name\":\"Store_InvalidValueSchemaLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"tableIdString\",\"type\":\"string\"}],\"name\":\"Store_TableAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"tableIdString\",\"type\":\"string\"}],\"name\":\"Store_TableNotFound\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"storeVersion\",\"type\":\"bytes32\"}],\"name\":\"HelloStore\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"}],\"name\":\"Store_DeleteRecord\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"}],\"name\":\"Store_DeleteRecord\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"staticData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dynamicData\",\"type\":\"bytes\"}],\"name\":\"Store_SetRecord\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"staticData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dynamicData\",\"type\":\"bytes\"}],\"name\":\"Store_SetRecord\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint40\",\"name\":\"deleteCount\",\"type\":\"uint40\"},{\"indexed\":false,\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Store_SpliceDynamicData\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint40\",\"name\":\"deleteCount\",\"type\":\"uint40\"},{\"indexed\":false,\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Store_SpliceDynamicData\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Store_SpliceStaticData\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Store_SpliceStaticData\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"}],\"name\":\"deleteRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"dynamicFieldIndex\",\"type\":\"uint8\"}],\"name\":\"getDynamicField\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"dynamicFieldIndex\",\"type\":\"uint8\"}],\"name\":\"getDynamicFieldLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"dynamicFieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"name\":\"getDynamicFieldSlice\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"fieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"name\":\"getField\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"fieldIndex\",\"type\":\"uint8\"}],\"name\":\"getField\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"}],\"name\":\"getFieldLayout\",\"outputs\":[{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"fieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"name\":\"getFieldLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"fieldIndex\",\"type\":\"uint8\"}],\"name\":\"getFieldLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"}],\"name\":\"getKeySchema\",\"outputs\":[{\"internalType\":\"Schema\",\"name\":\"keySchema\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"name\":\"getRecord\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"staticData\",\"type\":\"bytes\"},{\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dynamicData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"}],\"name\":\"getRecord\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"staticData\",\"type\":\"bytes\"},{\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dynamicData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"fieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"name\":\"getStaticField\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"}],\"name\":\"getValueSchema\",\"outputs\":[{\"internalType\":\"Schema\",\"name\":\"valueSchema\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"dynamicFieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"byteLengthToPop\",\"type\":\"uint256\"}],\"name\":\"popFromDynamicField\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"dynamicFieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"dataToPush\",\"type\":\"bytes\"}],\"name\":\"pushToDynamicField\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IStoreHook\",\"name\":\"hookAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"enabledHooksBitmap\",\"type\":\"uint8\"}],\"name\":\"registerStoreHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"},{\"internalType\":\"Schema\",\"name\":\"keySchema\",\"type\":\"bytes32\"},{\"internalType\":\"Schema\",\"name\":\"valueSchema\",\"type\":\"bytes32\"},{\"internalType\":\"string[]\",\"name\":\"keyNames\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"fieldNames\",\"type\":\"string[]\"}],\"name\":\"registerTable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"dynamicFieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"setDynamicField\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"fieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"setField\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"fieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"name\":\"setField\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"staticData\",\"type\":\"bytes\"},{\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dynamicData\",\"type\":\"bytes\"}],\"name\":\"setRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"fieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"name\":\"setStaticField\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"dynamicFieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"uint40\",\"name\":\"startWithinField\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"deleteCount\",\"type\":\"uint40\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"spliceDynamicData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"spliceStaticData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storeVersion\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testKeyEncoding\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testRegisterAndGetFieldLayout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testRegisterAndGetSchema\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSetAndGet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IStoreHook\",\"name\":\"hookAddress\",\"type\":\"address\"}],\"name\":\"unregisterStoreHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"SchemaLib_InvalidLength(uint256)\":[{\"details\":\"Error raised when the provided schema has an invalid length.\"}],\"SchemaLib_StaticTypeAfterDynamicType()\":[{\"details\":\"Error raised when a static type is placed after a dynamic type in a schema.\"}]},\"events\":{\"HelloStore(bytes32)\":{\"params\":{\"storeVersion\":\"The version of the Store contract.\"}},\"Store_DeleteRecord(bytes32,bytes32[])\":{\"params\":{\"keyTuple\":\"An array representing the composite key for the record.\",\"tableId\":\"The ID of the table where the record is deleted.\"}},\"Store_SetRecord(bytes32,bytes32[],bytes,bytes32,bytes)\":{\"params\":{\"dynamicData\":\"The dynamic data of the record.\",\"encodedLengths\":\"The encoded lengths of the dynamic data of the record.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"staticData\":\"The static data of the record.\",\"tableId\":\"The ID of the table where the record is set.\"}},\"Store_SpliceDynamicData(bytes32,bytes32[],uint48,uint40,bytes32,bytes)\":{\"params\":{\"data\":\"The data to insert into the dynamic data of the record at the start byte.\",\"deleteCount\":\"The number of bytes to delete in the splice operation.\",\"encodedLengths\":\"The encoded lengths of the dynamic data of the record.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"start\":\"The start position in bytes for the splice operation.\",\"tableId\":\"The ID of the table where the data is spliced.\"}},\"Store_SpliceStaticData(bytes32,bytes32[],uint48,bytes)\":{\"details\":\"In static data, data is always overwritten starting at the start position, so the total length of the data remains the same and no data is shifted.\",\"params\":{\"data\":\"The data to write to the static data of the record at the start byte.\",\"keyTuple\":\"An array representing the key for the record.\",\"start\":\"The start position in bytes for the splice operation.\",\"tableId\":\"The ID of the table where the data is spliced.\"}}},\"kind\":\"dev\",\"methods\":{\"getDynamicField(bytes32,bytes32[],uint8)\":{\"params\":{\"dynamicFieldIndex\":\"Index of the dynamic field to retrieve.\",\"keyTuple\":\"The tuple used as a key to fetch the dynamic field.\",\"tableId\":\"The ID of the table.\"},\"returns\":{\"data\":\"The dynamic data of the specified field.\"}},\"getDynamicFieldLength(bytes32,bytes32[],uint8)\":{\"params\":{\"dynamicFieldIndex\":\"Index of the dynamic field to measure.\",\"keyTuple\":\"The tuple used as a key.\",\"tableId\":\"The ID of the table.\"},\"returns\":{\"_0\":\"The length of the specified dynamic field.\"}},\"getDynamicFieldSlice(bytes32,bytes32[],uint8,uint256,uint256)\":{\"params\":{\"dynamicFieldIndex\":\"Index of the dynamic field to slice.\",\"end\":\"The ending position of the slice.\",\"keyTuple\":\"The tuple used as a key to fetch the dynamic field slice.\",\"start\":\"The starting position of the slice.\",\"tableId\":\"The ID of the table.\"},\"returns\":{\"_0\":\"The sliced data from the specified dynamic field.\"}},\"getField(bytes32,bytes32[],uint8)\":{\"details\":\"This overload loads the FieldLayout from storage. If the table's FieldLayout is known to the caller, it should be passed in to the other overload to avoid the storage read.\",\"params\":{\"fieldIndex\":\"Index of the field to retrieve.\",\"keyTuple\":\"The tuple used as a key to fetch the field.\",\"tableId\":\"The ID of the table.\"},\"returns\":{\"data\":\"The data of the specified field.\"}},\"getField(bytes32,bytes32[],uint8,bytes32)\":{\"params\":{\"fieldIndex\":\"Index of the field to retrieve.\",\"fieldLayout\":\"The layout of fields for the retrieval.\",\"keyTuple\":\"The tuple used as a key to fetch the field.\",\"tableId\":\"The ID of the table.\"},\"returns\":{\"data\":\"The data of the specified field.\"}},\"getFieldLayout(bytes32)\":{\"params\":{\"tableId\":\"The ID of the table for which to retrieve the field layout.\"},\"returns\":{\"fieldLayout\":\"The layout of fields in the specified table.\"}},\"getFieldLength(bytes32,bytes32[],uint8)\":{\"details\":\"This overload loads the FieldLayout from storage. If the table's FieldLayout is known to the caller, it should be passed in to the other overload to avoid the storage read.\",\"params\":{\"fieldIndex\":\"Index of the field to measure.\",\"keyTuple\":\"The tuple used as a key.\",\"tableId\":\"The ID of the table.\"},\"returns\":{\"_0\":\"The length of the specified field.\"}},\"getFieldLength(bytes32,bytes32[],uint8,bytes32)\":{\"params\":{\"fieldIndex\":\"Index of the field to measure.\",\"fieldLayout\":\"The layout of fields for measurement.\",\"keyTuple\":\"The tuple used as a key.\",\"tableId\":\"The ID of the table.\"},\"returns\":{\"_0\":\"The length of the specified field.\"}},\"getKeySchema(bytes32)\":{\"params\":{\"tableId\":\"The ID of the table.\"},\"returns\":{\"keySchema\":\"The schema for keys in the specified table.\"}},\"getRecord(bytes32,bytes32[])\":{\"params\":{\"keyTuple\":\"The tuple used as a key to fetch the record.\",\"tableId\":\"The ID of the table.\"},\"returns\":{\"dynamicData\":\"The dynamic data of the record.\",\"encodedLengths\":\"Encoded lengths of dynamic data.\",\"staticData\":\"The static data of the record.\"}},\"getRecord(bytes32,bytes32[],bytes32)\":{\"params\":{\"fieldLayout\":\"The layout of fields to retrieve.\",\"keyTuple\":\"The tuple used as a key to fetch the record.\",\"tableId\":\"The ID of the table.\"},\"returns\":{\"dynamicData\":\"The dynamic data of the record.\",\"encodedLengths\":\"Encoded lengths of dynamic data.\",\"staticData\":\"The static data of the record.\"}},\"getStaticField(bytes32,bytes32[],uint8,bytes32)\":{\"params\":{\"fieldIndex\":\"Index of the static field to retrieve.\",\"fieldLayout\":\"The layout of fields for the retrieval.\",\"keyTuple\":\"The tuple used as a key to fetch the static field.\",\"tableId\":\"The ID of the table.\"},\"returns\":{\"data\":\"The static data of the specified field.\"}},\"getValueSchema(bytes32)\":{\"params\":{\"tableId\":\"The ID of the table.\"},\"returns\":{\"valueSchema\":\"The schema for values in the specified table.\"}},\"storeVersion()\":{\"returns\":{\"_0\":\"The current version of the store as a bytes32.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"HelloStore(bytes32)\":{\"notice\":\"Emitted when the store is initialized.\"},\"Store_DeleteRecord(bytes32,bytes32[])\":{\"notice\":\"Emitted when a record is deleted from the store.\"},\"Store_SetRecord(bytes32,bytes32[],bytes,bytes32,bytes)\":{\"notice\":\"Emitted when a new record is set in the store.\"},\"Store_SpliceDynamicData(bytes32,bytes32[],uint48,uint40,bytes32,bytes)\":{\"notice\":\"Emitted when dynamic data in the store is spliced.\"},\"Store_SpliceStaticData(bytes32,bytes32[],uint48,bytes)\":{\"notice\":\"Emitted when static data in the store is spliced.\"}},\"kind\":\"user\",\"methods\":{\"getDynamicField(bytes32,bytes32[],uint8)\":{\"notice\":\"Retrieves data for a specific dynamic (variable length) field in a record.\"},\"getDynamicFieldLength(bytes32,bytes32[],uint8)\":{\"notice\":\"Calculates the length of a specified dynamic (variable length) field in a record.\"},\"getDynamicFieldSlice(bytes32,bytes32[],uint8,uint256,uint256)\":{\"notice\":\"Retrieves a slice of a dynamic (variable length) field.\"},\"getField(bytes32,bytes32[],uint8)\":{\"notice\":\"Retrieves data for a specified field in a record.\"},\"getField(bytes32,bytes32[],uint8,bytes32)\":{\"notice\":\"Retrieves data for a specified field in a record.\"},\"getFieldLayout(bytes32)\":{\"notice\":\"Fetches the field layout for a given table.\"},\"getFieldLength(bytes32,bytes32[],uint8)\":{\"notice\":\"Calculates the length of a specified field in a record.\"},\"getFieldLength(bytes32,bytes32[],uint8,bytes32)\":{\"notice\":\"Calculates the length of a specified field in a record.\"},\"getKeySchema(bytes32)\":{\"notice\":\"Retrieves the key schema for a given table.\"},\"getRecord(bytes32,bytes32[])\":{\"notice\":\"Fetches a record from a specified table using a provided key tuple.\"},\"getRecord(bytes32,bytes32[],bytes32)\":{\"notice\":\"Fetches a record from a specified table using a provided key tuple and field layout.\"},\"getStaticField(bytes32,bytes32[],uint8,bytes32)\":{\"notice\":\"Retrieves data for a specific static (fixed length) field in a record.\"},\"getValueSchema(bytes32)\":{\"notice\":\"Retrieves the value schema for a given table.\"},\"storeVersion()\":{\"notice\":\"Retrieves the version of the store.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/KeyEncoding.t.sol\":\"KeyEncodingTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[\":@latticexyz/=node_modules/@latticexyz/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"node_modules/@latticexyz/gas-report/src/GasReporter.sol\":{\"keccak256\":\"0xf0b03a19a92cd2e9950c25b6d307e5aeca4a64be8932194431197d0570e9bf3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef2a14f0fb6e5bcab0c70d3648d247c3919c63eabc8b226be4d1f359d8af860f\",\"dweb:/ipfs/QmXi1HgeUNmS9GwSFMDJa8QVT7KiENG9VjgBB78hpHrHV6\"]},\"node_modules/@latticexyz/schema-type/src/solidity/SchemaType.sol\":{\"keccak256\":\"0x770eff7a38b9b7b1613dc11ca09db4f28b42a117c9b39b2a06a650a58a250bdb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39f544110658a53def52c2a4e33b8b158b95a4f14fccea58d5268b6e728d86d4\",\"dweb:/ipfs/QmTesj6tjSFbfAiKUitXapdNYWPStS8bLkB3r22qfyHwUC\"]},\"node_modules/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"node_modules/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"node_modules/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"node_modules/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x51e6eb138fc953fac1ac78012a39b3f16d9289ce06a222ba93bb0621768f96e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c577e054cf578594148a07b286571d494f401b6d4a940d3ccabd47b29233d\",\"dweb:/ipfs/QmTWDVvR4m82MGXWYY8BCaVN89TguQJSLqRgzHzrMkFHtx\"]},\"node_modules/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x2e1b4b99283c16efaf155f7e55ea357943cf6e61fc02aad060534349f63b6cd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d471a35903e8a367a145ca5b5955caf691c723fe1117c6dcffd928d9f8d7c95a\",\"dweb:/ipfs/QmXGnFUGiX9APL8xit7NZQEYBoEL3wWyW1YyFoJQd2pGPe\"]},\"node_modules/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"node_modules/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c\",\"dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss\"]},\"node_modules/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"node_modules/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"node_modules/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x391a28a2e54aea51a6fb03a3a48035304ca4d24bc669ddf3d4c152c7162e514d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://475fd0d87ccb0fdc4418dea2babffb4adb4aafb817e61f7ef31c2303f10c6c26\",\"dweb:/ipfs/QmQgcgtZxpkW6DRmbJszN1F8mU6zhaTZGdWWsj77yCuWN9\"]},\"node_modules/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"node_modules/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"node_modules/forge-std/src/Test.sol\":{\"keccak256\":\"0xf3b62c75cea11a0e8ef8e6526e5e5c74ae47a892b9bcefc0e98d76066e1ffd24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a41faaf836453e02c71fc272c80b3c90a614b30c9ba636512db0d033c7b93beb\",\"dweb:/ipfs/QmeQAreYYaxztQtFLQdHCzCPEorj9T5foSu2hQmxk7xT5x\"]},\"node_modules/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb569d0b4398fad95f508fb854e832143edf69a897af4250f5f60fe195a2066c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84b722ada97ea7bb841cdc0fa556aa36a02ff2d380fa24f6dc0717a71c6d9c7c\",\"dweb:/ipfs/QmfCH9Q4tvJhPM286GFsE4UCP4YncLpRu4Nwa2ZkHdRfbw\"]},\"node_modules/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"node_modules/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"node_modules/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"src/Bytes.sol\":{\"keccak256\":\"0xab31edce915377852bb5f29f7f2ccfc50cac087d64d2a8aae669715ad862d558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3187e86e43be1fbdd59df45c695294f1114aa1ac48e6445c0cb26089434be5c4\",\"dweb:/ipfs/Qmck7shMVrcKMVkgN2pC1byPY7hb3V9fTxnUcGgxAUeXYk\"]},\"src/FieldLayout.sol\":{\"keccak256\":\"0x2a0536cd6cecc479d0b81d5aad6380231f4d6873beadc54814d801c2036b02c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e07c041e19146a9ec258cc700a450b4d49440202895eb12f3bb17508427c23ba\",\"dweb:/ipfs/QmXoqrCGDSkuFgNSMURRFdjokjREL78nLDzNaUi6rjefy9\"]},\"src/Hook.sol\":{\"keccak256\":\"0x045024523eb55d08ad8d13eca6185bff2988865f4aa12e3f9372029c2ecb8ddd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6621c53b49f8fe0557d1a1db47bfe1561801c09256948dd0652fb41541891a18\",\"dweb:/ipfs/QmZgFVCUH1pKcc9MeFyzMe1VW87SLz6c9szGwrDRUp6BZe\"]},\"src/IERC165.sol\":{\"keccak256\":\"0x2bbc3c43400c15a91a5cb35430a91309cb64a4d13a0a170eacec71dcf334feaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f44dfc9605067de539de07a76a34bf469faa9e6dad8c192abafc2e05860c7dd2\",\"dweb:/ipfs/QmX8xgG6XWokM7YFwFZvmMhuh1uhkSjxCMD2oTHjUVdapb\"]},\"src/IStore.sol\":{\"keccak256\":\"0x9092b65551d0f910e5645cebb5acadb387cdd192d75fa89cd6b293bd65b28827\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://478825a6f7eff9ddab968e71e1d55ebee279d3b318f10976d9334384000059c0\",\"dweb:/ipfs/Qme7NY976woRy3RQjE4tkkiwoXnoVtTmER3PbWCSbjZ2kb\"]},\"src/IStoreData.sol\":{\"keccak256\":\"0xa8eade05c551aeef35c84727d7a44af239516deb2d8a0cfb7ebeb5d88c6995e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5335910bd8a204abb5f4396fb911a5ee5c221bd7fa63b1cc8ae5e737c6458c6a\",\"dweb:/ipfs/QmckkCAfrNcWo3yDxoD1jCe1k4iDA2GzVDpFjJZs7W79vx\"]},\"src/IStoreErrors.sol\":{\"keccak256\":\"0xb9070663ded3cad82285bb7610949e422f88abb48c2ddbd792af83d127d64212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://830490f1c888bec86df1e7ef43773d60ebdbdfdb2b91ab7fe074e2f38d7439dc\",\"dweb:/ipfs/QmS26fpXdZuGgMmjcdQDf9k1Bedn2dhjk9byFZJoNkctPZ\"]},\"src/IStoreEvents.sol\":{\"keccak256\":\"0xdd3104680808f975462a85cbd4fa87783ba5395797419caeeca37e8f8627a16f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://943864b7eb16ad2047ade5a8598e85c8a4b46d1aed6aef02bfb7cee8de732b4d\",\"dweb:/ipfs/QmTEij4caToSNk15PFpubXYDy9QhwmPyP9tMXjUse2cTdv\"]},\"src/IStoreHook.sol\":{\"keccak256\":\"0xa6777c7868333996ad9c61a94457dcac702d8d7445a104dfdc86543d25e7470e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6268a16449d7529a94746d0103670dd0e38faf5117bf914fb01da9947ab44c2e\",\"dweb:/ipfs/QmaSfbx1QRA3jw2K8bGkQTw4CTGPUzNqnCJW7LwaFUJCXy\"]},\"src/IStoreRead.sol\":{\"keccak256\":\"0xd2180d53ecd31069b1166f170ecdcd85917ac50f45fc26fb39b49cee7ba00e37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1494bb0a3228e2d194bddaed4761fd3ca865979f0e3f3a53acd271143a4aa0ac\",\"dweb:/ipfs/Qmaddnzzmu99iP9dTWK9ZeByh5dZyjY9SpVnRdvyr2fBAo\"]},\"src/IStoreRegistration.sol\":{\"keccak256\":\"0xf448fbb2bc9c982721a43234463656da5a49cea08543e62148d54f11e1ac3e2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64b3579d9b9dcd73dca2beab3d4fcf60237420945ebbb2e9f4ffcc88f4110115\",\"dweb:/ipfs/QmaW5nN3zGEriSYHncye6Nz2TkAw1oo1CyG2JuJTJrJoXg\"]},\"src/IStoreWrite.sol\":{\"keccak256\":\"0x8b6c7af5ee330928aebb58c8872d3944304ee10ed11f8a325b6accc4ec5df81b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b866d158701c7a40834bed735194b804ef219f2bbe574e2307785fff7bcf9da1\",\"dweb:/ipfs/QmXzJfZkXVfyr2RFGwDuazeVnV3UWYmQxjKZ3KzFbbe75U\"]},\"src/Memory.sol\":{\"keccak256\":\"0x69295976e61a1a108d1b4d6eb497b238730309f3047c4320d48e01a0ce8d4ec7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://559c451b21fb9dd4fec27b41bef42f4362f1e7ebb7992106d548b9d4f733b3e5\",\"dweb:/ipfs/QmeSE7YTW5zUrfZYFVb2pFnDe3XxiT8XNecfwC3wfpxCRv\"]},\"src/PackedCounter.sol\":{\"keccak256\":\"0x44ddfa9eb8a861462c550f0a9d66c40c68acdb347a61fa765949608407a2c7fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47ee957f4b19cab9e20bf5fc569c015eca13852fb3351f2a105a8be9c48204c0\",\"dweb:/ipfs/QmNkyzDobVQLoq9BtQ8HtgsPLiqnmi97EZx1wsu6wp8nKH\"]},\"src/ResourceId.sol\":{\"keccak256\":\"0x40983c580b8958e55db4520095934a535e98544ffe8228327e598973eb6647ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839d658fa2bb2b1f09a08149d2bf0c26a26c301ad2dda8154fc99458085a695d\",\"dweb:/ipfs/Qmd5jHHYrgqraPqF8bjzT4xyjsoPk8K7pkxXLLfz6MRT6d\"]},\"src/Schema.sol\":{\"keccak256\":\"0x58aef318ba03f8ff8866ef70f8a30f549b150657ea699734aefe16c298956401\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dc104690a7e2bcf5ce1afadcd58f8ef4d639b4b92b9ad9293656235d54395f3\",\"dweb:/ipfs/QmYJJvEv5KBJ3kzf9AkgRn7Uu5dp4exGTRddf4cae1btgE\"]},\"src/Slice.sol\":{\"keccak256\":\"0xfaf54b1f5acccd4c6ce3f8377050ee84efbb423cb604b4651e8b9ea3b467bf32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acf2ce7ffec21f28ad1dc6da06c342f1212a03a3d16a0be7ee85715a5940718c\",\"dweb:/ipfs/QmTCN3NSdFg87hi7KS2Xtq7PsmRUMG64SxC8PtP3p2GzuT\"]},\"src/Storage.sol\":{\"keccak256\":\"0x0893905ebe431a414226b479a84a54804091001a406222c748adbd4b651853a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcfcd3848127884041f0bcd727a0e7acbddec283aa6c16ba47abc6a3be720648\",\"dweb:/ipfs/QmY5fBd53e4Ro6vzTZYsteSibSTXVA3GHTeCAiUZTa5DPZ\"]},\"src/StoreCore.sol\":{\"keccak256\":\"0x95b7d62d84b43777c54dd1c7d941dbb5ba0afc02c444c30cfdb1de671bbbf180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe62a2fdb2a73610c3072f31b7f88ed3f9d03c1009fe0f0ef37a7eb814b23534\",\"dweb:/ipfs/QmV85zaV5HAD6eGc5N4RmdtmpR6EwkswVLQTaR2aJqsXrj\"]},\"src/StoreData.sol\":{\"keccak256\":\"0x4e451128c33a01d520c1944b3db42a62c158aea8fa11e786a58a0f719a189526\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2f98f30a7b2c9ef020e274b87ae0fa66d1380343a00ecf6bd796ae31cd9b279\",\"dweb:/ipfs/QmYXHSBn4Hp7cimDLKy86ep23v2VRUS6dLPevcVMs3dJrw\"]},\"src/StoreRead.sol\":{\"keccak256\":\"0x0da12dea94f088d01b1b0d6d4887f628c61c9c34a4c74a4c9033621bddcc007f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e77d66891e1cdff6899e00c7993302dd77dd291f954b79d2c582da076e22264\",\"dweb:/ipfs/QmcLyDFSnyMUF89hGhPX4nvUpkXdJSxBe5zGSJFqTAT5Mj\"]},\"src/StoreSwitch.sol\":{\"keccak256\":\"0xf132af10f960a498f49c0534027056e715f4bdcb8fbdb53ac6879c92309ab416\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e85a09aeb7543bcd9d74b7ad319ae61e1f7f15a6a0ad9e79aff750fbd18111c7\",\"dweb:/ipfs/QmY6xgqeeaR1FsCPLmFbVgjm1D2UyrXNABKXWLfFaSmBhR\"]},\"src/codegen/index.sol\":{\"keccak256\":\"0xf337a5abb2d43ef00c1c200e7fbec30fc89c7c701e457ab4277194b700d2aea3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eccdf6158076b4e8f1b587a0310228f53323705e054a44eaa7733f38805c3ee6\",\"dweb:/ipfs/QmbXEVNTctg54dK9awdCVyAjeuUjR6ckfmmXBP8DrFmjyq\"]},\"src/codegen/tables/Hooks.sol\":{\"keccak256\":\"0xc5c6f807cff6b4dc486525c559ba3f7cbb034ac5895636ee64c9d01defa6a38e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84d3a3b3fd3afa2ab3231fd7fe981889dfb0600deec34c5d4e9c07d3187af8a5\",\"dweb:/ipfs/Qmanj7WjETqBYQXkxKLjqWs4vMp3en3N69B5MacKme5fpD\"]},\"src/codegen/tables/ResourceIds.sol\":{\"keccak256\":\"0xf7a9bf3e37b486377005c556cdf5b813ea1a41278b3a0349f81e3c82a2f1c789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92cc87add89abcb126bf3cd0b284f25065c2b9c90a49f8dba4629b28a5b87751\",\"dweb:/ipfs/QmNNBDSK5GNujERGiSUhorbmtpdD2UnGz7MqSSDasEGdub\"]},\"src/codegen/tables/StoreHooks.sol\":{\"keccak256\":\"0xa1186b8b6143b4a87cea1624785494398be1613cb7c6f9e57734e1cca1d5dd14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://488c158082622689d035d7964c6ca063295e53078291c340eb6a23db08e8ff95\",\"dweb:/ipfs/QmWcjo3B5SH7jStXKAuf7qvF2ouz6syw9c7aT86PnTgRqW\"]},\"src/codegen/tables/Tables.sol\":{\"keccak256\":\"0xd47e1921c07fc8608157b5dc343fcef7235e891ea6a21dec1fb118a0bd797fcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01a6ad068e6991994a0939f22a55245e0c7c82fc5e274da0af616286a8acfc7a\",\"dweb:/ipfs/QmPokA3pSexzZY33MMV6BGx48ZwQegdUN5AijiAfycSDxy\"]},\"src/constants.sol\":{\"keccak256\":\"0x9e37c64c119ef07ad914bc589ee3f6d67946ab95877978c1ee3e2c1ffae07076\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fad47e542025382aa28e8171253e34f93b2f149434b67a26989542d70218793\",\"dweb:/ipfs/QmW6JsKNwPc6oAMrgcikgR2EPwMUtQANiuZSQSGCd29HHC\"]},\"src/leftMask.sol\":{\"keccak256\":\"0xd0360567e4d77c6a8e3d8a5f4bf3653ccde4d268674c50988d55695dc6193f6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53e6bcb53fcb08ee9426225fdab7c41df91e12cb4f80d92895a6117338627401\",\"dweb:/ipfs/QmeLcaPGeMBpNSTSsPYK3PHpzKuGMjuitCweAWcoXK2mXr\"]},\"src/storeHookTypes.sol\":{\"keccak256\":\"0x60880298016fa117ed9a43ddfd020f11d98a2d345bdcb08e5884e40df98eddd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3619dfda1fd514c0fc5fb34c14d5b5aa41dd6ba6045d37d5f4c8199f3a826f81\",\"dweb:/ipfs/QmbzRBYfVa423gNzCitpGN3i2N9oeGYfinVE1jgtqxnNZX\"]},\"src/storeResourceTypes.sol\":{\"keccak256\":\"0xada1867ba72930fc5cf5562dd4e36de849dbac9c833b7969cb1b046a808fabf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e4b5fdcaa54f567a3f8561c2c3fbc0d68c8dad892a4a8e5418bbce8efc53d84\",\"dweb:/ipfs/QmTWbYJX1yrCqrEwUKB9rGpHdRvLNU8GCkBbxnLjGD4d2t\"]},\"src/tightcoder/DecodeSlice.sol\":{\"keccak256\":\"0x1af0fd984640123391ec2df855d00298504b7ce186a56c2caca769cfd9e08e04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7305a62318890d2cc6420ba7dec13d9f2c1cb67ac689015fc83b9cbccd0696f1\",\"dweb:/ipfs/QmR8jGNLbt64Tv1YZKRVBCVsd71oeUQFzGHHtpsrs4PuRq\"]},\"src/tightcoder/EncodeArray.sol\":{\"keccak256\":\"0x1c280d24360282e196d9c4833c58c2437108cea2af0ac7596f95be81389e306d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b4556b6eeae9328fbd9adcce346547e823c397503276a4d63effb67e00b5b49\",\"dweb:/ipfs/QmUsynVsMYzjh8oJR8YB7SRrwFMdXcsQsHBrXxLEEFxsiB\"]},\"src/tightcoder/TightCoder.sol\":{\"keccak256\":\"0x5cacd4cb371e0a79bc8d64f62349d568fd8b08093c11ae0c3db4f16480d8808b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12b64ddf2b5c19cf68ba93a8153ed79cbafe7a91e015d4b2f25eb1d42ab06256\",\"dweb:/ipfs/QmQz5WwztcuTbSGFv2pkhU3w5scUj1gmavoyUpduxk2v3A\"]},\"src/version.sol\":{\"keccak256\":\"0x01029999a48b7c1d85de84cae465dd24ec126c95b8a865cd20c7ed5dfcc0f02c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9750164ce996badb0fd7df2f526780b9cb9558912405fe46f31064bd7c522491\",\"dweb:/ipfs/QmYf8m2ZXFANRc9ysHgNkNtSF327ccxKYjCUJ49UXBKADk\"]},\"test/KeyEncoding.t.sol\":{\"keccak256\":\"0x6a6e09289ff2a4818635a04770556edd0ceb05bd60ab4ce1bd61531920258374\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9566c6adcda2782ed6a086677ced68c9a97d4976e74801d5a1a2ee9113900043\",\"dweb:/ipfs/QmPDdVtmriHfEiLC7Fe6CVJ6L7KWiGbnG69UHf2Furtrie\"]},\"test/StoreMock.sol\":{\"keccak256\":\"0xd9fe932bd756bb49643aadc437252c8681bea58293cc1a4020a43f59a9f30c48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99eb4a5609a8ae41b0eb0aafbfc23135ac92eebc0280040ea1a5b8dd270301f3\",\"dweb:/ipfs/QmcXfKcLgf3stUvRwCScX95Aqavubq2ULe3idUtjp8uPYf\"]},\"test/codegen/common.sol\":{\"keccak256\":\"0xfb8a86c7cd9337dd447f5fec131d86e668e855094eb030cf8aee4bef293595f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9713bddb9dcbf611048148a195c0239480b1ac29df22df9fbd2df36274aa8d0b\",\"dweb:/ipfs/QmYoNyg6iLpGQkXA5szq67KGR8eaz8yyTwy2X66wtDj9Bo\"]},\"test/codegen/index.sol\":{\"keccak256\":\"0xd78a354e0d72ddbb1588dca45d594ad53448e38a860ccf08fac0cdb8613a1cdc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fc75fd8c8b1e5f23eb7bf836dc50b2b45b2c4673feb6740d9dc0ebb586430fb\",\"dweb:/ipfs/QmQsEq1MnUcFsi7sPcJ2qB3F1HXFTpp942a23YKRwGS6SD\"]},\"test/codegen/tables/Callbacks.sol\":{\"keccak256\":\"0x952167daaa1d2abe689a1341da215a911f9385a3dbf07a2054ea9118411ef075\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b4430402bbb75818d78a84fa8bdff13047e8657033006696e5709a54128497c\",\"dweb:/ipfs/QmPbTS9Bwy9rt9P8FbFrWCyshhj4SKLP4Usjzg8EbbDzCt\"]},\"test/codegen/tables/KeyEncoding.sol\":{\"keccak256\":\"0x6903d228e0924ae95f26142a0a705e84b7e634e74cdbe990f91b1e724bf94af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://571eb25e3f3b8b11a4fd375aad9c7d72e9a7755140e2c9abf773d4bac06a4fe4\",\"dweb:/ipfs/Qmc1txvZ6Cydb2bfPXFvbBXeTzCFnjFsKj8TeXKrxWvHB7\"]},\"test/codegen/tables/Mixed.sol\":{\"keccak256\":\"0x693215d82222a8591b22d239609804af57cdb7ce639eeea656925c1a45422ce2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b957dc4c77e6b83d185cb197b14887d413f2d7df2e60d11e1cb0ce0785af72c0\",\"dweb:/ipfs/QmaCyS7CwW6yWRoAZKsQNTmkgC7mXhqX9zhpFwgtzDfUPQ\"]},\"test/codegen/tables/Vector2.sol\":{\"keccak256\":\"0xf6c5e8812290a7e867ff37e6bf755504b2c26281c681376e1bea3e9a7bda3d3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ddad24363ad8887706ae7f4303924479cb218ae28a3963019abc2049ff85ec9\",\"dweb:/ipfs/QmdcQLBFH7CsnhnWmTb896nFVGPv76wnqL4Ui8Zw9B2Dz9\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "FieldLayoutLib_InvalidLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FieldLayoutLib_StaticLengthDoesNotFitInAWord"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FieldLayoutLib_StaticLengthIsZero"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "PackedCounter_InvalidLength"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "SchemaLib_InvalidLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SchemaLib_StaticTypeAfterDynamicType"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Slice_OutOfBounds"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "accessedIndex",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Store_IndexOutOfBounds"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "expected",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "received",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Store_InvalidDynamicDataLength"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "expected",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "received",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Store_InvalidFieldNamesLength"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "expected",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "received",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Store_InvalidKeyNamesLength"
        },
        {
          "inputs": [
            {
              "internalType": "bytes2",
              "name": "expected",
              "type": "bytes2"
            },
            {
              "internalType": "ResourceId",
              "name": "resourceId",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "resourceIdString",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "Store_InvalidResourceType"
        },
        {
          "inputs": [
            {
              "internalType": "uint40",
              "name": "startWithinField",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "deleteCount",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "fieldLength",
              "type": "uint40"
            }
          ],
          "type": "error",
          "name": "Store_InvalidSplice"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "expected",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "received",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Store_InvalidValueSchemaLength"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "tableIdString",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "Store_TableAlreadyExists"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "tableIdString",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "Store_TableNotFound"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "storeVersion",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "HelloStore",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Store_DeleteRecord",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Store_DeleteRecord",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "staticData",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "PackedCounter",
              "name": "encodedLengths",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "dynamicData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Store_SetRecord",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "staticData",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "PackedCounter",
              "name": "encodedLengths",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "dynamicData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Store_SetRecord",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]",
              "indexed": false
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48",
              "indexed": false
            },
            {
              "internalType": "uint40",
              "name": "deleteCount",
              "type": "uint40",
              "indexed": false
            },
            {
              "internalType": "PackedCounter",
              "name": "encodedLengths",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Store_SpliceDynamicData",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]",
              "indexed": false
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48",
              "indexed": false
            },
            {
              "internalType": "uint40",
              "name": "deleteCount",
              "type": "uint40",
              "indexed": false
            },
            {
              "internalType": "PackedCounter",
              "name": "encodedLengths",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Store_SpliceDynamicData",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]",
              "indexed": false
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Store_SpliceStaticData",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]",
              "indexed": false
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Store_SpliceStaticData",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteRecord"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "dynamicFieldIndex",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDynamicField",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "dynamicFieldIndex",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDynamicFieldLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "dynamicFieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDynamicFieldSlice",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "fieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "FieldLayout",
              "name": "fieldLayout",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getField",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "fieldIndex",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getField",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFieldLayout",
          "outputs": [
            {
              "internalType": "FieldLayout",
              "name": "fieldLayout",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "fieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "FieldLayout",
              "name": "fieldLayout",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFieldLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "fieldIndex",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFieldLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getKeySchema",
          "outputs": [
            {
              "internalType": "Schema",
              "name": "keySchema",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "FieldLayout",
              "name": "fieldLayout",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRecord",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "staticData",
              "type": "bytes"
            },
            {
              "internalType": "PackedCounter",
              "name": "encodedLengths",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "dynamicData",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRecord",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "staticData",
              "type": "bytes"
            },
            {
              "internalType": "PackedCounter",
              "name": "encodedLengths",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "dynamicData",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "fieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "FieldLayout",
              "name": "fieldLayout",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStaticField",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getValueSchema",
          "outputs": [
            {
              "internalType": "Schema",
              "name": "valueSchema",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "dynamicFieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "byteLengthToPop",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "popFromDynamicField"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "dynamicFieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "dataToPush",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pushToDynamicField"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IStoreHook",
              "name": "hookAddress",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "enabledHooksBitmap",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerStoreHook"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "FieldLayout",
              "name": "fieldLayout",
              "type": "bytes32"
            },
            {
              "internalType": "Schema",
              "name": "keySchema",
              "type": "bytes32"
            },
            {
              "internalType": "Schema",
              "name": "valueSchema",
              "type": "bytes32"
            },
            {
              "internalType": "string[]",
              "name": "keyNames",
              "type": "string[]"
            },
            {
              "internalType": "string[]",
              "name": "fieldNames",
              "type": "string[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerTable"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "dynamicFieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDynamicField"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "fieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setField"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "fieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "FieldLayout",
              "name": "fieldLayout",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setField"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes",
              "name": "staticData",
              "type": "bytes"
            },
            {
              "internalType": "PackedCounter",
              "name": "encodedLengths",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "dynamicData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRecord"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "fieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "FieldLayout",
              "name": "fieldLayout",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStaticField"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "dynamicFieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "uint40",
              "name": "startWithinField",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "deleteCount",
              "type": "uint40"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "spliceDynamicData"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "spliceStaticData"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "storeVersion",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testKeyEncoding"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testRegisterAndGetFieldLayout"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testRegisterAndGetSchema"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSetAndGet"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IStoreHook",
              "name": "hookAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unregisterStoreHook"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getDynamicField(bytes32,bytes32[],uint8)": {
            "params": {
              "dynamicFieldIndex": "Index of the dynamic field to retrieve.",
              "keyTuple": "The tuple used as a key to fetch the dynamic field.",
              "tableId": "The ID of the table."
            },
            "returns": {
              "data": "The dynamic data of the specified field."
            }
          },
          "getDynamicFieldLength(bytes32,bytes32[],uint8)": {
            "params": {
              "dynamicFieldIndex": "Index of the dynamic field to measure.",
              "keyTuple": "The tuple used as a key.",
              "tableId": "The ID of the table."
            },
            "returns": {
              "_0": "The length of the specified dynamic field."
            }
          },
          "getDynamicFieldSlice(bytes32,bytes32[],uint8,uint256,uint256)": {
            "params": {
              "dynamicFieldIndex": "Index of the dynamic field to slice.",
              "end": "The ending position of the slice.",
              "keyTuple": "The tuple used as a key to fetch the dynamic field slice.",
              "start": "The starting position of the slice.",
              "tableId": "The ID of the table."
            },
            "returns": {
              "_0": "The sliced data from the specified dynamic field."
            }
          },
          "getField(bytes32,bytes32[],uint8)": {
            "details": "This overload loads the FieldLayout from storage. If the table's FieldLayout is known to the caller, it should be passed in to the other overload to avoid the storage read.",
            "params": {
              "fieldIndex": "Index of the field to retrieve.",
              "keyTuple": "The tuple used as a key to fetch the field.",
              "tableId": "The ID of the table."
            },
            "returns": {
              "data": "The data of the specified field."
            }
          },
          "getField(bytes32,bytes32[],uint8,bytes32)": {
            "params": {
              "fieldIndex": "Index of the field to retrieve.",
              "fieldLayout": "The layout of fields for the retrieval.",
              "keyTuple": "The tuple used as a key to fetch the field.",
              "tableId": "The ID of the table."
            },
            "returns": {
              "data": "The data of the specified field."
            }
          },
          "getFieldLayout(bytes32)": {
            "params": {
              "tableId": "The ID of the table for which to retrieve the field layout."
            },
            "returns": {
              "fieldLayout": "The layout of fields in the specified table."
            }
          },
          "getFieldLength(bytes32,bytes32[],uint8)": {
            "details": "This overload loads the FieldLayout from storage. If the table's FieldLayout is known to the caller, it should be passed in to the other overload to avoid the storage read.",
            "params": {
              "fieldIndex": "Index of the field to measure.",
              "keyTuple": "The tuple used as a key.",
              "tableId": "The ID of the table."
            },
            "returns": {
              "_0": "The length of the specified field."
            }
          },
          "getFieldLength(bytes32,bytes32[],uint8,bytes32)": {
            "params": {
              "fieldIndex": "Index of the field to measure.",
              "fieldLayout": "The layout of fields for measurement.",
              "keyTuple": "The tuple used as a key.",
              "tableId": "The ID of the table."
            },
            "returns": {
              "_0": "The length of the specified field."
            }
          },
          "getKeySchema(bytes32)": {
            "params": {
              "tableId": "The ID of the table."
            },
            "returns": {
              "keySchema": "The schema for keys in the specified table."
            }
          },
          "getRecord(bytes32,bytes32[])": {
            "params": {
              "keyTuple": "The tuple used as a key to fetch the record.",
              "tableId": "The ID of the table."
            },
            "returns": {
              "dynamicData": "The dynamic data of the record.",
              "encodedLengths": "Encoded lengths of dynamic data.",
              "staticData": "The static data of the record."
            }
          },
          "getRecord(bytes32,bytes32[],bytes32)": {
            "params": {
              "fieldLayout": "The layout of fields to retrieve.",
              "keyTuple": "The tuple used as a key to fetch the record.",
              "tableId": "The ID of the table."
            },
            "returns": {
              "dynamicData": "The dynamic data of the record.",
              "encodedLengths": "Encoded lengths of dynamic data.",
              "staticData": "The static data of the record."
            }
          },
          "getStaticField(bytes32,bytes32[],uint8,bytes32)": {
            "params": {
              "fieldIndex": "Index of the static field to retrieve.",
              "fieldLayout": "The layout of fields for the retrieval.",
              "keyTuple": "The tuple used as a key to fetch the static field.",
              "tableId": "The ID of the table."
            },
            "returns": {
              "data": "The static data of the specified field."
            }
          },
          "getValueSchema(bytes32)": {
            "params": {
              "tableId": "The ID of the table."
            },
            "returns": {
              "valueSchema": "The schema for values in the specified table."
            }
          },
          "storeVersion()": {
            "returns": {
              "_0": "The current version of the store as a bytes32."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getDynamicField(bytes32,bytes32[],uint8)": {
            "notice": "Retrieves data for a specific dynamic (variable length) field in a record."
          },
          "getDynamicFieldLength(bytes32,bytes32[],uint8)": {
            "notice": "Calculates the length of a specified dynamic (variable length) field in a record."
          },
          "getDynamicFieldSlice(bytes32,bytes32[],uint8,uint256,uint256)": {
            "notice": "Retrieves a slice of a dynamic (variable length) field."
          },
          "getField(bytes32,bytes32[],uint8)": {
            "notice": "Retrieves data for a specified field in a record."
          },
          "getField(bytes32,bytes32[],uint8,bytes32)": {
            "notice": "Retrieves data for a specified field in a record."
          },
          "getFieldLayout(bytes32)": {
            "notice": "Fetches the field layout for a given table."
          },
          "getFieldLength(bytes32,bytes32[],uint8)": {
            "notice": "Calculates the length of a specified field in a record."
          },
          "getFieldLength(bytes32,bytes32[],uint8,bytes32)": {
            "notice": "Calculates the length of a specified field in a record."
          },
          "getKeySchema(bytes32)": {
            "notice": "Retrieves the key schema for a given table."
          },
          "getRecord(bytes32,bytes32[])": {
            "notice": "Fetches a record from a specified table using a provided key tuple."
          },
          "getRecord(bytes32,bytes32[],bytes32)": {
            "notice": "Fetches a record from a specified table using a provided key tuple and field layout."
          },
          "getStaticField(bytes32,bytes32[],uint8,bytes32)": {
            "notice": "Retrieves data for a specific static (fixed length) field in a record."
          },
          "getValueSchema(bytes32)": {
            "notice": "Retrieves the value schema for a given table."
          },
          "storeVersion()": {
            "notice": "Retrieves the version of the store."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@latticexyz/=node_modules/@latticexyz/",
        "ds-test/=node_modules/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 3000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "test/KeyEncoding.t.sol": "KeyEncodingTest"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@latticexyz/gas-report/src/GasReporter.sol": {
        "keccak256": "0xf0b03a19a92cd2e9950c25b6d307e5aeca4a64be8932194431197d0570e9bf3b",
        "urls": [
          "bzz-raw://ef2a14f0fb6e5bcab0c70d3648d247c3919c63eabc8b226be4d1f359d8af860f",
          "dweb:/ipfs/QmXi1HgeUNmS9GwSFMDJa8QVT7KiENG9VjgBB78hpHrHV6"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/schema-type/src/solidity/SchemaType.sol": {
        "keccak256": "0x770eff7a38b9b7b1613dc11ca09db4f28b42a117c9b39b2a06a650a58a250bdb",
        "urls": [
          "bzz-raw://39f544110658a53def52c2a4e33b8b158b95a4f14fccea58d5268b6e728d86d4",
          "dweb:/ipfs/QmTesj6tjSFbfAiKUitXapdNYWPStS8bLkB3r22qfyHwUC"
        ],
        "license": "MIT"
      },
      "node_modules/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdChains.sol": {
        "keccak256": "0x51e6eb138fc953fac1ac78012a39b3f16d9289ce06a222ba93bb0621768f96e6",
        "urls": [
          "bzz-raw://653c577e054cf578594148a07b286571d494f401b6d4a940d3ccabd47b29233d",
          "dweb:/ipfs/QmTWDVvR4m82MGXWYY8BCaVN89TguQJSLqRgzHzrMkFHtx"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdCheats.sol": {
        "keccak256": "0x2e1b4b99283c16efaf155f7e55ea357943cf6e61fc02aad060534349f63b6cd5",
        "urls": [
          "bzz-raw://d471a35903e8a367a145ca5b5955caf691c723fe1117c6dcffd928d9f8d7c95a",
          "dweb:/ipfs/QmXGnFUGiX9APL8xit7NZQEYBoEL3wWyW1YyFoJQd2pGPe"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1",
        "urls": [
          "bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c",
          "dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStorage.sol": {
        "keccak256": "0x391a28a2e54aea51a6fb03a3a48035304ca4d24bc669ddf3d4c152c7162e514d",
        "urls": [
          "bzz-raw://475fd0d87ccb0fdc4418dea2babffb4adb4aafb817e61f7ef31c2303f10c6c26",
          "dweb:/ipfs/QmQgcgtZxpkW6DRmbJszN1F8mU6zhaTZGdWWsj77yCuWN9"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Test.sol": {
        "keccak256": "0xf3b62c75cea11a0e8ef8e6526e5e5c74ae47a892b9bcefc0e98d76066e1ffd24",
        "urls": [
          "bzz-raw://a41faaf836453e02c71fc272c80b3c90a614b30c9ba636512db0d033c7b93beb",
          "dweb:/ipfs/QmeQAreYYaxztQtFLQdHCzCPEorj9T5foSu2hQmxk7xT5x"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Vm.sol": {
        "keccak256": "0xb569d0b4398fad95f508fb854e832143edf69a897af4250f5f60fe195a2066c5",
        "urls": [
          "bzz-raw://84b722ada97ea7bb841cdc0fa556aa36a02ff2d380fa24f6dc0717a71c6d9c7c",
          "dweb:/ipfs/QmfCH9Q4tvJhPM286GFsE4UCP4YncLpRu4Nwa2ZkHdRfbw"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "src/Bytes.sol": {
        "keccak256": "0xab31edce915377852bb5f29f7f2ccfc50cac087d64d2a8aae669715ad862d558",
        "urls": [
          "bzz-raw://3187e86e43be1fbdd59df45c695294f1114aa1ac48e6445c0cb26089434be5c4",
          "dweb:/ipfs/Qmck7shMVrcKMVkgN2pC1byPY7hb3V9fTxnUcGgxAUeXYk"
        ],
        "license": "MIT"
      },
      "src/FieldLayout.sol": {
        "keccak256": "0x2a0536cd6cecc479d0b81d5aad6380231f4d6873beadc54814d801c2036b02c0",
        "urls": [
          "bzz-raw://e07c041e19146a9ec258cc700a450b4d49440202895eb12f3bb17508427c23ba",
          "dweb:/ipfs/QmXoqrCGDSkuFgNSMURRFdjokjREL78nLDzNaUi6rjefy9"
        ],
        "license": "MIT"
      },
      "src/Hook.sol": {
        "keccak256": "0x045024523eb55d08ad8d13eca6185bff2988865f4aa12e3f9372029c2ecb8ddd",
        "urls": [
          "bzz-raw://6621c53b49f8fe0557d1a1db47bfe1561801c09256948dd0652fb41541891a18",
          "dweb:/ipfs/QmZgFVCUH1pKcc9MeFyzMe1VW87SLz6c9szGwrDRUp6BZe"
        ],
        "license": "MIT"
      },
      "src/IERC165.sol": {
        "keccak256": "0x2bbc3c43400c15a91a5cb35430a91309cb64a4d13a0a170eacec71dcf334feaf",
        "urls": [
          "bzz-raw://f44dfc9605067de539de07a76a34bf469faa9e6dad8c192abafc2e05860c7dd2",
          "dweb:/ipfs/QmX8xgG6XWokM7YFwFZvmMhuh1uhkSjxCMD2oTHjUVdapb"
        ],
        "license": "MIT"
      },
      "src/IStore.sol": {
        "keccak256": "0x9092b65551d0f910e5645cebb5acadb387cdd192d75fa89cd6b293bd65b28827",
        "urls": [
          "bzz-raw://478825a6f7eff9ddab968e71e1d55ebee279d3b318f10976d9334384000059c0",
          "dweb:/ipfs/Qme7NY976woRy3RQjE4tkkiwoXnoVtTmER3PbWCSbjZ2kb"
        ],
        "license": "MIT"
      },
      "src/IStoreData.sol": {
        "keccak256": "0xa8eade05c551aeef35c84727d7a44af239516deb2d8a0cfb7ebeb5d88c6995e5",
        "urls": [
          "bzz-raw://5335910bd8a204abb5f4396fb911a5ee5c221bd7fa63b1cc8ae5e737c6458c6a",
          "dweb:/ipfs/QmckkCAfrNcWo3yDxoD1jCe1k4iDA2GzVDpFjJZs7W79vx"
        ],
        "license": "MIT"
      },
      "src/IStoreErrors.sol": {
        "keccak256": "0xb9070663ded3cad82285bb7610949e422f88abb48c2ddbd792af83d127d64212",
        "urls": [
          "bzz-raw://830490f1c888bec86df1e7ef43773d60ebdbdfdb2b91ab7fe074e2f38d7439dc",
          "dweb:/ipfs/QmS26fpXdZuGgMmjcdQDf9k1Bedn2dhjk9byFZJoNkctPZ"
        ],
        "license": "MIT"
      },
      "src/IStoreEvents.sol": {
        "keccak256": "0xdd3104680808f975462a85cbd4fa87783ba5395797419caeeca37e8f8627a16f",
        "urls": [
          "bzz-raw://943864b7eb16ad2047ade5a8598e85c8a4b46d1aed6aef02bfb7cee8de732b4d",
          "dweb:/ipfs/QmTEij4caToSNk15PFpubXYDy9QhwmPyP9tMXjUse2cTdv"
        ],
        "license": "MIT"
      },
      "src/IStoreHook.sol": {
        "keccak256": "0xa6777c7868333996ad9c61a94457dcac702d8d7445a104dfdc86543d25e7470e",
        "urls": [
          "bzz-raw://6268a16449d7529a94746d0103670dd0e38faf5117bf914fb01da9947ab44c2e",
          "dweb:/ipfs/QmaSfbx1QRA3jw2K8bGkQTw4CTGPUzNqnCJW7LwaFUJCXy"
        ],
        "license": "MIT"
      },
      "src/IStoreRead.sol": {
        "keccak256": "0xd2180d53ecd31069b1166f170ecdcd85917ac50f45fc26fb39b49cee7ba00e37",
        "urls": [
          "bzz-raw://1494bb0a3228e2d194bddaed4761fd3ca865979f0e3f3a53acd271143a4aa0ac",
          "dweb:/ipfs/Qmaddnzzmu99iP9dTWK9ZeByh5dZyjY9SpVnRdvyr2fBAo"
        ],
        "license": "MIT"
      },
      "src/IStoreRegistration.sol": {
        "keccak256": "0xf448fbb2bc9c982721a43234463656da5a49cea08543e62148d54f11e1ac3e2f",
        "urls": [
          "bzz-raw://64b3579d9b9dcd73dca2beab3d4fcf60237420945ebbb2e9f4ffcc88f4110115",
          "dweb:/ipfs/QmaW5nN3zGEriSYHncye6Nz2TkAw1oo1CyG2JuJTJrJoXg"
        ],
        "license": "MIT"
      },
      "src/IStoreWrite.sol": {
        "keccak256": "0x8b6c7af5ee330928aebb58c8872d3944304ee10ed11f8a325b6accc4ec5df81b",
        "urls": [
          "bzz-raw://b866d158701c7a40834bed735194b804ef219f2bbe574e2307785fff7bcf9da1",
          "dweb:/ipfs/QmXzJfZkXVfyr2RFGwDuazeVnV3UWYmQxjKZ3KzFbbe75U"
        ],
        "license": "MIT"
      },
      "src/Memory.sol": {
        "keccak256": "0x69295976e61a1a108d1b4d6eb497b238730309f3047c4320d48e01a0ce8d4ec7",
        "urls": [
          "bzz-raw://559c451b21fb9dd4fec27b41bef42f4362f1e7ebb7992106d548b9d4f733b3e5",
          "dweb:/ipfs/QmeSE7YTW5zUrfZYFVb2pFnDe3XxiT8XNecfwC3wfpxCRv"
        ],
        "license": "MIT"
      },
      "src/PackedCounter.sol": {
        "keccak256": "0x44ddfa9eb8a861462c550f0a9d66c40c68acdb347a61fa765949608407a2c7fb",
        "urls": [
          "bzz-raw://47ee957f4b19cab9e20bf5fc569c015eca13852fb3351f2a105a8be9c48204c0",
          "dweb:/ipfs/QmNkyzDobVQLoq9BtQ8HtgsPLiqnmi97EZx1wsu6wp8nKH"
        ],
        "license": "MIT"
      },
      "src/ResourceId.sol": {
        "keccak256": "0x40983c580b8958e55db4520095934a535e98544ffe8228327e598973eb6647ed",
        "urls": [
          "bzz-raw://839d658fa2bb2b1f09a08149d2bf0c26a26c301ad2dda8154fc99458085a695d",
          "dweb:/ipfs/Qmd5jHHYrgqraPqF8bjzT4xyjsoPk8K7pkxXLLfz6MRT6d"
        ],
        "license": "MIT"
      },
      "src/Schema.sol": {
        "keccak256": "0x58aef318ba03f8ff8866ef70f8a30f549b150657ea699734aefe16c298956401",
        "urls": [
          "bzz-raw://7dc104690a7e2bcf5ce1afadcd58f8ef4d639b4b92b9ad9293656235d54395f3",
          "dweb:/ipfs/QmYJJvEv5KBJ3kzf9AkgRn7Uu5dp4exGTRddf4cae1btgE"
        ],
        "license": "MIT"
      },
      "src/Slice.sol": {
        "keccak256": "0xfaf54b1f5acccd4c6ce3f8377050ee84efbb423cb604b4651e8b9ea3b467bf32",
        "urls": [
          "bzz-raw://acf2ce7ffec21f28ad1dc6da06c342f1212a03a3d16a0be7ee85715a5940718c",
          "dweb:/ipfs/QmTCN3NSdFg87hi7KS2Xtq7PsmRUMG64SxC8PtP3p2GzuT"
        ],
        "license": "MIT"
      },
      "src/Storage.sol": {
        "keccak256": "0x0893905ebe431a414226b479a84a54804091001a406222c748adbd4b651853a5",
        "urls": [
          "bzz-raw://bcfcd3848127884041f0bcd727a0e7acbddec283aa6c16ba47abc6a3be720648",
          "dweb:/ipfs/QmY5fBd53e4Ro6vzTZYsteSibSTXVA3GHTeCAiUZTa5DPZ"
        ],
        "license": "MIT"
      },
      "src/StoreCore.sol": {
        "keccak256": "0x95b7d62d84b43777c54dd1c7d941dbb5ba0afc02c444c30cfdb1de671bbbf180",
        "urls": [
          "bzz-raw://fe62a2fdb2a73610c3072f31b7f88ed3f9d03c1009fe0f0ef37a7eb814b23534",
          "dweb:/ipfs/QmV85zaV5HAD6eGc5N4RmdtmpR6EwkswVLQTaR2aJqsXrj"
        ],
        "license": "MIT"
      },
      "src/StoreData.sol": {
        "keccak256": "0x4e451128c33a01d520c1944b3db42a62c158aea8fa11e786a58a0f719a189526",
        "urls": [
          "bzz-raw://c2f98f30a7b2c9ef020e274b87ae0fa66d1380343a00ecf6bd796ae31cd9b279",
          "dweb:/ipfs/QmYXHSBn4Hp7cimDLKy86ep23v2VRUS6dLPevcVMs3dJrw"
        ],
        "license": "MIT"
      },
      "src/StoreRead.sol": {
        "keccak256": "0x0da12dea94f088d01b1b0d6d4887f628c61c9c34a4c74a4c9033621bddcc007f",
        "urls": [
          "bzz-raw://7e77d66891e1cdff6899e00c7993302dd77dd291f954b79d2c582da076e22264",
          "dweb:/ipfs/QmcLyDFSnyMUF89hGhPX4nvUpkXdJSxBe5zGSJFqTAT5Mj"
        ],
        "license": "MIT"
      },
      "src/StoreSwitch.sol": {
        "keccak256": "0xf132af10f960a498f49c0534027056e715f4bdcb8fbdb53ac6879c92309ab416",
        "urls": [
          "bzz-raw://e85a09aeb7543bcd9d74b7ad319ae61e1f7f15a6a0ad9e79aff750fbd18111c7",
          "dweb:/ipfs/QmY6xgqeeaR1FsCPLmFbVgjm1D2UyrXNABKXWLfFaSmBhR"
        ],
        "license": "MIT"
      },
      "src/codegen/index.sol": {
        "keccak256": "0xf337a5abb2d43ef00c1c200e7fbec30fc89c7c701e457ab4277194b700d2aea3",
        "urls": [
          "bzz-raw://eccdf6158076b4e8f1b587a0310228f53323705e054a44eaa7733f38805c3ee6",
          "dweb:/ipfs/QmbXEVNTctg54dK9awdCVyAjeuUjR6ckfmmXBP8DrFmjyq"
        ],
        "license": "MIT"
      },
      "src/codegen/tables/Hooks.sol": {
        "keccak256": "0xc5c6f807cff6b4dc486525c559ba3f7cbb034ac5895636ee64c9d01defa6a38e",
        "urls": [
          "bzz-raw://84d3a3b3fd3afa2ab3231fd7fe981889dfb0600deec34c5d4e9c07d3187af8a5",
          "dweb:/ipfs/Qmanj7WjETqBYQXkxKLjqWs4vMp3en3N69B5MacKme5fpD"
        ],
        "license": "MIT"
      },
      "src/codegen/tables/ResourceIds.sol": {
        "keccak256": "0xf7a9bf3e37b486377005c556cdf5b813ea1a41278b3a0349f81e3c82a2f1c789",
        "urls": [
          "bzz-raw://92cc87add89abcb126bf3cd0b284f25065c2b9c90a49f8dba4629b28a5b87751",
          "dweb:/ipfs/QmNNBDSK5GNujERGiSUhorbmtpdD2UnGz7MqSSDasEGdub"
        ],
        "license": "MIT"
      },
      "src/codegen/tables/StoreHooks.sol": {
        "keccak256": "0xa1186b8b6143b4a87cea1624785494398be1613cb7c6f9e57734e1cca1d5dd14",
        "urls": [
          "bzz-raw://488c158082622689d035d7964c6ca063295e53078291c340eb6a23db08e8ff95",
          "dweb:/ipfs/QmWcjo3B5SH7jStXKAuf7qvF2ouz6syw9c7aT86PnTgRqW"
        ],
        "license": "MIT"
      },
      "src/codegen/tables/Tables.sol": {
        "keccak256": "0xd47e1921c07fc8608157b5dc343fcef7235e891ea6a21dec1fb118a0bd797fcb",
        "urls": [
          "bzz-raw://01a6ad068e6991994a0939f22a55245e0c7c82fc5e274da0af616286a8acfc7a",
          "dweb:/ipfs/QmPokA3pSexzZY33MMV6BGx48ZwQegdUN5AijiAfycSDxy"
        ],
        "license": "MIT"
      },
      "src/constants.sol": {
        "keccak256": "0x9e37c64c119ef07ad914bc589ee3f6d67946ab95877978c1ee3e2c1ffae07076",
        "urls": [
          "bzz-raw://3fad47e542025382aa28e8171253e34f93b2f149434b67a26989542d70218793",
          "dweb:/ipfs/QmW6JsKNwPc6oAMrgcikgR2EPwMUtQANiuZSQSGCd29HHC"
        ],
        "license": "MIT"
      },
      "src/leftMask.sol": {
        "keccak256": "0xd0360567e4d77c6a8e3d8a5f4bf3653ccde4d268674c50988d55695dc6193f6f",
        "urls": [
          "bzz-raw://53e6bcb53fcb08ee9426225fdab7c41df91e12cb4f80d92895a6117338627401",
          "dweb:/ipfs/QmeLcaPGeMBpNSTSsPYK3PHpzKuGMjuitCweAWcoXK2mXr"
        ],
        "license": "MIT"
      },
      "src/storeHookTypes.sol": {
        "keccak256": "0x60880298016fa117ed9a43ddfd020f11d98a2d345bdcb08e5884e40df98eddd5",
        "urls": [
          "bzz-raw://3619dfda1fd514c0fc5fb34c14d5b5aa41dd6ba6045d37d5f4c8199f3a826f81",
          "dweb:/ipfs/QmbzRBYfVa423gNzCitpGN3i2N9oeGYfinVE1jgtqxnNZX"
        ],
        "license": "MIT"
      },
      "src/storeResourceTypes.sol": {
        "keccak256": "0xada1867ba72930fc5cf5562dd4e36de849dbac9c833b7969cb1b046a808fabf2",
        "urls": [
          "bzz-raw://6e4b5fdcaa54f567a3f8561c2c3fbc0d68c8dad892a4a8e5418bbce8efc53d84",
          "dweb:/ipfs/QmTWbYJX1yrCqrEwUKB9rGpHdRvLNU8GCkBbxnLjGD4d2t"
        ],
        "license": "MIT"
      },
      "src/tightcoder/DecodeSlice.sol": {
        "keccak256": "0x1af0fd984640123391ec2df855d00298504b7ce186a56c2caca769cfd9e08e04",
        "urls": [
          "bzz-raw://7305a62318890d2cc6420ba7dec13d9f2c1cb67ac689015fc83b9cbccd0696f1",
          "dweb:/ipfs/QmR8jGNLbt64Tv1YZKRVBCVsd71oeUQFzGHHtpsrs4PuRq"
        ],
        "license": "MIT"
      },
      "src/tightcoder/EncodeArray.sol": {
        "keccak256": "0x1c280d24360282e196d9c4833c58c2437108cea2af0ac7596f95be81389e306d",
        "urls": [
          "bzz-raw://6b4556b6eeae9328fbd9adcce346547e823c397503276a4d63effb67e00b5b49",
          "dweb:/ipfs/QmUsynVsMYzjh8oJR8YB7SRrwFMdXcsQsHBrXxLEEFxsiB"
        ],
        "license": "MIT"
      },
      "src/tightcoder/TightCoder.sol": {
        "keccak256": "0x5cacd4cb371e0a79bc8d64f62349d568fd8b08093c11ae0c3db4f16480d8808b",
        "urls": [
          "bzz-raw://12b64ddf2b5c19cf68ba93a8153ed79cbafe7a91e015d4b2f25eb1d42ab06256",
          "dweb:/ipfs/QmQz5WwztcuTbSGFv2pkhU3w5scUj1gmavoyUpduxk2v3A"
        ],
        "license": "MIT"
      },
      "src/version.sol": {
        "keccak256": "0x01029999a48b7c1d85de84cae465dd24ec126c95b8a865cd20c7ed5dfcc0f02c",
        "urls": [
          "bzz-raw://9750164ce996badb0fd7df2f526780b9cb9558912405fe46f31064bd7c522491",
          "dweb:/ipfs/QmYf8m2ZXFANRc9ysHgNkNtSF327ccxKYjCUJ49UXBKADk"
        ],
        "license": "MIT"
      },
      "test/KeyEncoding.t.sol": {
        "keccak256": "0x6a6e09289ff2a4818635a04770556edd0ceb05bd60ab4ce1bd61531920258374",
        "urls": [
          "bzz-raw://9566c6adcda2782ed6a086677ced68c9a97d4976e74801d5a1a2ee9113900043",
          "dweb:/ipfs/QmPDdVtmriHfEiLC7Fe6CVJ6L7KWiGbnG69UHf2Furtrie"
        ],
        "license": "MIT"
      },
      "test/StoreMock.sol": {
        "keccak256": "0xd9fe932bd756bb49643aadc437252c8681bea58293cc1a4020a43f59a9f30c48",
        "urls": [
          "bzz-raw://99eb4a5609a8ae41b0eb0aafbfc23135ac92eebc0280040ea1a5b8dd270301f3",
          "dweb:/ipfs/QmcXfKcLgf3stUvRwCScX95Aqavubq2ULe3idUtjp8uPYf"
        ],
        "license": "MIT"
      },
      "test/codegen/common.sol": {
        "keccak256": "0xfb8a86c7cd9337dd447f5fec131d86e668e855094eb030cf8aee4bef293595f9",
        "urls": [
          "bzz-raw://9713bddb9dcbf611048148a195c0239480b1ac29df22df9fbd2df36274aa8d0b",
          "dweb:/ipfs/QmYoNyg6iLpGQkXA5szq67KGR8eaz8yyTwy2X66wtDj9Bo"
        ],
        "license": "MIT"
      },
      "test/codegen/index.sol": {
        "keccak256": "0xd78a354e0d72ddbb1588dca45d594ad53448e38a860ccf08fac0cdb8613a1cdc",
        "urls": [
          "bzz-raw://8fc75fd8c8b1e5f23eb7bf836dc50b2b45b2c4673feb6740d9dc0ebb586430fb",
          "dweb:/ipfs/QmQsEq1MnUcFsi7sPcJ2qB3F1HXFTpp942a23YKRwGS6SD"
        ],
        "license": "MIT"
      },
      "test/codegen/tables/Callbacks.sol": {
        "keccak256": "0x952167daaa1d2abe689a1341da215a911f9385a3dbf07a2054ea9118411ef075",
        "urls": [
          "bzz-raw://7b4430402bbb75818d78a84fa8bdff13047e8657033006696e5709a54128497c",
          "dweb:/ipfs/QmPbTS9Bwy9rt9P8FbFrWCyshhj4SKLP4Usjzg8EbbDzCt"
        ],
        "license": "MIT"
      },
      "test/codegen/tables/KeyEncoding.sol": {
        "keccak256": "0x6903d228e0924ae95f26142a0a705e84b7e634e74cdbe990f91b1e724bf94af5",
        "urls": [
          "bzz-raw://571eb25e3f3b8b11a4fd375aad9c7d72e9a7755140e2c9abf773d4bac06a4fe4",
          "dweb:/ipfs/Qmc1txvZ6Cydb2bfPXFvbBXeTzCFnjFsKj8TeXKrxWvHB7"
        ],
        "license": "MIT"
      },
      "test/codegen/tables/Mixed.sol": {
        "keccak256": "0x693215d82222a8591b22d239609804af57cdb7ce639eeea656925c1a45422ce2",
        "urls": [
          "bzz-raw://b957dc4c77e6b83d185cb197b14887d413f2d7df2e60d11e1cb0ce0785af72c0",
          "dweb:/ipfs/QmaCyS7CwW6yWRoAZKsQNTmkgC7mXhqX9zhpFwgtzDfUPQ"
        ],
        "license": "MIT"
      },
      "test/codegen/tables/Vector2.sol": {
        "keccak256": "0xf6c5e8812290a7e867ff37e6bf755504b2c26281c681376e1bea3e9a7bda3d3c",
        "urls": [
          "bzz-raw://8ddad24363ad8887706ae7f4303924479cb218ae28a3963019abc2049ff85ec9",
          "dweb:/ipfs/QmdcQLBFH7CsnhnWmTb896nFVGPv76wnqL4Ui8Zw9B2Dz9"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/KeyEncoding.t.sol",
    "id": 68275,
    "exportedSymbols": {
      "ExampleEnum": [
        84283
      ],
      "FieldLayout": [
        44140
      ],
      "GasReporter": [
        40736
      ],
      "KeyEncoding": [
        87572
      ],
      "KeyEncodingTableId": [
        85986
      ],
      "KeyEncodingTest": [
        68274
      ],
      "Schema": [
        46304
      ],
      "StoreCore": [
        49204
      ],
      "StoreMock": [
        83899
      ],
      "Test": [
        43325
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3192:80",
    "nodes": [
      {
        "id": 67939,
        "nodeType": "PragmaDirective",
        "src": "32:25:80",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 67941,
        "nodeType": "ImportDirective",
        "src": "59:42:80",
        "nodes": [],
        "absolutePath": "node_modules/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68275,
        "sourceUnit": 43326,
        "symbolAliases": [
          {
            "foreign": {
              "id": 67940,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43325,
              "src": "68:4:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67943,
        "nodeType": "ImportDirective",
        "src": "102:73:80",
        "nodes": [],
        "absolutePath": "node_modules/@latticexyz/gas-report/src/GasReporter.sol",
        "file": "@latticexyz/gas-report/src/GasReporter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68275,
        "sourceUnit": 40737,
        "symbolAliases": [
          {
            "foreign": {
              "id": 67942,
              "name": "GasReporter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40736,
              "src": "111:11:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67945,
        "nodeType": "ImportDirective",
        "src": "176:49:80",
        "nodes": [],
        "absolutePath": "src/StoreCore.sol",
        "file": "../src/StoreCore.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68275,
        "sourceUnit": 49740,
        "symbolAliases": [
          {
            "foreign": {
              "id": 67944,
              "name": "StoreCore",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49204,
              "src": "185:9:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67947,
        "nodeType": "ImportDirective",
        "src": "226:53:80",
        "nodes": [],
        "absolutePath": "src/FieldLayout.sol",
        "file": "../src/FieldLayout.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68275,
        "sourceUnit": 44560,
        "symbolAliases": [
          {
            "foreign": {
              "id": 67946,
              "name": "FieldLayout",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44140,
              "src": "235:11:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67949,
        "nodeType": "ImportDirective",
        "src": "280:43:80",
        "nodes": [],
        "absolutePath": "src/Schema.sol",
        "file": "../src/Schema.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68275,
        "sourceUnit": 46773,
        "symbolAliases": [
          {
            "foreign": {
              "id": 67948,
              "name": "Schema",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46304,
              "src": "289:6:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67951,
        "nodeType": "ImportDirective",
        "src": "325:44:80",
        "nodes": [],
        "absolutePath": "test/StoreMock.sol",
        "file": "./StoreMock.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68275,
        "sourceUnit": 83900,
        "symbolAliases": [
          {
            "foreign": {
              "id": 67950,
              "name": "StoreMock",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 83899,
              "src": "334:9:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67954,
        "nodeType": "ImportDirective",
        "src": "370:70:80",
        "nodes": [],
        "absolutePath": "test/codegen/index.sol",
        "file": "./codegen/index.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68275,
        "sourceUnit": 84300,
        "symbolAliases": [
          {
            "foreign": {
              "id": 67952,
              "name": "KeyEncoding",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 87572,
              "src": "379:11:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 67953,
              "name": "KeyEncodingTableId",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 85986,
              "src": "392:18:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67956,
        "nodeType": "ImportDirective",
        "src": "441:51:80",
        "nodes": [],
        "absolutePath": "test/codegen/common.sol",
        "file": "./codegen/common.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68275,
        "sourceUnit": 84284,
        "symbolAliases": [
          {
            "foreign": {
              "id": 67955,
              "name": "ExampleEnum",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 84283,
              "src": "450:11:80",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 68274,
        "nodeType": "ContractDefinition",
        "src": "494:2729:80",
        "nodes": [
          {
            "id": 68008,
            "nodeType": "FunctionDefinition",
            "src": "555:411:80",
            "nodes": [],
            "body": {
              "id": 68007,
              "nodeType": "Block",
              "src": "603:363:80",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7265676973746572204b6579456e636f64696e67207461626c65",
                        "id": 67966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "624:28:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36524450601974f43584314fff60fdd922cdb36426630bcf9d65e708c90bfe03",
                          "typeString": "literal_string \"register KeyEncoding table\""
                        },
                        "value": "register KeyEncoding table"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_36524450601974f43584314fff60fdd922cdb36426630bcf9d65e708c90bfe03",
                          "typeString": "literal_string \"register KeyEncoding table\""
                        }
                      ],
                      "id": 67965,
                      "name": "startGasReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40594,
                      "src": "609:14:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 67967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "609:44:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67968,
                  "nodeType": "ExpressionStatement",
                  "src": "609:44:80"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 67969,
                        "name": "KeyEncoding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87572,
                        "src": "659:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_KeyEncoding_$87572_$",
                          "typeString": "type(library KeyEncoding)"
                        }
                      },
                      "id": 67971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "671:8:80",
                      "memberName": "register",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86196,
                      "src": "659:20:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 67972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "659:22:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67973,
                  "nodeType": "ExpressionStatement",
                  "src": "659:22:80"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 67974,
                      "name": "endGasReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40648,
                      "src": "687:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 67975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "687:14:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67976,
                  "nodeType": "ExpressionStatement",
                  "src": "687:14:80"
                },
                {
                  "assignments": [
                    67979
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67979,
                      "mutability": "mutable",
                      "name": "registeredFieldLayout",
                      "nameLocation": "720:21:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 68007,
                      "src": "708:33:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                        "typeString": "FieldLayout"
                      },
                      "typeName": {
                        "id": 67978,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 67977,
                          "name": "FieldLayout",
                          "nameLocations": [
                            "708:11:80"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 44140,
                          "src": "708:11:80"
                        },
                        "referencedDeclaration": 44140,
                        "src": "708:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                          "typeString": "FieldLayout"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67984,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 67982,
                        "name": "KeyEncodingTableId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85986,
                        "src": "769:18:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_ResourceId_$46221",
                          "typeString": "ResourceId"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_ResourceId_$46221",
                          "typeString": "ResourceId"
                        }
                      ],
                      "expression": {
                        "id": 67980,
                        "name": "StoreCore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49204,
                        "src": "744:9:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StoreCore_$49204_$",
                          "typeString": "type(library StoreCore)"
                        }
                      },
                      "id": 67981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "754:14:80",
                      "memberName": "getFieldLayout",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47569,
                      "src": "744:24:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_ResourceId_$46221_$returns$_t_userDefinedValueType$_FieldLayout_$44140_$",
                        "typeString": "function (ResourceId) view returns (FieldLayout)"
                      }
                    },
                    "id": 67983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "744:44:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                      "typeString": "FieldLayout"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "708:80:80"
                },
                {
                  "assignments": [
                    67987
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67987,
                      "mutability": "mutable",
                      "name": "declaredFieldLayout",
                      "nameLocation": "806:19:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 68007,
                      "src": "794:31:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                        "typeString": "FieldLayout"
                      },
                      "typeName": {
                        "id": 67986,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 67985,
                          "name": "FieldLayout",
                          "nameLocations": [
                            "794:11:80"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 44140,
                          "src": "794:11:80"
                        },
                        "referencedDeclaration": 44140,
                        "src": "794:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                          "typeString": "FieldLayout"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67991,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 67988,
                        "name": "KeyEncoding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87572,
                        "src": "828:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_KeyEncoding_$87572_$",
                          "typeString": "type(library KeyEncoding)"
                        }
                      },
                      "id": 67989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "840:14:80",
                      "memberName": "getFieldLayout",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86003,
                      "src": "828:26:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_userDefinedValueType$_FieldLayout_$44140_$",
                        "typeString": "function () pure returns (FieldLayout)"
                      }
                    },
                    "id": 67990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "828:28:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                      "typeString": "FieldLayout"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "794:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 67996,
                                "name": "registeredFieldLayout",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67979,
                                "src": "893:21:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                                  "typeString": "FieldLayout"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                                  "typeString": "FieldLayout"
                                }
                              ],
                              "expression": {
                                "id": 67994,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "882:3:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 67995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "886:6:80",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "882:10:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 67997,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "882:33:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 67993,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "872:9:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 67998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "872:44:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 68002,
                                "name": "declaredFieldLayout",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67987,
                                "src": "939:19:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                                  "typeString": "FieldLayout"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                                  "typeString": "FieldLayout"
                                }
                              ],
                              "expression": {
                                "id": 68000,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "928:3:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 68001,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "932:6:80",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "928:10:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 68003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "928:31:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 67999,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "918:9:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 68004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "918:42:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 67992,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41358,
                      "src": "863:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 68005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "863:98:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68006,
                  "nodeType": "ExpressionStatement",
                  "src": "863:98:80"
                }
              ]
            },
            "functionSelector": "0a028481",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRegisterAndGetFieldLayout",
            "nameLocation": "564:29:80",
            "parameters": {
              "id": 67963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "593:2:80"
            },
            "returnParameters": {
              "id": 67964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "603:0:80"
            },
            "scope": 68274,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68047,
            "nodeType": "FunctionDefinition",
            "src": "970:306:80",
            "nodes": [],
            "body": {
              "id": 68046,
              "nodeType": "Block",
              "src": "1013:263:80",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 68011,
                        "name": "KeyEncoding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87572,
                        "src": "1019:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_KeyEncoding_$87572_$",
                          "typeString": "type(library KeyEncoding)"
                        }
                      },
                      "id": 68013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1031:8:80",
                      "memberName": "register",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86196,
                      "src": "1019:20:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 68014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1019:22:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68015,
                  "nodeType": "ExpressionStatement",
                  "src": "1019:22:80"
                },
                {
                  "assignments": [
                    68018
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68018,
                      "mutability": "mutable",
                      "name": "registeredSchema",
                      "nameLocation": "1055:16:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 68046,
                      "src": "1048:23:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Schema_$46304",
                        "typeString": "Schema"
                      },
                      "typeName": {
                        "id": 68017,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 68016,
                          "name": "Schema",
                          "nameLocations": [
                            "1048:6:80"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 46304,
                          "src": "1048:6:80"
                        },
                        "referencedDeclaration": 46304,
                        "src": "1048:6:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Schema_$46304",
                          "typeString": "Schema"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68023,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 68021,
                        "name": "KeyEncodingTableId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85986,
                        "src": "1099:18:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_ResourceId_$46221",
                          "typeString": "ResourceId"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_ResourceId_$46221",
                          "typeString": "ResourceId"
                        }
                      ],
                      "expression": {
                        "id": 68019,
                        "name": "StoreCore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49204,
                        "src": "1074:9:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StoreCore_$49204_$",
                          "typeString": "type(library StoreCore)"
                        }
                      },
                      "id": 68020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1084:14:80",
                      "memberName": "getValueSchema",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47643,
                      "src": "1074:24:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_ResourceId_$46221_$returns$_t_userDefinedValueType$_Schema_$46304_$",
                        "typeString": "function (ResourceId) view returns (Schema)"
                      }
                    },
                    "id": 68022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1074:44:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Schema_$46304",
                      "typeString": "Schema"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1048:70:80"
                },
                {
                  "assignments": [
                    68026
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68026,
                      "mutability": "mutable",
                      "name": "declaredSchema",
                      "nameLocation": "1131:14:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 68046,
                      "src": "1124:21:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Schema_$46304",
                        "typeString": "Schema"
                      },
                      "typeName": {
                        "id": 68025,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 68024,
                          "name": "Schema",
                          "nameLocations": [
                            "1124:6:80"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 46304,
                          "src": "1124:6:80"
                        },
                        "referencedDeclaration": 46304,
                        "src": "1124:6:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Schema_$46304",
                          "typeString": "Schema"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68030,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 68027,
                        "name": "KeyEncoding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87572,
                        "src": "1148:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_KeyEncoding_$87572_$",
                          "typeString": "type(library KeyEncoding)"
                        }
                      },
                      "id": 68028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1160:14:80",
                      "memberName": "getValueSchema",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86102,
                      "src": "1148:26:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_userDefinedValueType$_Schema_$46304_$",
                        "typeString": "function () pure returns (Schema)"
                      }
                    },
                    "id": 68029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1148:28:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Schema_$46304",
                      "typeString": "Schema"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1124:52:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 68035,
                                "name": "registeredSchema",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68018,
                                "src": "1213:16:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_Schema_$46304",
                                  "typeString": "Schema"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_Schema_$46304",
                                  "typeString": "Schema"
                                }
                              ],
                              "expression": {
                                "id": 68033,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1202:3:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 68034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1206:6:80",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "1202:10:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 68036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1202:28:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 68032,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "1192:9:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 68037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1192:39:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 68041,
                                "name": "declaredSchema",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68026,
                                "src": "1254:14:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_Schema_$46304",
                                  "typeString": "Schema"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_Schema_$46304",
                                  "typeString": "Schema"
                                }
                              ],
                              "expression": {
                                "id": 68039,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1243:3:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 68040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1247:6:80",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "1243:10:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 68042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1243:26:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 68038,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "1233:9:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 68043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1233:37:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 68031,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41358,
                      "src": "1183:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 68044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1183:88:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68045,
                  "nodeType": "ExpressionStatement",
                  "src": "1183:88:80"
                }
              ]
            },
            "functionSelector": "c290114c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRegisterAndGetSchema",
            "nameLocation": "979:24:80",
            "parameters": {
              "id": 68009,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1003:2:80"
            },
            "returnParameters": {
              "id": 68010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1013:0:80"
            },
            "scope": 68274,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68095,
            "nodeType": "FunctionDefinition",
            "src": "1280:442:80",
            "nodes": [],
            "body": {
              "id": 68094,
              "nodeType": "Block",
              "src": "1312:410:80",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 68050,
                        "name": "KeyEncoding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87572,
                        "src": "1318:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_KeyEncoding_$87572_$",
                          "typeString": "type(library KeyEncoding)"
                        }
                      },
                      "id": 68052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1330:8:80",
                      "memberName": "register",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86196,
                      "src": "1318:20:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 68053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1318:22:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68054,
                  "nodeType": "ExpressionStatement",
                  "src": "1318:22:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3432",
                        "id": 68058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1370:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_42_by_1",
                          "typeString": "int_const 42"
                        },
                        "value": "42"
                      },
                      {
                        "id": 68060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "-",
                        "prefix": true,
                        "src": "1380:3:80",
                        "subExpression": {
                          "hexValue": "3432",
                          "id": 68059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1381:2:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_42_by_1",
                            "typeString": "int_const 42"
                          },
                          "value": "42"
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_minus_42_by_1",
                          "typeString": "int_const -42"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "1234",
                            "id": 68063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "hexString",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1399:9:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_56570de287d73cd1cb6092bb8fdee6173974955fdef345ae579ee9f475ea7432",
                              "typeString": "literal_string hex\"1234\""
                            },
                            "value": "\u00124"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_56570de287d73cd1cb6092bb8fdee6173974955fdef345ae579ee9f475ea7432",
                              "typeString": "literal_string hex\"1234\""
                            }
                          ],
                          "id": 68062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1391:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes16_$",
                            "typeString": "type(bytes16)"
                          },
                          "typeName": {
                            "id": 68061,
                            "name": "bytes16",
                            "nodeType": "ElementaryTypeName",
                            "src": "1391:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 68064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1391:18:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "hexValue": "307846466646664666664646666666464666464666464646464666664646466666666646664646466646",
                        "id": 68065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1417:42:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 68066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1467:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "expression": {
                          "id": 68067,
                          "name": "ExampleEnum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84283,
                          "src": "1479:11:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ExampleEnum_$84283_$",
                            "typeString": "type(enum ExampleEnum)"
                          }
                        },
                        "id": 68068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1491:5:80",
                        "memberName": "Third",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 84282,
                        "src": "1479:17:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ExampleEnum_$84283",
                          "typeString": "enum ExampleEnum"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 68069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1504:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_42_by_1",
                          "typeString": "int_const 42"
                        },
                        {
                          "typeIdentifier": "t_rational_minus_42_by_1",
                          "typeString": "int_const -42"
                        },
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_enum$_ExampleEnum_$84283",
                          "typeString": "enum ExampleEnum"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 68055,
                        "name": "KeyEncoding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87572,
                        "src": "1347:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_KeyEncoding_$87572_$",
                          "typeString": "type(library KeyEncoding)"
                        }
                      },
                      "id": 68057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1359:3:80",
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87077,
                      "src": "1347:15:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_int32_$_t_bytes16_$_t_address_$_t_bool_$_t_enum$_ExampleEnum_$84283_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,int32,bytes16,address,bool,enum ExampleEnum,bool)"
                      }
                    },
                    "id": 68070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1347:167:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68071,
                  "nodeType": "ExpressionStatement",
                  "src": "1347:167:80"
                },
                {
                  "assignments": [
                    68073
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68073,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1526:5:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 68094,
                      "src": "1521:10:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 68072,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1521:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68088,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "3432",
                        "id": 68076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1557:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_42_by_1",
                          "typeString": "int_const 42"
                        },
                        "value": "42"
                      },
                      {
                        "id": 68078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "-",
                        "prefix": true,
                        "src": "1567:3:80",
                        "subExpression": {
                          "hexValue": "3432",
                          "id": 68077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1568:2:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_42_by_1",
                            "typeString": "int_const 42"
                          },
                          "value": "42"
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_minus_42_by_1",
                          "typeString": "int_const -42"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "1234",
                            "id": 68081,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "hexString",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1586:9:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_56570de287d73cd1cb6092bb8fdee6173974955fdef345ae579ee9f475ea7432",
                              "typeString": "literal_string hex\"1234\""
                            },
                            "value": "\u00124"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_56570de287d73cd1cb6092bb8fdee6173974955fdef345ae579ee9f475ea7432",
                              "typeString": "literal_string hex\"1234\""
                            }
                          ],
                          "id": 68080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1578:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes16_$",
                            "typeString": "type(bytes16)"
                          },
                          "typeName": {
                            "id": 68079,
                            "name": "bytes16",
                            "nodeType": "ElementaryTypeName",
                            "src": "1578:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 68082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1578:18:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "hexValue": "307846466646664666664646666666464666464666464646464666664646466666666646664646466646",
                        "id": 68083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1604:42:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 68084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1654:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "expression": {
                          "id": 68085,
                          "name": "ExampleEnum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84283,
                          "src": "1666:11:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ExampleEnum_$84283_$",
                            "typeString": "type(enum ExampleEnum)"
                          }
                        },
                        "id": 68086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1678:5:80",
                        "memberName": "Third",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 84282,
                        "src": "1666:17:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ExampleEnum_$84283",
                          "typeString": "enum ExampleEnum"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_42_by_1",
                          "typeString": "int_const 42"
                        },
                        {
                          "typeIdentifier": "t_rational_minus_42_by_1",
                          "typeString": "int_const -42"
                        },
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_enum$_ExampleEnum_$84283",
                          "typeString": "enum ExampleEnum"
                        }
                      ],
                      "expression": {
                        "id": 68074,
                        "name": "KeyEncoding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87572,
                        "src": "1534:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_KeyEncoding_$87572_$",
                          "typeString": "type(library KeyEncoding)"
                        }
                      },
                      "id": 68075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1546:3:80",
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86594,
                      "src": "1534:15:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_int32_$_t_bytes16_$_t_address_$_t_bool_$_t_enum$_ExampleEnum_$84283_$returns$_t_bool_$",
                        "typeString": "function (uint256,int32,bytes16,address,bool,enum ExampleEnum) view returns (bool)"
                      }
                    },
                    "id": 68087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1534:155:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1521:168:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68090,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68073,
                        "src": "1705:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 68091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1712:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 68089,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 101512,
                      "src": "1696:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 68092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1696:21:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68093,
                  "nodeType": "ExpressionStatement",
                  "src": "1696:21:80"
                }
              ]
            },
            "functionSelector": "0e757a2e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSetAndGet",
            "nameLocation": "1289:13:80",
            "parameters": {
              "id": 68048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1302:2:80"
            },
            "returnParameters": {
              "id": 68049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1312:0:80"
            },
            "scope": 68274,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68273,
            "nodeType": "FunctionDefinition",
            "src": "1726:1495:80",
            "nodes": [],
            "body": {
              "id": 68272,
              "nodeType": "Block",
              "src": "1760:1461:80",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 68098,
                        "name": "KeyEncoding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87572,
                        "src": "1766:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_KeyEncoding_$87572_$",
                          "typeString": "type(library KeyEncoding)"
                        }
                      },
                      "id": 68100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1778:8:80",
                      "memberName": "register",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86196,
                      "src": "1766:20:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 68101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1766:22:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68102,
                  "nodeType": "ExpressionStatement",
                  "src": "1766:22:80"
                },
                {
                  "assignments": [
                    68107
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68107,
                      "mutability": "mutable",
                      "name": "keyTuple",
                      "nameLocation": "1812:8:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 68272,
                      "src": "1795:25:80",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 68105,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1795:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 68106,
                        "nodeType": "ArrayTypeName",
                        "src": "1795:9:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68122,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "3432",
                        "id": 68110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1857:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_42_by_1",
                          "typeString": "int_const 42"
                        },
                        "value": "42"
                      },
                      {
                        "id": 68112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "-",
                        "prefix": true,
                        "src": "1867:3:80",
                        "subExpression": {
                          "hexValue": "3432",
                          "id": 68111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1868:2:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_42_by_1",
                            "typeString": "int_const 42"
                          },
                          "value": "42"
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_minus_42_by_1",
                          "typeString": "int_const -42"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "1234",
                            "id": 68115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "hexString",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1886:9:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_56570de287d73cd1cb6092bb8fdee6173974955fdef345ae579ee9f475ea7432",
                              "typeString": "literal_string hex\"1234\""
                            },
                            "value": "\u00124"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_56570de287d73cd1cb6092bb8fdee6173974955fdef345ae579ee9f475ea7432",
                              "typeString": "literal_string hex\"1234\""
                            }
                          ],
                          "id": 68114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1878:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes16_$",
                            "typeString": "type(bytes16)"
                          },
                          "typeName": {
                            "id": 68113,
                            "name": "bytes16",
                            "nodeType": "ElementaryTypeName",
                            "src": "1878:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 68116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1878:18:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "hexValue": "307846466646664666664646666666464666464666464646464666664646466666666646664646466646",
                        "id": 68117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1904:42:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 68118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1954:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "expression": {
                          "id": 68119,
                          "name": "ExampleEnum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84283,
                          "src": "1966:11:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ExampleEnum_$84283_$",
                            "typeString": "type(enum ExampleEnum)"
                          }
                        },
                        "id": 68120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1978:5:80",
                        "memberName": "Third",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 84282,
                        "src": "1966:17:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ExampleEnum_$84283",
                          "typeString": "enum ExampleEnum"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_42_by_1",
                          "typeString": "int_const 42"
                        },
                        {
                          "typeIdentifier": "t_rational_minus_42_by_1",
                          "typeString": "int_const -42"
                        },
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_enum$_ExampleEnum_$84283",
                          "typeString": "enum ExampleEnum"
                        }
                      ],
                      "expression": {
                        "id": 68108,
                        "name": "KeyEncoding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87572,
                        "src": "1823:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_KeyEncoding_$87572_$",
                          "typeString": "type(library KeyEncoding)"
                        }
                      },
                      "id": 68109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1835:14:80",
                      "memberName": "encodeKeyTuple",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87571,
                      "src": "1823:26:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_int32_$_t_bytes16_$_t_address_$_t_bool_$_t_enum$_ExampleEnum_$84283_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,int32,bytes16,address,bool,enum ExampleEnum) pure returns (bytes32[] memory)"
                      }
                    },
                    "id": 68121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1823:166:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1795:194:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 68124,
                          "name": "keyTuple",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68107,
                          "src": "2005:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 68125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2014:6:80",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2005:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "36",
                        "id": 68126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2022:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 68123,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41497,
                      "src": "1996:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 68127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1996:28:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68128,
                  "nodeType": "ExpressionStatement",
                  "src": "1996:28:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 68130,
                          "name": "keyTuple",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68107,
                          "src": "2098:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 68132,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 68131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2107:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2098:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "000000000000000000000000000000000000000000000000000000000000002a",
                            "id": 68135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "hexString",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2119:69:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_beced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d2",
                              "typeString": "literal_string hex\"000000000000000000000000000000000000000000000000000000000000002a\""
                            },
                            "value": "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000*"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_beced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d2",
                              "typeString": "literal_string hex\"000000000000000000000000000000000000000000000000000000000000002a\""
                            }
                          ],
                          "id": 68134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2111:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 68133,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2111:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 68136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2111:78:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 68129,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41358,
                      "src": "2089:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 68137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2089:101:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68138,
                  "nodeType": "ExpressionStatement",
                  "src": "2089:101:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 68140,
                          "name": "keyTuple",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68107,
                          "src": "2205:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 68142,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 68141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2214:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2205:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd6",
                            "id": 68145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "hexString",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2226:69:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f67924a745fe50f06488cfaac7a94cc80c79928c2fa262705d711650a9872496",
                              "typeString": "literal_string hex\"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd6\""
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f67924a745fe50f06488cfaac7a94cc80c79928c2fa262705d711650a9872496",
                              "typeString": "literal_string hex\"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd6\""
                            }
                          ],
                          "id": 68144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2218:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 68143,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2218:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 68146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2218:78:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 68139,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41358,
                      "src": "2196:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 68147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2196:101:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68148,
                  "nodeType": "ExpressionStatement",
                  "src": "2196:101:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 68150,
                          "name": "keyTuple",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68107,
                          "src": "2312:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 68152,
                        "indexExpression": {
                          "hexValue": "32",
                          "id": 68151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2321:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2312:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "1234000000000000000000000000000000000000000000000000000000000000",
                            "id": 68155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "hexString",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2333:69:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_2bf3cbed2d87a8017a089a03e45dfbd5c90ae2a1d7f756ef2d56726e5d4b3f0f",
                              "typeString": "literal_string hex\"1234000000000000000000000000000000000000000000000000000000000000\""
                            },
                            "value": "\u00124\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_2bf3cbed2d87a8017a089a03e45dfbd5c90ae2a1d7f756ef2d56726e5d4b3f0f",
                              "typeString": "literal_string hex\"1234000000000000000000000000000000000000000000000000000000000000\""
                            }
                          ],
                          "id": 68154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2325:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 68153,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2325:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 68156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2325:78:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 68149,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41358,
                      "src": "2303:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 68157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2303:101:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68158,
                  "nodeType": "ExpressionStatement",
                  "src": "2303:101:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 68160,
                          "name": "keyTuple",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68107,
                          "src": "2419:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 68162,
                        "indexExpression": {
                          "hexValue": "33",
                          "id": 68161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2428:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2419:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "000000000000000000000000ffffffffffffffffffffffffffffffffffffffff",
                            "id": 68165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "hexString",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2440:69:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_d4e438d33b9d837cd8ac2c60c0ab93462b774f17bb358eb7e74d97f49064fd72",
                              "typeString": "literal_string hex\"000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\""
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_d4e438d33b9d837cd8ac2c60c0ab93462b774f17bb358eb7e74d97f49064fd72",
                              "typeString": "literal_string hex\"000000000000000000000000ffffffffffffffffffffffffffffffffffffffff\""
                            }
                          ],
                          "id": 68164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2432:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 68163,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2432:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 68166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2432:78:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 68159,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41358,
                      "src": "2410:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 68167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2410:101:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68168,
                  "nodeType": "ExpressionStatement",
                  "src": "2410:101:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 68170,
                          "name": "keyTuple",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68107,
                          "src": "2526:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 68172,
                        "indexExpression": {
                          "hexValue": "34",
                          "id": 68171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2535:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2526:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "0000000000000000000000000000000000000000000000000000000000000001",
                            "id": 68175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "hexString",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2547:69:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_b10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6",
                              "typeString": "literal_string hex\"0000000000000000000000000000000000000000000000000000000000000001\""
                            },
                            "value": "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_b10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6",
                              "typeString": "literal_string hex\"0000000000000000000000000000000000000000000000000000000000000001\""
                            }
                          ],
                          "id": 68174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2539:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 68173,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2539:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 68176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2539:78:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 68169,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41358,
                      "src": "2517:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 68177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2517:101:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68178,
                  "nodeType": "ExpressionStatement",
                  "src": "2517:101:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 68180,
                          "name": "keyTuple",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68107,
                          "src": "2633:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 68182,
                        "indexExpression": {
                          "hexValue": "35",
                          "id": 68181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2642:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2633:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "0000000000000000000000000000000000000000000000000000000000000003",
                            "id": 68185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "hexString",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2654:69:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b",
                              "typeString": "literal_string hex\"0000000000000000000000000000000000000000000000000000000000000003\""
                            },
                            "value": "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b",
                              "typeString": "literal_string hex\"0000000000000000000000000000000000000000000000000000000000000003\""
                            }
                          ],
                          "id": 68184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2646:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 68183,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2646:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 68186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2646:78:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 68179,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41358,
                      "src": "2624:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 68187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2624:101:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68188,
                  "nodeType": "ExpressionStatement",
                  "src": "2624:101:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 68190,
                          "name": "keyTuple",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68107,
                          "src": "2845:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 68192,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 68191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2854:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2845:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "3432",
                                "id": 68197,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2877:2:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_42_by_1",
                                  "typeString": "int_const 42"
                                },
                                "value": "42"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_42_by_1",
                                  "typeString": "int_const 42"
                                }
                              ],
                              "expression": {
                                "id": 68195,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2866:3:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 68196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2870:6:80",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "2866:10:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 68198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2866:14:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 68194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2858:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 68193,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2858:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 68199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2858:23:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 68189,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41358,
                      "src": "2836:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 68200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2836:46:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68201,
                  "nodeType": "ExpressionStatement",
                  "src": "2836:46:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 68203,
                          "name": "keyTuple",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68107,
                          "src": "2897:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 68205,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 68204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2906:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2897:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 68211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "2929:3:80",
                                "subExpression": {
                                  "hexValue": "3432",
                                  "id": 68210,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2930:2:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_42_by_1",
                                    "typeString": "int_const 42"
                                  },
                                  "value": "42"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_42_by_1",
                                  "typeString": "int_const -42"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_minus_42_by_1",
                                  "typeString": "int_const -42"
                                }
                              ],
                              "expression": {
                                "id": 68208,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2918:3:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 68209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2922:6:80",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "2918:10:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 68212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2918:15:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 68207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2910:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 68206,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2910:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 68213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2910:24:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 68202,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41358,
                      "src": "2888:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 68214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2888:47:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68215,
                  "nodeType": "ExpressionStatement",
                  "src": "2888:47:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 68217,
                          "name": "keyTuple",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68107,
                          "src": "2950:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 68219,
                        "indexExpression": {
                          "hexValue": "32",
                          "id": 68218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2959:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2950:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "1234",
                                    "id": 68226,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "hexString",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2990:9:80",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_56570de287d73cd1cb6092bb8fdee6173974955fdef345ae579ee9f475ea7432",
                                      "typeString": "literal_string hex\"1234\""
                                    },
                                    "value": "\u00124"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_56570de287d73cd1cb6092bb8fdee6173974955fdef345ae579ee9f475ea7432",
                                      "typeString": "literal_string hex\"1234\""
                                    }
                                  ],
                                  "id": 68225,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2982:7:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes16_$",
                                    "typeString": "type(bytes16)"
                                  },
                                  "typeName": {
                                    "id": 68224,
                                    "name": "bytes16",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2982:7:80",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 68227,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2982:18:80",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes16",
                                  "typeString": "bytes16"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes16",
                                  "typeString": "bytes16"
                                }
                              ],
                              "expression": {
                                "id": 68222,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2971:3:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 68223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2975:6:80",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "2971:10:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 68228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2971:30:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 68221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2963:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 68220,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2963:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 68229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2963:39:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 68216,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41358,
                      "src": "2941:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 68230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2941:62:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68231,
                  "nodeType": "ExpressionStatement",
                  "src": "2941:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 68233,
                          "name": "keyTuple",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68107,
                          "src": "3018:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 68235,
                        "indexExpression": {
                          "hexValue": "33",
                          "id": 68234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3027:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3018:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "307846466646664666664646666666464666464666464646464666664646466666666646664646466646",
                                "id": 68240,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3050:42:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "value": "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 68238,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3039:3:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 68239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3043:6:80",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "3039:10:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 68241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3039:54:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 68237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3031:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 68236,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "3031:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 68242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3031:63:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 68232,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41358,
                      "src": "3009:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 68243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3009:86:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68244,
                  "nodeType": "ExpressionStatement",
                  "src": "3009:86:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 68246,
                          "name": "keyTuple",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68107,
                          "src": "3110:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 68248,
                        "indexExpression": {
                          "hexValue": "34",
                          "id": 68247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3119:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3110:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "74727565",
                                "id": 68253,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3142:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "expression": {
                                "id": 68251,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3131:3:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 68252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3135:6:80",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "3131:10:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 68254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3131:16:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 68250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3123:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 68249,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "3123:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 68255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3123:25:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 68245,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41358,
                      "src": "3101:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 68256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3101:48:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68257,
                  "nodeType": "ExpressionStatement",
                  "src": "3101:48:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 68259,
                          "name": "keyTuple",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68107,
                          "src": "3164:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 68261,
                        "indexExpression": {
                          "hexValue": "35",
                          "id": 68260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3173:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3164:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 68266,
                                  "name": "ExampleEnum",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 84283,
                                  "src": "3196:11:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ExampleEnum_$84283_$",
                                    "typeString": "type(enum ExampleEnum)"
                                  }
                                },
                                "id": 68267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3208:5:80",
                                "memberName": "Third",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 84282,
                                "src": "3196:17:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ExampleEnum_$84283",
                                  "typeString": "enum ExampleEnum"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_ExampleEnum_$84283",
                                  "typeString": "enum ExampleEnum"
                                }
                              ],
                              "expression": {
                                "id": 68264,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3185:3:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 68265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3189:6:80",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "3185:10:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 68268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3185:29:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 68263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3177:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 68262,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "3177:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 68269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3177:38:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 68258,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41358,
                      "src": "3155:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 68270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3155:61:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68271,
                  "nodeType": "ExpressionStatement",
                  "src": "3155:61:80"
                }
              ]
            },
            "functionSelector": "cccb4cda",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testKeyEncoding",
            "nameLocation": "1735:15:80",
            "parameters": {
              "id": 68096,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1750:2:80"
            },
            "returnParameters": {
              "id": 68097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1760:0:80"
            },
            "scope": 68274,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 67957,
              "name": "Test",
              "nameLocations": [
                "522:4:80"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43325,
              "src": "522:4:80"
            },
            "id": 67958,
            "nodeType": "InheritanceSpecifier",
            "src": "522:4:80"
          },
          {
            "baseName": {
              "id": 67959,
              "name": "GasReporter",
              "nameLocations": [
                "528:11:80"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40736,
              "src": "528:11:80"
            },
            "id": 67960,
            "nodeType": "InheritanceSpecifier",
            "src": "528:11:80"
          },
          {
            "baseName": {
              "id": 67961,
              "name": "StoreMock",
              "nameLocations": [
                "541:9:80"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 83899,
              "src": "541:9:80"
            },
            "id": 67962,
            "nodeType": "InheritanceSpecifier",
            "src": "541:9:80"
          }
        ],
        "canonicalName": "KeyEncodingTest",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          68274,
          83899,
          49778,
          50308,
          44787,
          44876,
          45380,
          44810,
          45532,
          44939,
          45327,
          40736,
          43325,
          101384,
          101381,
          110874,
          106612,
          106322,
          105558,
          103504,
          102811,
          43274
        ],
        "name": "KeyEncodingTest",
        "nameLocation": "503:15:80",
        "scope": 68275,
        "usedErrors": [
          44149,
          44151,
          44153,
          44821,
          44828,
          44837,
          44843,
          44849,
          44855,
          44861,
          44867,
          44875,
          46017,
          46314,
          46317,
          46797
        ],
        "usedEvents": [
          40988,
          40992,
          40996,
          41000,
          41004,
          41008,
          41012,
          41016,
          41022,
          41028,
          41036,
          41044,
          41050,
          41056,
          41062,
          41068,
          44803,
          44898,
          44911,
          44929,
          44938,
          47454,
          47467,
          47485,
          47494,
          101406,
          101411,
          101416,
          101423,
          101430,
          101437
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 80
}