{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "FieldLayoutLib_InvalidLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FieldLayoutLib_StaticLengthDoesNotFitInAWord",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FieldLayoutLib_StaticLengthIsZero",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "PackedCounter_InvalidLength",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "SchemaLib_InvalidLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SchemaLib_StaticTypeAfterDynamicType",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        }
      ],
      "name": "Slice_OutOfBounds",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "accessedIndex",
          "type": "uint256"
        }
      ],
      "name": "Store_IndexOutOfBounds",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "received",
          "type": "uint256"
        }
      ],
      "name": "Store_InvalidDynamicDataLength",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "received",
          "type": "uint256"
        }
      ],
      "name": "Store_InvalidFieldNamesLength",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "received",
          "type": "uint256"
        }
      ],
      "name": "Store_InvalidKeyNamesLength",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes2",
          "name": "expected",
          "type": "bytes2"
        },
        {
          "internalType": "ResourceId",
          "name": "resourceId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "resourceIdString",
          "type": "string"
        }
      ],
      "name": "Store_InvalidResourceType",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint40",
          "name": "startWithinField",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "deleteCount",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "fieldLength",
          "type": "uint40"
        }
      ],
      "name": "Store_InvalidSplice",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "received",
          "type": "uint256"
        }
      ],
      "name": "Store_InvalidValueSchemaLength",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "tableIdString",
          "type": "string"
        }
      ],
      "name": "Store_TableAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "tableIdString",
          "type": "string"
        }
      ],
      "name": "Store_TableNotFound",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "storeVersion",
          "type": "bytes32"
        }
      ],
      "name": "HelloStore",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        }
      ],
      "name": "Store_DeleteRecord",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        }
      ],
      "name": "Store_DeleteRecord",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "staticData",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "PackedCounter",
          "name": "encodedLengths",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "dynamicData",
          "type": "bytes"
        }
      ],
      "name": "Store_SetRecord",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "staticData",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "PackedCounter",
          "name": "encodedLengths",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "dynamicData",
          "type": "bytes"
        }
      ],
      "name": "Store_SetRecord",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "start",
          "type": "uint48"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "deleteCount",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "PackedCounter",
          "name": "encodedLengths",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Store_SpliceDynamicData",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "start",
          "type": "uint48"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "deleteCount",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "PackedCounter",
          "name": "encodedLengths",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Store_SpliceDynamicData",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "start",
          "type": "uint48"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Store_SpliceStaticData",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "start",
          "type": "uint48"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Store_SpliceStaticData",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        }
      ],
      "name": "deleteRecord",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "dynamicFieldIndex",
          "type": "uint8"
        }
      ],
      "name": "getDynamicField",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "dynamicFieldIndex",
          "type": "uint8"
        }
      ],
      "name": "getDynamicFieldLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "dynamicFieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        }
      ],
      "name": "getDynamicFieldSlice",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "fieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "FieldLayout",
          "name": "fieldLayout",
          "type": "bytes32"
        }
      ],
      "name": "getField",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "fieldIndex",
          "type": "uint8"
        }
      ],
      "name": "getField",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        }
      ],
      "name": "getFieldLayout",
      "outputs": [
        {
          "internalType": "FieldLayout",
          "name": "fieldLayout",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "fieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "FieldLayout",
          "name": "fieldLayout",
          "type": "bytes32"
        }
      ],
      "name": "getFieldLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "fieldIndex",
          "type": "uint8"
        }
      ],
      "name": "getFieldLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        }
      ],
      "name": "getKeySchema",
      "outputs": [
        {
          "internalType": "Schema",
          "name": "keySchema",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "FieldLayout",
          "name": "fieldLayout",
          "type": "bytes32"
        }
      ],
      "name": "getRecord",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "staticData",
          "type": "bytes"
        },
        {
          "internalType": "PackedCounter",
          "name": "encodedLengths",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "dynamicData",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        }
      ],
      "name": "getRecord",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "staticData",
          "type": "bytes"
        },
        {
          "internalType": "PackedCounter",
          "name": "encodedLengths",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "dynamicData",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "fieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "FieldLayout",
          "name": "fieldLayout",
          "type": "bytes32"
        }
      ],
      "name": "getStaticField",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "data",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        }
      ],
      "name": "getValueSchema",
      "outputs": [
        {
          "internalType": "Schema",
          "name": "valueSchema",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "dynamicFieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "byteLengthToPop",
          "type": "uint256"
        }
      ],
      "name": "popFromDynamicField",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "dynamicFieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "dataToPush",
          "type": "bytes"
        }
      ],
      "name": "pushToDynamicField",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "contract IStoreHook",
          "name": "hookAddress",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "enabledHooksBitmap",
          "type": "uint8"
        }
      ],
      "name": "registerStoreHook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "FieldLayout",
          "name": "fieldLayout",
          "type": "bytes32"
        },
        {
          "internalType": "Schema",
          "name": "keySchema",
          "type": "bytes32"
        },
        {
          "internalType": "Schema",
          "name": "valueSchema",
          "type": "bytes32"
        },
        {
          "internalType": "string[]",
          "name": "keyNames",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "fieldNames",
          "type": "string[]"
        }
      ],
      "name": "registerTable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "dynamicFieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "setDynamicField",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "fieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "setField",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "fieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "FieldLayout",
          "name": "fieldLayout",
          "type": "bytes32"
        }
      ],
      "name": "setField",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes",
          "name": "staticData",
          "type": "bytes"
        },
        {
          "internalType": "PackedCounter",
          "name": "encodedLengths",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "dynamicData",
          "type": "bytes"
        }
      ],
      "name": "setRecord",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "fieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "FieldLayout",
          "name": "fieldLayout",
          "type": "bytes32"
        }
      ],
      "name": "setStaticField",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "dynamicFieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "uint40",
          "name": "startWithinField",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "deleteCount",
          "type": "uint40"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "spliceDynamicData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint48",
          "name": "start",
          "type": "uint48"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "spliceStaticData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "storeVersion",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCompareSolidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDeleteExternalCold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDeleteInternalCold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testEncode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRegisterAndGetFieldLayout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRegisterAndGetSchema",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSetGetDeleteExternal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSetGetDeleteInternal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "contract IStoreHook",
          "name": "hookAddress",
          "type": "address"
        }
      ],
      "name": "unregisterStoreHook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff1991821681179092556004805490911690911790555a601c55348015630000003357600080fd5b50630000005c600080516020630000a02483398151915280546001600160a01b03191630179055565b6040516e0c4b8c0b8c0b5d5b985d591a5d1959608a1b907fc7f5fdc8526b76f54916701bc910876243ffff2a40b0bb8d59eea8151c52c00590600090a263000000c1600080516020630000a02483398151915280546001600160a01b03191630179055565b63000000cd63000000f7565b600080516020630000a02483398151915280546001600160a01b031916301790556300002532565b565b6300000103630000011b565b630000010f63000001ab565b63000000f56300000233565b60408051613a3160f11b60208201526473746f726560d81b6022820152655461626c657360d01b603082015263000000f59101604051602081830303815290604052630000016a9063000020bf565b6503001811010160cd1b630000018063000002bf565b630000018c630000034d565b630000019863000004ea565b63000001a46300000561565b6300000706565b60408051613a3160f11b60208201526473746f726560d81b60228201526953746f7265486f6f6b7360b01b603082015263000000f5910160405160208183030381529060405263000001fe9063000020bf565b600160e01b630000020f63000002bf565b630000021b63000007bb565b630000022763000004ea565b63000001a463000007fb565b60408051613a3160f11b60208201526473746f726560d81b60228201526a5265736f7572636549647360a81b603082015263000000f5910160405160208183030381529060405263000002879063000020bf565b630101000160d81b630000029b63000002bf565b63000002a76300000862565b63000002b363000008a2565b63000001a4630000090e565b60408051600180825281830190925260009182919060208083019080368337019050509050605f8160008151811063000002ff5763000002ff63000020e5565b602002602001019060c5811115630000031e57630000031e63000020fb565b908160c5811115630000033757630000033763000020fb565b9052506300000347816300000976565b91505090565b60408051600580825260c082019092526000918291906020820160a080368337019050509050605f81600081518110630000038e57630000038e63000020e5565b602002602001019060c581111563000003ad5763000003ad63000020fb565b908160c581111563000003c65763000003c663000020fb565b81525050605f8160018151811063000003e55763000003e563000020e5565b602002602001019060c5811115630000040457630000040463000020fb565b908160c5811115630000041d57630000041d63000020fb565b81525050605f81600281518110630000043c57630000043c63000020e5565b602002602001019060c5811115630000045b57630000045b63000020fb565b908160c5811115630000047457630000047463000020fb565b8152505060c481600381518110630000049357630000049363000020e5565b602002602001019060c581111563000004b25763000004b263000020fb565b908160c581111563000004cb5763000004cb63000020fb565b8152505060c48160048151811063000002ff5763000002ff63000020e5565b604080516001808252818301909252606091816020015b60608152602001906001900390816300000501579050509050604051806040016040528060078152602001661d18589b19525960ca1b81525081600081518110630000055357630000055363000020e5565b602002602001018190525090565b60408051600580825260c08201909252606091816020015b606081526020019060019003908163000005795790505090506040518060400160405280600b81526020016a199a595b1913185e5bdd5d60aa1b8152508160008151811063000005cf5763000005cf63000020e5565b6020026020010181905250604051806040016040528060098152602001686b6579536368656d6160b81b81525081600181518110630000061557630000061563000020e5565b60200260200101819052506040518060400160405280600b81526020016a76616c7565536368656d6160a81b81525081600281518110630000065d57630000065d63000020e5565b602002602001018190525060405180604001604052806012815260200171616269456e636f6465644b65794e616d657360701b8152508160038151811063000006ac5763000006ac63000020e5565b60200260200101819052506040518060400160405280601481526020017f616269456e636f6465644669656c644e616d657300000000000000000000000081525081600481518110630000055357630000055363000020e5565b600063000007146300000b73565b9050306001600160a01b03821603630000074157630000073a8787878787876300000ba4565b63000007b2565b604051630ba51f4960e01b81526001600160a01b03821690630ba51f4990630000077b908a908a908a908a908a908a9060040163000021c9565b600060405180830381600087803b158015630000079757600080fd5b505af115801563000007ad573d6000803e3d6000fd5b505050505b50505050505050565b6040805160018082528183019092526000918291906020808301908036833701905050905060b68160008151811063000002ff5763000002ff63000020e5565b604080516001808252818301909252606091816020015b6060815260200190600190039081630000081257905050905060405180604001604052806005815260200164686f6f6b7360d81b81525081600081518110630000055357630000055363000020e5565b6040805160018082528183019092526000918291906020808301908036833701905050905060608160008151811063000002ff5763000002ff63000020e5565b604080516001808252818301909252606091816020015b606081526020019060019003908163000008b95790505090506040518060400160405280600a8152602001691c995cdbdd5c98d9525960b21b81525081600081518110630000055357630000055363000020e5565b604080516001808252818301909252606091816020015b606081526020019060019003908163000009255790505090506040518060400160405280600681526020016565786973747360d01b81525081600081518110630000055357630000055363000020e5565b6000601c8251111563000009ad578151604051635318beb960e01b815260040163000009a491815260200190565b60405180910390fd5b60008080805b85518110156300000a955760006300000a0387838151811063000009dd5763000009dd63000020e5565b602002602001015160c581111563000009fc5763000009fc63000020fb565b6300000e0f565b9050806000036300000a1c576001909201916300000a3d565b82156300000a3d57604051633c795af960e21b815260040160405180910390fd5b80840193506008826004601f0303028783815181106300000a64576300000a6463000020e5565b602002602001015160c58111156300000a83576300000a8363000020fb565b901b94909417935060010163000009b3565b5060058111156300000abf57604051635318beb960e01b81526004810182905260240163000009a4565b845181900360086300000ad6600260206300002231565b6300000ae49190630000224a565b83901b9390931792600860016300000b00600260206300002231565b6300000b0e91906300002231565b6300000b1c9190630000224a565b81901b939093179260086001806300000b39600260206300002231565b6300000b4791906300002231565b6300000b5591906300002231565b6300000b639190630000224a565b9190911b92909217949350505050565b600080516020630000a024833981519152546000906001600160a01b0316806300000b9f573391505090565b919050565b613a3160f11b866001600160f01b031916148015906300000bd45750611bdd60f21b866001600160f01b03191614155b156300000c2457613a3160f11b86876040516020016300000bf791815260200190565b60408051601f19818403018152908290526331b4668360e01b825263000009a49392916004016300002267565b6300000c338560006300000e7f565b6300000c428460016300000fa9565b6300000c518360006300000fa9565b60e084901c60e885901c0160ff168251146300000c9c5760e084901c60e885901c0160ff1682516040516301ee597360e31b81526004810192909252602482015260440163000009a4565b60e085901c60e886901c0160ff168151146300000ce65760e085901c60e886901c0160ff168151604051621f7b1360ea1b81526004810192909252602482015260440163000009a4565b60e085901c60e886901c0160ff1660e084901c60e885901c0160ff16146300000d495760e085901c60e886901c0160ff1660e084901c60e885901c0160ff16604051631e53a9b160e31b81526004810192909252602482015260440163000009a4565b6300000d56866300001158565b156300000d9f5785866040516020016300000d7391815260200190565b60408051601f198184030181529082905263dfaaf9cf60e01b825263000009a492916004016300002291565b6300000df886868686866040516020016300000dbd919063000022ae565b604051602081830303815290604052866040516020016300000de1919063000022ae565b60408051601f19818403018152919052630000121c565b6300000e078660016300001325565b505050505050565b6000808260c58111156300000e2a576300000e2a63000020fb565b60ff16905060618110156300000e4657601f1660010192915050565b60618360c58111156300000e60576300000e6063000020fb565b036300000e705750601492915050565b50600092915050565b50919050565b801580156300000e8d575081155b156300000eb257604051634bf1b50560e11b81526000600482015260240163000009a4565b60006300000ec1836300001402565b905060058111156300000eec57604051634bf1b50560e11b81526004810182905260240163000009a4565b60006300000efb84630000144f565b905060006300000f0d838363000022c5565b9050601c8111156300000f3857604051634bf1b50560e11b81526004810182905260240163000009a4565b60005b828110156300000e075760006300000f5587836300001465565b9050806000036300000f7a5760405163bf1ac38360e01b815260040160405180910390fd5b60208111156300000f9e576040516308e4aea960e21b815260040160405180910390fd5b506001016300000f3b565b801580156300000fb7575081155b156300000fdc57604051635318beb960e01b81526000600482015260240163000009a4565b60006300000feb836300001402565b90506005811115630000101657604051635318beb960e01b81526004810182905260240163000009a4565b6000630000102584630000144f565b905060006300001037838363000022c5565b9050601c811115630000106257604051635318beb960e01b81526004810182905260240163000009a4565b60008060005b838110156300001109576000630000109e63000010878a84630000147a565b60c581111563000009fc5763000009fc63000020fb565b111563000010d55784811063000010c857604051633c795af960e21b815260040160405180910390fd5b60019092019163000010ff565b8481101563000010f857604051633c795af960e21b815260040160405180910390fd5b6001909101905b6001016300001068565b50838214630000113157604051635318beb960e01b81526004810183905260240163000009a4565b84811463000007b257604051635318beb960e01b81526004810182905260240163000009a4565b604080516001808252818301909252600091829190602080830190803683370190505090508281600081518110630000119757630000119763000020e5565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b60228201526a5265736f7572636549647360a81b60308201528151808203909301835281019052600090630000120c9063000011fa9063000020bf565b836000630101000160d81b63000014a8565b905060f881901c5b949350505050565b6040805160208101879052808201869052606080820186905282518083039091018152608090910190915260006300001257848463000014ec565b90506000630000126985856300001504565b6040805160018082528183019092529192506000919060208083019080368337019050509050898160008151811063000012a95763000012a963000020e5565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b6022820152655461626c657360d01b6030820152815180820390930183528101905263000013199063000013049063000020bf565b828686866503001811010160cd1b6300001534565b50505050505050505050565b604080516001808252818301909252600091602080830190803683370190505090508281600081518110630000136157630000136163000020e5565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b60228201526a5265736f7572636549647360a81b6030820152815180820390930183528101905263000013fd9063000013c19063000020bf565b8260008560405160200163000013de91151560f81b815260010190565b60408051601f19818403018152919052630101000160d81b6300001835565b505050565b600060086001806300001419600260206300002231565b630000142791906300002231565b630000143591906300002231565b63000014439190630000224a565b8260ff911c1692915050565b6000600860016300001427600260206300002231565b601b81900360080282901c60ff165b92915050565b6000601b8290036008028360ff911c1660c581111563000014a15763000014a163000020fb565b9392505050565b600063000014e363000014bd86866300001859565b63000014ce8460ff87166300001465565b63000014dc858763000018b3565b6300001903565b95945050505050565b600063000014a183518351630000195e60201b60201c565b60608282604051602001630000151d92919063000022de565b604051602081830303815290604052905092915050565b857f8dbb3a9672eebfd3773e72dd9c102393436816d832c7ba9e1e1ac8fcadcac7a986868686604051630000156e94939291906300002354565b60405180910390a2613a3160f11b866001600160f01b031916036300000e07576000630000159d876300001973565b905060005b8151811015630000167957600082828151811063000015c75763000015c763000020e5565b6020908102919091010151905063000015ed6001600160581b0319821660016300001a44565b156300001660576040516315c19b2760e21b8152606082901c906357066c9c906300001629908c908c908c908c908c908c9060040163000023aa565b600060405180830381600087803b158015630000164557600080fd5b505af1158015630000165b573d6000803e3d6000fd5b505050505b5080630000166f81630000240f565b91505063000015a2565b506000630000168a88886300001859565b9050600060208701905063000016ac826000838a516300001a6460201b60201c565b600063000016bb856300001402565b1115630000175b57600063000016d38a8a6300001b38565b878155905060208601915060008060005b63000016f1886300001402565b8160ff161015630000175657630000170c8d8d836300001b92565b925063000017298a8260ff166028026038011c64ffffffffff1690565b9150630000173c83600087856300001a64565b630000174a828663000022c5565b945060010163000016e4565b505050505b60005b83518110156300001319576000848281518110630000178357630000178363000020e5565b6020908102919091010151905063000017a96001600160581b0319821660026300001a44565b15630000181c57604051635b28cdaf60e01b8152606082901c90635b28cdaf9063000017e5908e908e908e908e908e908e9060040163000023aa565b600060405180830381600087803b158015630000180157600080fd5b505af11580156300001817573d6000803e3d6000fd5b505050505b5080630000182b81630000240f565b915050630000175e565b63000018528585630000184a848763000018b3565b856300001bfe565b5050505050565b600082826040516020016300001872929190630000242e565b60408051601f1981840301815291905280516020909101207f86425bff6b57326c7859e89024fe4f238ca327a1ae4a230180dd2f0e88aaa7d9189392505050565b600080805b8360ff1681101563000018fb5763000018d385826300001465565b63000018e1908363000022c5565b91508063000018f181630000240f565b91505063000018b8565b509392505050565b600060208210630000193157602082048401935060208281630000192d57630000192d630000246d565b0691505b508254600882021b60208290038084111563000018fb576001850154600882021c82179150509392505050565b606081901b603883901b838301171792915050565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811063000019b35763000019b363000020e5565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b60228201526953746f7265486f6f6b7360b01b603082015281518082039093018352810190526000906300001a1f906300001a159063000020bf565b8360006300001e45565b905063000012146300001a3d82600084516300001e8d60201b60201c565b6300001f0b565b600060ff8216826300001a578560581c90565b1660ff1614905092915050565b82156300001aee57602083106300001a98576020830484019350602083816300001a94576300001a94630000246d565b0692505b82156300001aee5760208390036000600019600884021c1990506008850281811c91508451811c90508119875416828216178755508183116300001adf5750506300001b32565b50600194909401939182019190035b5b602081106300001b145781518455600190930192602090910190601f19016300001aef565b80156300001b325783548251600019600884021c9182169119161784555b50505050565b600082826040516020016300001b51929190630000242e565b60408051601f1981840301815291905280516020909101207f14e2fcc58e58e68ec7edc30c8d50dccc3ce2714a623ec81f46b6a63922d76569189392505050565b600083836040516020016300001bab929190630000242e565b604051602081830303815290604052805190602001208260f81b6001600160f81b0319167f3b4102da22e32d82fc925482184f16c09fd4281692720b87d124aef6da48a0f1181860001c90509392505050565b60006300001c0e85856300001859565b9050847f8c0b5119d4cec7b284c6b1b39252a03d1e2f2d7451a5895562524c113bb952be8585856040516300001c48939291906300002483565b60405180910390a2613a3160f11b856001600160f01b031916146300001c7057506300001b32565b60006300001c7f866300001973565b905060005b81518110156300001d575760008282815181106300001ca9576300001ca963000020e5565b602090810291909101015190506300001ccf6001600160581b0319821660046300001a44565b156300001d3e5760405163964f667d60e01b8152606082901c9063964f667d906300001d07908b908b908b908b9060040163000024c8565b600060405180830381600087803b1580156300001d2357600080fd5b505af11580156300001d39573d6000803e3d6000fd5b505050505b50806300001d4d81630000240f565b9150506300001c84565b506300001d6f8265ffffffffffff8616856300001f1f565b60005b815181101563000007b25760008282815181106300001d97576300001d9763000020e5565b602090810291909101015190506300001dbd6001600160581b0319821660086300001a44565b156300001e2c5760405163a8ba872160e01b8152606082901c9063a8ba8721906300001df5908b908b908b908b9060040163000024c8565b600060405180830381600087803b1580156300001e1157600080fd5b505af11580156300001e27573d6000803e3d6000fd5b505050505b50806300001e3b81630000240f565b9150506300001d72565b606063000012146300001e5b8585856300001b92565b6300001e84846300001e6f88886300001f33565b9060ff166028026038011c64ffffffffff1690565b60006300001f4c565b60008183111580156300001ea2575083518211155b6300001ecb578383836040516323230fa360e01b815260040163000009a4939291906300002509565b602084016300001edd848263000022c5565b905060006300001eef85856300002231565b6001600160801b031660809290921b9190911795945050505050565b6060600063000014a1836015836300001f73565b63000013fd83836020840184516300001a64565b600063000014a16300001f4884846300001b38565b5490565b60405160208101601f19603f858401011660405283825263000018fb858585846300001ff1565b606060006300001f838560801c90565b90506001600160801b03851660008582816300001fa6576300001fa6630000246d565b04905060405193506020840160208202810160405281855260005b828110156300001fe5578451871c8252938701936020909101906001016300001fc1565b50505050509392505050565b8115630000207357602082106300002025576020820484019350602082816300002021576300002021630000246d565b0691505b811563000020735760208290036000600019600883021c1990508554600885021b81198451168282161784525081851163000020645750506300001b32565b50600194909401939283900392015b5b6020831063000020995783548152600190930192601f19909201916020016300002074565b82156300001b32576000600019600885021c198251865482169119161782525050505050565b805160208083015191908110156300000e795760001960209190910360031b1b16919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b60005b8381101563000021305781810151838201526020016300002114565b50506000910152565b6000815180845263000021558160208601602086016300002111565b601f01601f19169290920160200192915050565b600082825180855260208086019550808260051b84010181860160005b8481101563000021bc57601f1986840301895263000021a88383516300002139565b988401989250908301906001016300002186565b5090979650505050505050565b86815285602082015284604082015283606082015260c06080820152600063000021f860c08301856300002169565b82810360a0840152630000220e81856300002169565b9998505050505050505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156300001474576300001474630000221b565b80820281158282048414176300001474576300001474630000221b565b61ffff60f01b8416815282602082015260606040820152600063000014e360608301846300002139565b828152604060208201526000630000121460408301846300002139565b60208152600063000014a160208301846300002169565b808201808211156300001474576300001474630000221b565b6000835163000022f48184602088016300002111565b835190830190630000230c8183602088016300002111565b01949350505050565b600081518084526020808501945080840160005b838110156300002349578151875295820195908201906001016300002329565b509495945050505050565b608081526000630000236b60808301876300002315565b8281036020840152630000238181876300002139565b90508460408401528281036060840152630000239f81856300002139565b979650505050505050565b86815260c06020820152600063000023c760c08301886300002315565b828103604084015263000023dd81886300002139565b9050856060840152828103608084015263000023fb81866300002139565b9150508260a0830152979650505050505050565b6000600182016300002427576300002427630000221b565b5060010190565b82815260006020808301845182860160005b828110156300002460578151845292840192908401906001016300002440565b5091979650505050505050565b634e487b7160e01b600052601260045260246000fd5b606081526000630000249a60608301866300002315565b65ffffffffffff85166020840152828103604084015263000024be81856300002139565b9695505050505050565b84815260806020820152600063000024e560808301866300002315565b65ffffffffffff851660408401528281036060840152630000239f81856300002139565b606081526000630000252060608301866300002139565b60208301949094525060400152919050565b617ae18063000025436000396000f3fe608060405234801561001057600080fd5b506004361061030a5760003560e01c806366d9a9a01161019c578063c1122229116100ee578063dbbf0e2111610097578063ef6ea86211610071578063ef6ea862146105f1578063fa7626d414610604578063fc9cc7591461061157600080fd5b8063dbbf0e2114610503578063e20c9f71146105d6578063e228a4a3146105de57600080fd5b8063d03edb8c116100c8578063d03edb8c1461059d578063d4285dc2146105b0578063d9c03a04146105c357600080fd5b8063c11222291461055c578063c290114c14610582578063cc49db7e1461058a57600080fd5b80639f1fcf0a11610150578063b5508aa91161012a578063b5508aa914610529578063ba414fa614610531578063c0a2895a1461054957600080fd5b80639f1fcf0a146104f0578063a53417ed14610503578063b047c1eb1461051657600080fd5b806385226c811161018157806385226c81146104c05780638c364d59146104d5578063916a17c6146104e857600080fd5b806366d9a9a0146104a357806372663d8c146104b857600080fd5b80633708196e11610260578063419b58fd116102095780634dc77d97116101e35780634dc77d971461046a578063505a181d1461047d578063530f4b601461049057600080fd5b8063419b58fd1461043857806342011ac91461045a5780634c4cb8151461046257600080fd5b80633b3100151161023a5780633b310015146104205780633e5e3c23146104285780633f7286f41461043057600080fd5b80633708196e146103d9578063390baae0146103ec5780633a77c2c2146103ff57600080fd5b8063114a7266116102c25780631ed7831c1161029c5780631ed7831c146103a9578063298314fb146103be57806334cab085146103d157600080fd5b8063114a726614610370578063150f3262146103835780631e7889771461039657600080fd5b80630a028481116102f35780630a0284811461034d5780630a9254e4146103555780630ba51f491461035d57600080fd5b806305242d2f1461030f5780630560912914610338575b600080fd5b61032261031d3660046162f0565b610619565b60405161032f91906163a6565b60405180910390f35b61034b6103463660046163d0565b610666565b005b61034b610674565b61034b610725565b61034b61036b3660046163fc565b610814565b61034b61037e3660046164d4565b61083e565b61034b6103913660046164d4565b6108b9565b6103226103a4366004616561565b61092c565b6103b1610976565b60405161032f91906165bf565b61034b6103cc36600461660c565b6109d8565b61034b610a7f565b61034b6103e73660046166a5565b610ca2565b61034b6103fa3660046166a5565b610d20565b61041261040d36600461673b565b610d95565b60405190815260200161032f565b61034b610da6565b6103b1610f91565b6103b1610ff1565b61044b610446366004616754565b611051565b60405161032f939291906167a7565b61034b6110a6565b61034b611203565b6103226104783660046168a8565b611396565b61034b61048b366004616911565b6113a5565b61034b61049e366004616958565b6113af565b6104ab6113ba565b60405161032f9190616994565b61034b6114be565b6104c8611515565b60405161032f9190616a5f565b6104126104e33660046162f0565b6115e5565b6104ab611628565b6104126104fe366004616ac1565b611723565b610412610511366004616b20565b611739565b61034b610524366004616b6e565b611750565b6104c86117c3565b610539611893565b604051901515815260200161032f565b61034b610557366004616bfd565b6119d5565b7f312e302e302d756e617564697465640000000000000000000000000000000000610412565b61034b611a4b565b61044b610598366004616c8a565b611aa7565b6103226105ab366004616561565b611afa565b6104126105be36600461673b565b611b3b565b61034b6105d13660046162f0565b611b46565b6103b1611b87565b6104126105ec36600461673b565b611be7565b61034b6105ff3660046164d4565b611bf2565b6000546105399060ff1681565b61034b611c65565b606061065c86868680806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250889250879150611cb49050565b9695505050505050565b6106708282611cf9565b5050565b60408051613a3160f11b60208201526473746f726560d81b602282015264135a5e195960da1b60308201526000916106c491016040516020818303038152906040526106bf90616cd6565b611d60565b9050600064014020204160d41b5b9050610670826040516020016106ea91815260200190565b60408051601f198184030181528282528051602091820120908301859052910160405160208183030381529060405280519060200120611e30565b61072d611f3a565b6040805160028082526060820183527fd996e8ae0fc1474ddf341dd3c0d7079328d4828516e443b1328aa5cab5740b2b92600092919060208301908036833701905050905060038160008151811061078757610787616cfa565b602002602001019063ffffffff16908163ffffffff16815250506004816001815181106107b6576107b6616cfa565b63ffffffff90921660209283029190910182015260408051808201909152601a81527f4c6f72656d20697073756d20646f6c6f722073697420616d65740000000000009181019190915261080f83600160028585611fad565b505050565b61083488888888610825888a616d38565b61082f8789616d38565b612077565b5050505050505050565b6108b18686868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f89018190048102820181019092528781528993509150879087908190840183828082843760009201919091525061236d92505050565b505050505050565b6108b18686868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f89018190048102820181019092528781528993509150879087908190840183828082843760009201919091525061238292505050565b606061096d858585808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508792506123bd915050565b95945050505050565b6060600d8054806020026020016040519081016040528092919081815260200182805480156109ce57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116109b0575b5050505050905090565b6108348888888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a915089908190840183828082843760009201919091525050604080516020601f8a018190048102820181019092528881528a9350915088908890819084018382808284376000920191909152506123f792505050565b6040805160028082526060820183527ffb6245aca5d4521d3861a1f459d2c5321703a5f29237f738065baac9681f586b926000929190602083019080368337019050509050600381600081518110610ad957610ad9616cfa565b602002602001019063ffffffff16908163ffffffff1681525050600481600181518110610b0857610b08616cfa565b602002602001019063ffffffff16908163ffffffff168152505060006040518060400160405280600b81526020017f736f6d6520737472696e670000000000000000000000000000000000000000008152509050610b7d604051806060016040528060248152602001617a886024913961240d565b610b8c836001600285856126c0565b610b94612788565b610bb560405180606001604052806026815260200161796e6026913961240d565b6000610bc0846129fc565b9050610bca612788565b8051610bdd9063ffffffff166001612ad1565b610bfe81602001516fffffffffffffffffffffffffffffffff166002612ad1565b610c2d8160400151600081518110610c1857610c18616cfa565b602002602001015163ffffffff166003612ad1565b610c5c8160400151600181518110610c4757610c47616cfa565b602002602001015163ffffffff166004612ad1565b610c6a816060015183612bcb565b610c8b604051806060016040528060298152602001617aac6029913961240d565b610c9484612d11565b610c9c612788565b50505050565b610d178787878080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f8a018190048102820181019092528881528a935091508890889081908401838280828437600092019190915250889250612daa915050565b50505050505050565b610d178787878080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f8a018190048102820181019092528881528a935091508890889081908401838280828437600092019190915250889250612ded915050565b6000610da082611d60565b92915050565b6040805160028082526060820183527ffb6245aca5d4521d3861a1f459d2c5321703a5f29237f738065baac9681f586b926000929190602083019080368337019050509050600381600081518110610e0057610e00616cfa565b602002602001019063ffffffff16908163ffffffff1681525050600481600181518110610e2f57610e2f616cfa565b602002602001019063ffffffff16908163ffffffff168152505060006040518060400160405280600b81526020017f736f6d6520737472696e670000000000000000000000000000000000000000008152509050610ea4604051806060016040528060248152602001617a3e6024913961240d565b610eb383600160028585611fad565b610ebb612788565b610edc604051806060016040528060268152602001617a626026913961240d565b6000610ee784612e02565b9050610ef1612788565b8051610f049063ffffffff166001612ad1565b610f2581602001516fffffffffffffffffffffffffffffffff166002612ad1565b610f3f8160400151600081518110610c1857610c18616cfa565b610f598160400151600181518110610c4757610c47616cfa565b610f67816060015183612bcb565b610f886040518060600160405280602981526020016179bd6029913961240d565b610c9484612ec6565b6060600f8054806020026020016040519081016040528092919081815260200182805480156109ce576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116109b0575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156109ce576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116109b0575050505050905090565b60606000606061109687878780806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250899250612f56915050565b9250925092509450945094915050565b6040805160028082526060820183526000926020830190803683370190505090506003816000815181106110dc576110dc616cfa565b602002602001019063ffffffff16908163ffffffff168152505060048160018151811061110b5761110b616cfa565b63ffffffff90921660209283029190910182015260408051808201909152600b81527f736f6d6520737472696e67000000000000000000000000000000000000000000918101919091526000808061116760016002878761305e565b9250925092506111a9836040518060400160405280601481526020017c010000000000000000000000000000000200000000000000000000000081525061309d565b6111c0826c0b000000000800000000000013611e30565b6111fc816040518060400160405280601381526020017c0300000004736f6d6520737472696e670000000000000000000000000081525061309d565b5050505050565b604080516080810182526001815260026020820181905282518181526060810184526000938301918160200160208202803683370190505081526020016040518060400160405280600b81526020017f736f6d6520737472696e6700000000000000000000000000000000000000000081525081525090506003816040015160008151811061129457611294616cfa565b602002602001019063ffffffff16908163ffffffff1681525050600481604001516001815181106112c7576112c7616cfa565b602002602001019063ffffffff16908163ffffffff16815250506113026040518060600160405280602f81526020016179e6602f913961240d565b8051601f80546020808501516fffffffffffffffffffffffffffffffff16640100000000027fffffffffffffffffffffffff000000000000000000000000000000000000000090921663ffffffff90941693909317178155604083015180518493611372929091908201906161d8565b50606082015160028201906113879082616e62565b50905050611393612788565b50565b606061065c86868686866130a7565b610670828261316d565b61080f838383613180565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156114b55760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561149d57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841161144a5790505b505050505081525050815260200190600101906113de565b50505050905090565b60007fd996e8ae0fc1474ddf341dd3c0d7079328d4828516e443b1328aa5cab5740b2b90506115046040518060600160405280602981526020016179946029913961240d565b61150d81612d11565b611393612788565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156114b557838290600052602060002001805461155890616de8565b80601f016020809104026020016040519081016040528092919081815260200182805461158490616de8565b80156115d15780601f106115a6576101008083540402835291602001916115d1565b820191906000526020600020905b8154815290600101906020018083116115b457829003601f168201915b505050505081526020019060010190611539565b600061065c8686868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525088925087915061320c9050565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156114b55760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561170b57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116116b85790505b5050505050815250508152602001906001019061164c565b600061096d85858585613239565b949350505050565b6000611746848484613281565b90505b9392505050565b6108b18686868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f89018190048102820181019092528781528993509150879087908190840183828082843760009201919091525061329792505050565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156114b557838290600052602060002001805461180690616de8565b80601f016020809104026020016040519081016040528092919081815260200182805461183290616de8565b801561187f5780601f106118545761010080835404028352916020019161187f565b820191906000526020600020905b81548152906001019060200180831161186257829003601f168201915b5050505050815260200190600101906117e7565b60008054610100900460ff16156118b35750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156119d05760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c6564000000000000000000000000000000000000000000000000000082840152825180830384018152606083019093526000929091611958917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001616f22565b60408051601f198184030181529082905261197291616f6a565b6000604051808303816000865af19150503d80600081146119af576040519150601f19603f3d011682016040523d82523d6000602084013e6119b4565b606091505b50915050808060200190518101906119cc9190616f86565b9150505b919050565b6108348888888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f89018190048102820181019092528781528b93508a9250899189908990819084018382808284376000920191909152506134f092505050565b60408051613a3160f11b60208201526473746f726560d81b602282015264135a5e195960da1b6030820152600091611a9b9101604051602081830303815290604052611a9690616cd6565b613508565b905060006106d261356f565b606060006060611aea868686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506136b792505050565b9250925092505b93509350939050565b606061096d858585808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508792506136dd915050565b6000610da0826136f3565b6111fc858585808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508792508691506137219050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156109ce576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116109b0575050505050905090565b6000610da082613508565b6108b18686868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020601f89018190048102820181019092528781528993509150879087908190840183828082843760009201919091525061377a92505050565b60007fd996e8ae0fc1474ddf341dd3c0d7079328d4828516e443b1328aa5cab5740b2b9050611cab604051806060016040528060298152602001617a156029913961240d565b61150d81612ec6565b6060611cbf826137b5565b8360ff161015611cdc57611cd5858585856137e7565b9050611731565b611cd58585611cea856137b5565b611cf49087616fbe565b6123bd565b60408051613a3160f11b60208201526473746f726560d81b60228201527f53746f7265486f6f6b730000000000000000000000000000000000000000000060308201526106709101604051602081830303815290604052611d5990616cd6565b8383613814565b60408051613a3160f11b60208201526473746f726560d81b6022820152655461626c657360d01b603082015260009101604051602081830303815290604052611da890616cd6565b8203611dd457507e60030220202000000000000000000000000000000000000000000000000000919050565b60408051613a3160f11b60208201526473746f726560d81b6022820152655461626c657360d01b6030820152610da091611e279101604051602081830303815290604052611e2190616cd6565b8461393b565b60206000613994565b808214610670577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051611ebc9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b62797460408201527f657333325d000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f9982604051611ef39190616fd7565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f9981604051611f2a9190617022565b60405180910390a16106706139e6565b60408051613a3160f11b60208201526473746f726560d81b602282015264135a5e195960da1b6030820152611fab9101604051602081830303815290604052611f8290616cd6565b64014020204160d41b611f93613b26565b611f9b61356f565b611fa3613b60565b61082f613be5565b565b6000611fb98585613d59565b90506000611fc78484613dd2565b90506000611fd58585613df2565b6040805160018082528183019092529192506000919060208083019080368337019050509050888160008151811061200f5761200f616cfa565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b602282015264135a5e195960da1b6030820152815180820390930183528101905261206c9061206390616cd6565b82868686613e0f565b505050505050505050565b613a3160f11b867fffff00000000000000000000000000000000000000000000000000000000000016148015906120f057507f6f74000000000000000000000000000000000000000000000000000000000000867fffff0000000000000000000000000000000000000000000000000000000000001614155b1561215a57613a3160f11b868760405160200161210f91815260200190565b60408051601f19818403018152908290527f31b4668300000000000000000000000000000000000000000000000000000000825261215193929160040161705f565b60405180910390fd5b612165856000613ec4565b612170846001614046565b61217b836000614046565b60e084901c60e885901c0160ff168251146121db5760e084901c60e885901c0160ff1682516040517f0f72cb9800000000000000000000000000000000000000000000000000000000815260048101929092526024820152604401612151565b60e085901c60e886901c0160ff1681511461223b5760e085901c60e886901c0160ff1681516040517f7dec4c0000000000000000000000000000000000000000000000000000000000815260048101929092526024820152604401612151565b60e085901c60e886901c0160ff1660e084901c60e885901c0160ff16146122b35760e085901c60e886901c0160ff1660e084901c60e885901c0160ff166040517ff29d4d8800000000000000000000000000000000000000000000000000000000815260048101929092526024820152604401612151565b6122bc866141f2565b156123165785866040516020016122d591815260200190565b60408051601f19818403018152908290527fdfaaf9cf00000000000000000000000000000000000000000000000000000000825261215192916004016170a0565b612362868686868660405160200161232e9190616a5f565b6040516020818303038152906040528660405160200161234e9190616a5f565b6040516020818303038152906040526142ce565b6108b18660016143cb565b610c9c8484848461237d89611d60565b612daa565b600061238e85856144bd565b905060006123ab828560ff166028026038011c64ffffffffff1690565b90506108b186868684600088886144d0565b60606117466123cd8585856148a4565b6123f0846123db88886144bd565b9060ff166028026038011c64ffffffffff1690565b6000614924565b6111fc85858585856124088b611d60565b614947565b604080517f4777f3cf0000000000000000000000000000000000000000000000000000000081526004810191909152601460448201527f4741535f5245504f525445525f454e41424c4544000000000000000000000000606482015260006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90634777f3cf906084016020604051808303816000875af11580156124ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124d29190616f86565b6124d95750565b601b80546124e690616de8565b9050600014601b6040516020016124fd919061714a565b60405160208183030381529060405290612544576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161215191906163a6565b50601d816040516125559190616f6a565b9081526020016040518091039020546000148160405160200161257891906171cf565b604051602081830303815290604052906125bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161215191906163a6565b50601b6125cc8282616e62565b507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d1a5b36f6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561262b57600080fd5b505af115801561263f573d6000803e3d6000fd5b505050505a601c55604080517f2bcd50e00000000000000000000000000000000000000000000000000000000081529051737109709ecfa91a80626ff3989d68f67f5b1dd12d91632bcd50e091600480830192600092919082900301818387803b1580156126ac57600080fd5b505af11580156111fc573d6000803e3d6000fd5b60006126cc8585613d59565b905060006126da8484613dd2565b905060006126e88585613df2565b6040805160018082528183019092529192506000919060208083019080368337019050509050888160008151811061272257612722616cfa565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b602282015264135a5e195960da1b6030820152815180820390930183528101905261206c9061277690616cd6565b8286868664014020204160d41b614947565b60005a604080517f4777f3cf0000000000000000000000000000000000000000000000000000000081526004810191909152601460448201527f4741535f5245504f525445525f454e41424c4544000000000000000000000000606482015260006024820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d90634777f3cf906084016020604051808303816000875af115801561282f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128539190616f86565b61285a5750565b600060a082601c5461286c919061723b565b612876919061723b565b61288190600161724e565b9050600081116128ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f676173207265706f7274206469646e27742075736520676173000000000000006044820152606401612151565b80601d601b6040516128ff9190617261565b90815260405190819003602001902055601e80546001810182556000919091527f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e3500161294c601b8261726d565b506129e0601b805461295d90616de8565b80601f016020809104026020016040519081016040528092919081815260200182805461298990616de8565b80156129d65780601f106129ab576101008083540402835291602001916129d6565b820191906000526020600020905b8154815290600101906020018083116129b957829003601f168201915b5050505050614c36565b604080516020810190915260008152601b9061080f9082616e62565b604080516080810182526000808252602082018190526060828401819052808301528251600180825281850190945291929091908160200160208202803683370190505090508281600081518110612a5657612a56616cfa565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b602282015264135a5e195960da1b6030820152815180820390930183528101905260009081908190612ac090612ab190616cd6565b8564014020204160d41b612f56565b92509250925061065c838383614d2f565b808214610670577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051612b5d9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e60408201527f745d000000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a882604051612b949190616fd7565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051611f2a9190617022565b80604051602001612bdc9190616f6a565b6040516020818303038152906040528051906020012082604051602001612c039190616f6a565b6040516020818303038152906040528051906020012014610670577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051612ca39060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b73747260408201527f696e675d00000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358382604051612cda9190617340565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051611f2a919061738f565b604080516001808252818301909252600091602080830190803683370190505090508181600081518110612d4757612d47616cfa565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b602282015264135a5e195960da1b6030820152815180820390930183528101905261067090612d9b90616cd6565b8264014020204160d41b614dab565b612db3816137b5565b8360ff161015612dcf57612dca8585858585612ded565b6111fc565b6111fc8585612ddd846137b5565b612de79087616fbe565b8561377a565b6111fc8585612dfc848761506b565b85613297565b604080516080810182526000808252602082018190526060828401819052808301528251600180825281850190945291929091908160200160208202803683370190505090508281600081518110612e5c57612e5c616cfa565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b602282015264135a5e195960da1b6030820152815180820390930183528101905260009081908190612ac090612eb790616cd6565b8564014020204160d41b6150a6565b604080516001808252818301909252600091602080830190803683370190505090508181600081518110612efc57612efc616cfa565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b602282015264135a5e195960da1b6030820152815180820390930183528101905261067090612f5090616cd6565b8261516d565b6060600060606000612f6785615208565b9050612f7487878361522b565b93506000612f8186615264565b9050801561305357612f9388886144bd565b935066ffffffffffffff841667ffffffffffffffff811115612fb757612fb76167d2565b6040519080825280601f01601f191660200182016040528015612fe1576020820181803683370190505b5092506020830160005b828160ff1610156130505760006130038b8b846148a4565b90506000613020888460ff166028026038011c64ffffffffff1690565b905061302f8282600087615281565b613039818561724e565b935050508080613048906173cc565b915050612feb565b50505b505093509350939050565b60606000606060006130708888613d59565b9050600061307e8787613dd2565b9050600061308c8888613df2565b929a91995091975095505050505050565b6106708282615339565b606060006130b587876144bd565b905060006130d2828760ff166028026038011c64ffffffffff1690565b905080851015806130e257508084115b1561313d578081861015613100576130fb60018661723b565b613102565b855b6040517f7e8578d300000000000000000000000000000000000000000000000000000000815260048101929092526024820152604401612151565b600061314a8989896148a4565b90506131608161315a888861723b565b88614924565b9998505050505050505050565b610670828261317b85611d60565b614dab565b613a3160f11b837fffff00000000000000000000000000000000000000000000000000000000000016146131c857613a3160f11b838460405160200161210f91815260200190565b61080f837fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606085901b166bff0000000000000000000000605885901b161761543a565b600061096d61321b8686615523565b60ff858116601b0360080285901c16613234858761506b565b613994565b600080613245836137b5565b90508060ff168460ff16101561326d5760ff848116601b0360080284901c165b915050611731565b613265868661327c8488616fbe565b615538565b600061174684848461329288611d60565b613239565b60006132a38585615523565b9050847f8c0b5119d4cec7b284c6b1b39252a03d1e2f2d7451a5895562524c113bb952be8585856040516132d993929190617426565b60405180910390a2613a3160f11b857fffff00000000000000000000000000000000000000000000000000000000000016146133155750610c9c565b600061332086615548565b905060005b81518110156133ff57600082828151811061334257613342616cfa565b6020026020010151905061336e6004826affffffffffffffffffffff191661561090919063ffffffff16565b156133ec576040517f964f667d000000000000000000000000000000000000000000000000000000008152606082901c9063964f667d906133b9908b908b908b908b90600401617459565b600060405180830381600087803b1580156133d357600080fd5b505af11580156133e7573d6000803e3d6000fd5b505050505b50806133f78161749d565b915050613325565b50613413828565ffffffffffff168561562e565b60005b8151811015610d1757600082828151811061343357613433616cfa565b6020026020010151905061345f6008826affffffffffffffffffffff191661561090919063ffffffff16565b156134dd576040517fa8ba8721000000000000000000000000000000000000000000000000000000008152606082901c9063a8ba8721906134aa908b908b908b908b90600401617459565b600060405180830381600087803b1580156134c457600080fd5b505af11580156134d8573d6000803e3d6000fd5b505050505b50806134e88161749d565b915050613416565b6108b18686868686866135038d8d6144bd565b6144d0565b60006135138261563e565b9050806119d057818260405160200161352e91815260200190565b60408051601f19818403018152908290527f41e713ad00000000000000000000000000000000000000000000000000000000825261215192916004016170a0565b60408051600480825260a08201909252600091829190602082016080803683370190505090506003816000815181106135aa576135aa616cfa565b602002602001019060c58111156135c3576135c36174b7565b908160c58111156135d6576135d66174b7565b81525050600f816001815181106135ef576135ef616cfa565b602002602001019060c5811115613608576136086174b7565b908160c581111561361b5761361b6174b7565b8152505060658160028151811061363457613634616cfa565b602002602001019060c581111561364d5761364d6174b7565b908160c5811115613660576136606174b7565b8152505060c58160038151811061367957613679616cfa565b602002602001019060c5811115613692576136926174b7565b908160c58111156136a5576136a56174b7565b9052506136b1816156f7565b91505090565b6060600060606136d085856136cb88611d60565b612f56565b9250925092509250925092565b60606117468484846136ee88611d60565b611cb4565b60006136fe826158ad565b9050613709826141f2565b6119d057818260405160200161352e91815260200190565b600061372d85856144bd565b9050600061374a828560ff166028026038011c64ffffffffff1690565b90506108b18686866137638764ffffffffff871661723b565b6040805160008152602081019091528890886144d0565b600061378685856144bd565b905060006137a3828560ff166028026038011c64ffffffffff1690565b90506108b186868660008588886144d0565b6000600860016137c76002602061723b565b6137d1919061723b565b6137db91906174cd565b8260ff911c1692915050565b606061096d6137f68686615523565b60ff858116601b0360080285901c1661380f858761506b565b614924565b60006138208484615966565b90506000815167ffffffffffffffff81111561383e5761383e6167d2565b604051908082528060200260200182016040528015613867578160200160208202803683370190505b5090506000805b835181101561392c57846001600160a01b03166138b285838151811061389657613896616cfa565b60200260200101516affffffffffffffffffffff191660601c90565b6001600160a01b031614613924578381815181106138d2576138d2616cfa565b60200260200101518383815181106138ec576138ec616cfa565b7fffffffffffffffffffffffffffffffffffffffffff0000000000000000000000909216602092830291909101909101526001909101905b60010161386e565b508082526108b18686846159cc565b60408051602081018490529081018290526000906060015b60408051601f1981840301815291905280516020909101207f86425bff6b57326c7859e89024fe4f238ca327a1ae4a230180dd2f0e88aaa7d9189392505050565b6000602082106139ba576020820484019350602082816139b6576139b66174e4565b0691505b508254600882021b6020829003808411156139de576001850154600882021c821791505b509392505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15613af85760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000009282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052613a979291602001616f22565b60408051601f1981840301815290829052613ab191616f6a565b6000604051808303816000865af19150503d8060008114613aee576040519150601f19603f3d011682016040523d82523d6000602084013e613af3565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b60408051600180825281830190925260009182919060208083019080368337019050509050605f8160008151811061367957613679616cfa565b604080516001808252818301909252606091816020015b6060815260200190600190039081613b775790505090506040518060400160405280600381526020017f6b6579000000000000000000000000000000000000000000000000000000000081525081600081518110613bd757613bd7616cfa565b602002602001018190525090565b60408051600480825260a08201909252606091816020015b6060815260200190600190039081613bfd5790505090506040518060400160405280600381526020017f753332000000000000000000000000000000000000000000000000000000000081525081600081518110613c5d57613c5d616cfa565b60200260200101819052506040518060400160405280600481526020017f753132380000000000000000000000000000000000000000000000000000000081525081600181518110613cb157613cb1616cfa565b60200260200101819052506040518060400160405280600381526020017f613332000000000000000000000000000000000000000000000000000000000081525081600281518110613d0557613d05616cfa565b60200260200101819052506040518060400160405280600181526020017f730000000000000000000000000000000000000000000000000000000000000081525081600381518110613bd757613bd7616cfa565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1660208201527fffffffffffffffffffffffffffffffff00000000000000000000000000000000608083901b1660248201526060906034015b604051602081830303815290604052905092915050565b8151815160009160040281810160389190911b1760609190911b17611749565b6060613dfd83615a23565b82604051602001613dbb9291906174fa565b6000613e19615a33565b9050306001600160a01b03821603613e3d57613e3886868686866123f7565b6108b1565b6040517f298314fb0000000000000000000000000000000000000000000000000000000081526001600160a01b0382169063298314fb90613e8a9089908990899089908990600401617529565b600060405180830381600087803b158015613ea457600080fd5b505af1158015613eb8573d6000803e3d6000fd5b50505050505050505050565b80158015613ed0575081155b15613f0a576040517f97e36a0a00000000000000000000000000000000000000000000000000000000815260006004820152602401612151565b6000613f1583615264565b90506005811115613f55576040517f97e36a0a00000000000000000000000000000000000000000000000000000000815260048101829052602401612151565b6000613f60846137b5565b90506000613f6e838361724e565b9050601c811115613fae576040517f97e36a0a00000000000000000000000000000000000000000000000000000000815260048101829052602401612151565b60005b828110156108b15760ff601b82900360080287901c166000819003614002576040517fbf1ac38300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b602081111561403d576040517f2392baa400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50600101613fb1565b80158015614052575081155b1561407357604051635318beb960e01b815260006004820152602401612151565b600061407e83615264565b905060058111156140a557604051635318beb960e01b815260048101829052602401612151565b60006140b0846137b5565b905060006140be838361724e565b9050601c8111156140e557604051635318beb960e01b815260048101829052602401612151565b60008060005b838110156141ab5760006141186141028a84615a71565b60c5811115614113576141136174b7565b615a92565b111561416257848110614157576040517ff1e56be400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001909201916141a3565b8481101561419c576040517ff1e56be400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001909101905b6001016140eb565b508382146141cf57604051635318beb960e01b815260048101839052602401612151565b848114610d1757604051635318beb960e01b815260048101829052602401612151565b60408051600180825281830190925260009182919060208083019080368337019050509050828160008151811061422b5761422b616cfa565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b60228201527f5265736f75726365496473000000000000000000000000000000000000000000603082015281518082039093018352810190526000906142c29061429a90616cd6565b8360007e0101000100000000000000000000000000000000000000000000000000000061320c565b90506117318160f81c90565b6040805160208101879052808201869052606080820186905282518083039091018152608090910190915260006143058484615af2565b905060006143138585615b0f565b6040805160018082528183019092529192506000919060208083019080368337019050509050898160008151811061434d5761434d616cfa565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b6022820152655461626c657360d01b60308201528151808203909301835281019052613eb8906143a290616cd6565b828686867e60030220202000000000000000000000000000000000000000000000000000614947565b60408051600180825281830190925260009160208083019080368337019050509050828160008151811061440157614401616cfa565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b60228201527f5265736f757263654964730000000000000000000000000000000000000000006030820152815180820390930183528101905261080f9061446d90616cd6565b8260008560405160200161448891151560f81b815260010190565b60408051601f198184030181529190527e01010001000000000000000000000000000000000000000000000000000000612ded565b60006117496144cc8484615b24565b5490565b613a3160f11b877fffff000000000000000000000000000000000000000000000000000000000000161461451857613a3160f11b878860405160200161210f91815260200190565b6000614533828760ff166028026038011c64ffffffffff1690565b9050600083518564ffffffffff168361454c919061723b565b614556919061724e565b905080821415801561457857508161456e868861757a565b64ffffffffff1614155b156145c8576040517fa65010b400000000000000000000000000000000000000000000000000000000815264ffffffffff8088166004830152808716602483015283166044820152606401612151565b818664ffffffffff161115614619576040517f7e8578d30000000000000000000000000000000000000000000000000000000081526004810183905264ffffffffff87166024820152604401612151565b6000614626848984615b7a565b905064ffffffffff871660005b8960ff168160ff1610156146665761465a868260ff166028026038011c64ffffffffff1690565b90910190600101614633565b508a7faa63765a776145e5e6492f471ae097dfed11cd57a61bc2679dd43180422385b48b838a868b60405161469f95949392919061759f565b60405180910390a25060006146b38b615548565b905060005b81518110156147885760008282815181106146d5576146d5616cfa565b602002602001015190506147016010826affffffffffffffffffffff191661561090919063ffffffff16565b1561477557606081901c6001600160a01b03166355eb5a288e8e8e8e8e8a8f6040518863ffffffff1660e01b815260040161474297969594939291906175e5565b600060405180830381600087803b15801561475c57600080fd5b505af1158015614770573d6000803e3d6000fd5b505050505b50806147808161749d565b9150506146b8565b508284146147a157600061479c8c8c615b24565b839055505b60006147ae8c8c8c6148a4565b90506147c2818a64ffffffffff168961562e565b5060005b81518110156148965760008282815181106147e3576147e3616cfa565b6020026020010151905061480f6020826affffffffffffffffffffff191661561090919063ffffffff16565b1561488357606081901c6001600160a01b031663635845338e8e8e8e8e8a8f6040518863ffffffff1660e01b815260040161485097969594939291906175e5565b600060405180830381600087803b15801561486a57600080fd5b505af115801561487e573d6000803e3d6000fd5b505050505b508061488e8161749d565b9150506147c6565b505050505050505050505050565b600083836040516020016148b9929190617643565b604051602081830303815290604052805190602001208260f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f3b4102da22e32d82fc925482184f16c09fd4281692720b87d124aef6da48a0f1181860001c90509392505050565b60405160208101601f19603f85840101166040528382526139de85858584615281565b857f8dbb3a9672eebfd3773e72dd9c102393436816d832c7ba9e1e1ac8fcadcac7a98686868660405161497d949392919061767e565b60405180910390a2613a3160f11b867fffff00000000000000000000000000000000000000000000000000000000000016036108b15760006149be87615548565b905060005b8151811015614aa15760008282815181106149e0576149e0616cfa565b60200260200101519050614a0c6001826affffffffffffffffffffff191661561090919063ffffffff16565b15614a8e576040517f57066c9c000000000000000000000000000000000000000000000000000000008152606082901c906357066c9c90614a5b908c908c908c908c908c908c906004016176bd565b600060405180830381600087803b158015614a7557600080fd5b505af1158015614a89573d6000803e3d6000fd5b505050505b5080614a998161749d565b9150506149c3565b506000614aae8888615523565b90506000602087019050614ac6826000838a51615c48565b6000614ad185615264565b1115614b55576000614ae38a8a615b24565b878155905060208601915060008060005b614afd88615264565b8160ff161015614b5057614b128d8d836148a4565b9250614b2d8a8260ff166028026038011c64ffffffffff1690565b9150614b3c8360008785615c48565b614b46828661724e565b9450600101614af4565b505050505b60005b8351811015613eb8576000848281518110614b7557614b75616cfa565b60200260200101519050614ba16002826affffffffffffffffffffff191661561090919063ffffffff16565b15614c23576040517f5b28cdaf000000000000000000000000000000000000000000000000000000008152606082901c90635b28cdaf90614bf0908e908e908e908e908e908e906004016176bd565b600060405180830381600087803b158015614c0a57600080fd5b505af1158015614c1e573d6000803e3d6000fd5b505050505b5080614c2e8161749d565b915050614b58565b6113937f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b0316636900a3ae601d84604051614c7b9190616f6a565b908152604051908190036020018120547fffffffff0000000000000000000000000000000000000000000000000000000060e084901b168252614cc49160040190815260200190565b600060405180830381865afa158015614ce1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052614d099190810190617746565b82604051602001614d1b92919061778f565b604051602081830303815290604052615d08565b6040805160808101825260008082526020820152606091810182905281810191909152614d7184602081015160249091015160e09190911c9160809190911c90565b6fffffffffffffffffffffffffffffffff16602083015263ffffffff168152614d9a8383615d79565b606083015260408201529392505050565b827f0e1f72f429eb97e64878619984a91e687ae91610348b9ff4216782cc96e49d0783604051614ddb9190617810565b60405180910390a2613a3160f11b837fffff0000000000000000000000000000000000000000000000000000000000001614614e1657505050565b6000614e2184615548565b905060005b8151811015614efe576000828281518110614e4357614e43616cfa565b60200260200101519050614e6f6040826affffffffffffffffffffff191661561090919063ffffffff16565b15614eeb576040517f9faeaf45000000000000000000000000000000000000000000000000000000008152606082901c90639faeaf4590614eb890899089908990600401617823565b600060405180830381600087803b158015614ed257600080fd5b505af1158015614ee6573d6000803e3d6000fd5b505050505b5080614ef68161749d565b915050614e26565b506000614f0b8585615523565b9050614f64816000614f1c86615208565b67ffffffffffffffff811115614f3457614f346167d2565b6040519080825280601f01601f191660200182016040528015614f5e576020820181803683370190505b5061562e565b6000614f6f84615264565b1115614f90576000614f818686615b24565b9050614f8e816020615dcd565b505b60005b82518110156108b1576000838281518110614fb057614fb0616cfa565b60200260200101519050614fdc6080826affffffffffffffffffffff191661561090919063ffffffff16565b15615058576040517f83b5c95b000000000000000000000000000000000000000000000000000000008152606082901c906383b5c95b90615025908a908a908a90600401617823565b600060405180830381600087803b15801561503f57600080fd5b505af1158015615053573d6000803e3d6000fd5b505050505b50806150638161749d565b915050614f93565b600080805b8360ff168110156139de5761509260ff601b83900360080287901c168361724e565b91508061509e8161749d565b915050615070565b60606000606060006150b6615a33565b9050306001600160a01b038216036150df576150d3878787612f56565b93509350935050611af1565b6040517f419b58fd0000000000000000000000000000000000000000000000000000000081526001600160a01b0382169063419b58fd90615128908a908a908a90600401617823565b600060405180830381865afa158015615145573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526150d3919081019061786c565b6000615177615a33565b9050306001600160a01b038216036151935761080f838361316d565b6040517f505a181d0000000000000000000000000000000000000000000000000000000081526001600160a01b0382169063505a181d906151da90869086906004016178d9565b600060405180830381600087803b1580156151f457600080fd5b505af1158015610d17573d6000803e3d6000fd5b600060086152186002602061723b565b61522291906174cd565b9190911c919050565b60608160000361524a5750604080516020810190915260008152611749565b60006152568585615523565b905061096d81846000614924565b600060086001806152776002602061723b565b6137c7919061723b565b81156152f357602082106152ab576020820484019350602082816152a7576152a76174e4565b0691505b81156152f35760208290036000600019600883021c1990508554600885021b8119845116828216178452508185116152e4575050610c9c565b50600194909401939283900392015b5b602083106153155783548152600190930192601f19909201916020016152f4565b8215610c9c576000600019600885021c198251865482169119161782525050505050565b6153438282615e0a565b610670577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516153cc9060208082526023908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b62797460408201527f65735d0000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17fd26e16cad4548705e4c9e2d94f98ee91c289085ee425594fd5635fa2964ccf18826040516154039190617340565b60405180910390a17fd26e16cad4548705e4c9e2d94f98ee91c289085ee425594fd5635fa2964ccf1881604051611f2a919061738f565b60408051600180825281830190925260009160208083019080368337019050509050828160008151811061547057615470616cfa565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b60228201527f53746f7265486f6f6b73000000000000000000000000000000000000000000006030820152815180820390930183528101905261080f906154dc90616cd6565b6040517fffffffffffffffffffffffffffffffffffffffffff0000000000000000000000851660208201528390600090603501604051602081830303815290604052615ebd565b60008282604051602001613953929190617643565b6000611746826123db86866144bd565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061558257615582616cfa565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b60228201527f53746f7265486f6f6b7300000000000000000000000000000000000000000000603082015281518082039093018352810190526000906155f9906155f190616cd6565b8360006123bd565b905061173161560b8260008451615f5e565b615fee565b60008160ff16826156218560581c90565b1660ff1614905092915050565b61080f8383602084018451615c48565b60408051600180825281830190925260009182919060208083019080368337019050509050828160008151811061567757615677616cfa565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b6022820152655461626c657360d01b60308201528151808203909301835281019052600090611731906156cf90616cd6565b8360027e6003022020200000000000000000000000000000000000000000000000000061320c565b6000601c82511115615721578151604051635318beb960e01b815260040161215191815260200190565b60008080805b85518110156157f757600061576087838151811061574757615747616cfa565b602002602001015160c5811115614113576141136174b7565b905080600003615775576001909201916157ad565b82156157ad576040517ff1e56be400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80840193506008826004601f0303028783815181106157ce576157ce616cfa565b602002602001015160c58111156157e7576157e76174b7565b901b949094179350600101615727565b50600581111561581d57604051635318beb960e01b815260048101829052602401612151565b845181900360086158306002602061723b565b61583a91906174cd565b83901b9390931792600860016158526002602061723b565b61585c919061723b565b61586691906174cd565b81901b9390931792600860018061587f6002602061723b565b615889919061723b565b615893919061723b565b61589d91906174cd565b9190911b92909217949350505050565b6040805160018082528183019092526000918291906020808301908036833701905050905082816000815181106158e6576158e6616cfa565b60209081029190910181019190915260408051613a3160f11b818401526473746f726560d81b6022820152655461626c657360d01b603082015281518082039093018352810190526000906117319061593e90616cd6565b8360017e6003022020200000000000000000000000000000000000000000000000000061320c565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106159a0576159a0616cfa565b60200260200101818152505060006159ba858360006123bd565b905061096d61560b8260008451615f5e565b604080516001808252818301909252600091602080830190803683370190505090508281600081518110615a0257615a02616cfa565b602002602001018181525050610c9c84826000615a1e86615fff565b61377a565b60608161174981600460e061600b565b7f629a4c26e296b22a8e0856e9f6ecb2d1008d7e00081111962cd175fa7488e175546000906001600160a01b0316806119d0573391505090565b5090565b6000601b8290036008028360ff911c1660c5811115611749576117496174b7565b6000808260c5811115615aa757615aa76174b7565b60ff1690506061811015615ac157601f1660010192915050565b60618360c5811115615ad557615ad56174b7565b03615ae35750601492915050565b50600092915050565b50919050565b8151815160009181810160389190911b1760609190911b17611749565b60608282604051602001613dbb9291906174fa565b60008282604051602001615b39929190617643565b60408051601f1981840301815291905280516020909101207f14e2fcc58e58e68ec7edc30c8d50dccc3ce2714a623ec81f46b6a63922d76569189392505050565b600064ffffffffff821115615bbe576040517f4767058800000000000000000000000000000000000000000000000000000000815260048101839052602401612151565b8366ffffffffffffff811660ff851660280260380182901c64ffffffffff16808510615bf05780850382019150615bf8565b848103820391505b5064ffffffffff6038602860ff8816020181811b197fffffffffffffffffffffffffffffffffffffffffffffffffff000000000000009490941690921792909216918416901b1790509392505050565b8215615cc25760208310615c7257602083048401935060208381615c6e57615c6e6174e4565b0692505b8215615cc25760208390036000600019600884021c1990506008850281811c91508451811c9050811987541682821617875550818311615cb3575050610c9c565b50600194909401939182019190035b5b60208110615ce45781518455600190930192602090910190601f1901615cc3565b8015610c9c576000600019600883021c198554845182169119161785555050505050565b61139381604051602401615d1c91906163a6565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac0000000000000000000000000000000000000000000000000000000017905261606b565b6060806000603885901c64ffffffffff16615d9d615d98868484615f5e565b61608c565b935090508064ffffffffff606087901c1601615dc2615dbd868484615f5e565b61609d565b925050509250929050565b60006020615ddc83601f61724e565b615de691906178f2565b615df0908461724e565b90505b8083101561080f5760008355600183019250615df3565b805182516001919003615ae35760005b8351811015615eb757828181518110615e3557615e35616cfa565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916848281518110615e7457615e74616cfa565b01602001517fff000000000000000000000000000000000000000000000000000000000000001614615ea557600091505b80615eaf8161749d565b915050615e1a565b50610da0565b6000615ec7615a33565b9050306001600160a01b03821603615ee557612dca85858585612382565b6040517f150f32620000000000000000000000000000000000000000000000000000000081526001600160a01b0382169063150f326290615f30908890889088908890600401617914565b600060405180830381600087803b158015615f4a57600080fd5b505af115801561206c573d6000803e3d6000fd5b6000818311158015615f71575083518211155b615fad578383836040517f23230fa300000000000000000000000000000000000000000000000000000000815260040161215193929190617948565b60208401615fbb848261724e565b90506000615fc9858561723b565b6fffffffffffffffffffffffffffffffff1660809290921b9190911795945050505050565b60606000611749836015600061611d565b60608161174981601560005b8251606090600061601c85836174cd565b9050604051925060208301601f19603f83860101166040528184526000602088015b8482101561605f578051871b8352918701916001919091019060200161603e565b50505050509392505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6060600061174983600460e061611d565b606060006160ab8360801c90565b90506fffffffffffffffffffffffffffffffff83168067ffffffffffffffff8111156160d9576160d96167d2565b6040519080825280601f01601f191660200182016040528015616103576020820181803683370190505b5092506020830161611583828461618c565b505050919050565b6060600061612b8560801c90565b90506fffffffffffffffffffffffffffffffff85166000858281616151576161516174e4565b04905060405193506020840160208202810160405281855260005b8281101561605f578451871c82529387019360209091019060010161616c565b5b602081106161ac578251825260209283019290910190601f190161618d565b806000036161b957505050565b6000600019600883021c19905080198351168185511617835250505050565b828054828255906000526020600020906007016008900481019282156162775791602002820160005b8382111561624557835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302616201565b80156162755782816101000a81549063ffffffff0219169055600401602081600301049283019260010302616245565b505b50615a6d9291505b80821115615a6d576000815560010161627f565b60008083601f8401126162a557600080fd5b50813567ffffffffffffffff8111156162bd57600080fd5b6020830191508360208260051b85010111156162d857600080fd5b9250929050565b803560ff811681146119d057600080fd5b60008060008060006080868803121561630857600080fd5b85359450602086013567ffffffffffffffff81111561632657600080fd5b61633288828901616293565b90955093506163459050604087016162df565b949793965091946060013592915050565b60005b83811015616371578181015183820152602001616359565b50506000910152565b60008151808452616392816020860160208601616356565b601f01601f19169290920160200192915050565b602081526000611749602083018461637a565b80356001600160a01b03811681146119d057600080fd5b600080604083850312156163e357600080fd5b823591506163f3602084016163b9565b90509250929050565b60008060008060008060008060c0898b03121561641857600080fd5b88359750602089013596506040890135955060608901359450608089013567ffffffffffffffff8082111561644c57600080fd5b6164588c838d01616293565b909650945060a08b013591508082111561647157600080fd5b5061647e8b828c01616293565b999c989b5096995094979396929594505050565b60008083601f8401126164a457600080fd5b50813567ffffffffffffffff8111156164bc57600080fd5b6020830191508360208285010111156162d857600080fd5b600080600080600080608087890312156164ed57600080fd5b86359550602087013567ffffffffffffffff8082111561650c57600080fd5b6165188a838b01616293565b909750955085915061652c60408a016162df565b9450606089013591508082111561654257600080fd5b5061654f89828a01616492565b979a9699509497509295939492505050565b6000806000806060858703121561657757600080fd5b84359350602085013567ffffffffffffffff81111561659557600080fd5b6165a187828801616293565b90945092506165b49050604086016162df565b905092959194509250565b6020808252825182820181905260009190848201906040850190845b818110156166005783516001600160a01b0316835292840192918401916001016165db565b50909695505050505050565b60008060008060008060008060a0898b03121561662857600080fd5b88359750602089013567ffffffffffffffff8082111561664757600080fd5b6166538c838d01616293565b909950975060408b013591508082111561666c57600080fd5b6166788c838d01616492565b909750955060608b0135945060808b013591508082111561669857600080fd5b5061647e8b828c01616492565b600080600080600080600060a0888a0312156166c057600080fd5b87359650602088013567ffffffffffffffff808211156166df57600080fd5b6166eb8b838c01616293565b90985096508691506166ff60408b016162df565b955060608a013591508082111561671557600080fd5b506167228a828b01616492565b989b979a50959894979596608090950135949350505050565b60006020828403121561674d57600080fd5b5035919050565b6000806000806060858703121561676a57600080fd5b84359350602085013567ffffffffffffffff81111561678857600080fd5b61679487828801616293565b9598909750949560400135949350505050565b6060815260006167ba606083018661637a565b846020840152828103604084015261065c818561637a565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715616811576168116167d2565b604052919050565b600067ffffffffffffffff821115616833576168336167d2565b5060051b60200190565b600082601f83011261684e57600080fd5b8135602061686361685e83616819565b6167e8565b82815260059290921b8401810191818101908684111561688257600080fd5b8286015b8481101561689d5780358352918301918301616886565b509695505050505050565b600080600080600060a086880312156168c057600080fd5b85359450602086013567ffffffffffffffff8111156168de57600080fd5b6168ea8882890161683d565b9450506168f9604087016162df565b94979396509394606081013594506080013592915050565b6000806040838503121561692457600080fd5b82359150602083013567ffffffffffffffff81111561694257600080fd5b61694e8582860161683d565b9150509250929050565b60008060006060848603121561696d57600080fd5b8335925061697d602085016163b9565b915061698b604085016162df565b90509250925092565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015616a5057898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015616a3b5783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b01906169f9565b50978a019795505050918701916001016169bc565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015616ab457603f19888603018452616aa285835161637a565b94509285019290850190600101616a86565b5092979650505050505050565b60008060008060808587031215616ad757600080fd5b84359350602085013567ffffffffffffffff811115616af557600080fd5b616b018782880161683d565b935050616b10604086016162df565b9396929550929360600135925050565b600080600060608486031215616b3557600080fd5b83359250602084013567ffffffffffffffff811115616b5357600080fd5b616b5f8682870161683d565b92505061698b604085016162df565b60008060008060008060808789031215616b8757600080fd5b86359550602087013567ffffffffffffffff80821115616ba657600080fd5b616bb28a838b01616293565b90975095506040890135915065ffffffffffff82168214616bd257600080fd5b9093506060880135908082111561654257600080fd5b803564ffffffffff811681146119d057600080fd5b60008060008060008060008060c0898b031215616c1957600080fd5b88359750602089013567ffffffffffffffff80821115616c3857600080fd5b616c448c838d01616293565b9099509750879150616c5860408c016162df565b9650616c6660608c01616be8565b9550616c7460808c01616be8565b945060a08b013591508082111561669857600080fd5b600080600060408486031215616c9f57600080fd5b83359250602084013567ffffffffffffffff811115616cbd57600080fd5b616cc986828701616293565b9497909650939450505050565b80516020808301519190811015615aec5760001960209190910360031b1b16919050565b634e487b7160e01b600052603260045260246000fd5b600067ffffffffffffffff821115616d2a57616d2a6167d2565b50601f01601f191660200190565b6000616d4661685e84616819565b80848252602080830192508560051b850136811115616d6457600080fd5b855b81811015616ddc57803567ffffffffffffffff811115616d865760008081fd5b870136601f820112616d985760008081fd5b8035616da661685e82616d10565b8181523686838501011115616dbb5760008081fd5b81868401878301376000918101860191909152865250938201938201616d66565b50919695505050505050565b600181811c90821680616dfc57607f821691505b602082108103615aec57634e487b7160e01b600052602260045260246000fd5b601f82111561080f57600081815260208120601f850160051c81016020861015616e435750805b601f850160051c820191505b818110156108b157828155600101616e4f565b815167ffffffffffffffff811115616e7c57616e7c6167d2565b616e9081616e8a8454616de8565b84616e1c565b602080601f831160018114616ec55760008415616ead5750858301515b600019600386901b1c1916600185901b1785556108b1565b600085815260208120601f198616915b82811015616ef457888601518255948401946001909101908401616ed5565b5085821015616f125787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b7fffffffff000000000000000000000000000000000000000000000000000000008316815260008251616f5c816004850160208701616356565b919091016004019392505050565b60008251616f7c818460208701616356565b9190910192915050565b600060208284031215616f9857600080fd5b8151801515811461174957600080fd5b634e487b7160e01b600052601160045260246000fd5b60ff8281168282160390811115610da057610da0616fa8565b60408152600061701460408301600a81527f2020202020204c65667400000000000000000000000000000000000000000000602082015260400190565b905082602083015292915050565b60408152600061701460408301600a81527f2020202020526967687400000000000000000000000000000000000000000000602082015260400190565b7fffff0000000000000000000000000000000000000000000000000000000000008416815282602082015260606040820152600061096d606083018461637a565b828152604060208201526000611746604083018461637a565b600081546170c681616de8565b600182811680156170de576001811461711157617140565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0084168752821515830287019450617140565b8560005260208060002060005b858110156171375781548a82015290840190820161711e565b50505082870194505b5050505092915050565b7f676173207265706f7274202200000000000000000000000000000000000000008152600061717c600c8301846170b9565b7f2220697320616c72656164792072756e6e696e6720616e64206f6e6c79206f6e81527f65207265706f72742063616e2062652072756e20617420612074696d650000006020820152603d019392505050565b7f676173207265706f72742022000000000000000000000000000000000000000081526000825161720781600c850160208701616356565b7f2220616c7265616479207573656420666f722074686973207465737400000000600c939091019283015250602801919050565b81810381811115610da057610da0616fa8565b80820180821115610da057610da0616fa8565b600061174982846170b9565b818103617278575050565b6172828254616de8565b67ffffffffffffffff81111561729a5761729a6167d2565b6172a881616e8a8454616de8565b6000601f8211600181146172dc57600083156172c45750848201545b600019600385901b1c1916600184901b1784556111fc565b600085815260209020601f19841690600086815260209020845b8381101561731657828601548255600195860195909101906020016172f6565b5085831015616f125793015460001960f8600387901b161c19169092555050600190811b01905550565b60408152600061737d60408301600a81527f2020202020204c65667400000000000000000000000000000000000000000000602082015260400190565b8281036020840152611731818561637a565b60408152600061737d60408301600a81527f2020202020526967687400000000000000000000000000000000000000000000602082015260400190565b600060ff821660ff81036173e2576173e2616fa8565b60010192915050565b600081518084526020808501945080840160005b8381101561741b578151875295820195908201906001016173ff565b509495945050505050565b60608152600061743960608301866173eb565b65ffffffffffff85166020840152828103604084015261065c818561637a565b84815260806020820152600061747260808301866173eb565b65ffffffffffff851660408401528281036060840152617492818561637a565b979650505050505050565b600060001982036174b0576174b0616fa8565b5060010190565b634e487b7160e01b600052602160045260246000fd5b8082028115828204841417610da057610da0616fa8565b634e487b7160e01b600052601260045260246000fd5b6000835161750c818460208801616356565b835190830190617520818360208801616356565b01949350505050565b85815260a06020820152600061754260a08301876173eb565b8281036040840152617554818761637a565b9050846060840152828103608084015261756e818561637a565b98975050505050505050565b64ffffffffff81811683821601908082111561759857617598616fa8565b5092915050565b60a0815260006175b260a08301886173eb565b65ffffffffffff8716602084015264ffffffffff86166040840152846060840152828103608084015261756e818561637a565b87815260e0602082015260006175fe60e08301896173eb565b60ff8816604084015264ffffffffff87811660608501528616608084015260a0830185905282810360c0840152617635818561637a565b9a9950505050505050505050565b82815260006020808301845182860160005b8281101561767157815184529284019290840190600101617655565b5091979650505050505050565b60808152600061769160808301876173eb565b82810360208401526176a3818761637a565b90508460408401528281036060840152617492818561637a565b86815260c0602082015260006176d660c08301886173eb565b82810360408401526176e8818861637a565b90508560608401528281036080840152617702818661637a565b9150508260a0830152979650505050505050565b600061772461685e84616d10565b905082815283838301111561773857600080fd5b611749836020830184616356565b60006020828403121561775857600080fd5b815167ffffffffffffffff81111561776f57600080fd5b8201601f8101841361778057600080fd5b61173184825160208401617716565b7f474153205245504f52543a2000000000000000000000000000000000000000008152600083516177c781600c850160208801616356565b7f2000000000000000000000000000000000000000000000000000000000000000600c91840191820152835161780481600d840160208801616356565b01600d01949350505050565b60208152600061174960208301846173eb565b83815260606020820152600061783c60608301856173eb565b9050826040830152949350505050565b600082601f83011261785d57600080fd5b61174983835160208501617716565b60008060006060848603121561788157600080fd5b835167ffffffffffffffff8082111561789957600080fd5b6178a58783880161784c565b94506020860151935060408601519150808211156178c257600080fd5b506178cf8682870161784c565b9150509250925092565b82815260406020820152600061174660408301846173eb565b60008261790f57634e487b7160e01b600052601260045260246000fd5b500490565b84815260806020820152600061792d60808301866173eb565b60ff851660408401528281036060840152617492818561637a565b60608152600061795b606083018661637a565b6020830194909452506040015291905056fe676574207265636f72642066726f6d204d697865642028696e7465726e616c2c207761726d2964656c657465207265636f72642066726f6d204d697865642028696e7465726e616c2c20636f6c642964656c657465207265636f72642066726f6d204d69786564202865787465726e616c2c207761726d2973746f7265204d697865642073747275637420696e2073746f7261676520286e617469766520736f6c69646974792964656c657465207265636f72642066726f6d204d69786564202865787465726e616c2c20636f6c6429736574207265636f726420696e204d69786564202865787465726e616c2c20636f6c6429676574207265636f72642066726f6d204d69786564202865787465726e616c2c207761726d29736574207265636f726420696e204d697865642028696e7465726e616c2c20636f6c642964656c657465207265636f72642066726f6d204d697865642028696e7465726e616c2c207761726d29a164736f6c6343000815000a629a4c26e296b22a8e0856e9f6ecb2d1008d7e00081111962cd175fa7488e175",
    "sourceMap": "505:3670:82:-:0;;;1572:26:18;;;1594:4;-1:-1:-1;;1572:26:18;;;;;;;;3126:44:21;;;;;;;;;;;228:9:16;186:51;;505:3670:82;;;;;;;;;-1:-1:-1;739:22:55;-1:-1:-1;;;;;;;;;;;2304:38:58;;-1:-1:-1;;;;;;2304:38:58;4109:4:54;2304:38:58;;;4036:84:54;739:22:55;772:25;;-1:-1:-1;;;783:13:55;772:25;;;;;726:22:96;-1:-1:-1;;;;;;;;;;;2304:38:58;;-1:-1:-1;;;;;;2304:38:58;4109:4:54;2304:38:58;;;4036:84:54;726:22:96;754:30;:28;:30::i;:::-;-1:-1:-1;;;;;;;;;;;2304:38:58;;-1:-1:-1;;;;;;2304:38:58;826:4:96;2304:38:58;;;505:3670:82;;4073:42:54;4036:84::o;4326:150::-;4399:17;:15;:17::i;:::-;4422:21;:19;:21::i;:::-;4449:22;:20;:22::i;3356:155:63:-;1147:69;;;-1:-1:-1;;;1147:69:63;;;197:41:113;-1:-1:-1;;;254:11:113;;;247:58;-1:-1:-1;;;321:12:113;;;314:59;3391:115:63;;389:12:113;1147:69:63;;;;;;;;;;;;1139:78;;;:::i;:::-;-1:-1:-1;;;3441:14:63;:12;:14::i;:::-;3457:16;:14;:16::i;:::-;3475:13;:11;:13::i;:::-;3490:15;:13;:15::i;:::-;3391:25;:115::i;2800:155:62:-;1047:73;;;-1:-1:-1;;;1047:73:62;;;197:41:113;-1:-1:-1;;;254:11:113;;;247:58;-1:-1:-1;;;321:12:113;;;314:59;2835:115:62;;389:12:113;1047:73:62;;;;;;;;;;;;1039:82;;;:::i;:::-;-1:-1:-1;;;2885:14:62;:12;:14::i;:::-;2901:16;:14;:16::i;:::-;2919:13;:11;:13::i;:::-;2934:15;:13;:15::i;2798:155:61:-;1047:74;;;-1:-1:-1;;;1047:74:61;;;197:41:113;-1:-1:-1;;;254:11:113;;;247:58;-1:-1:-1;;;321:12:113;;;314:59;2833:115:61;;389:12:113;1047:74:61;;;;;;;;;;;;1039:83;;;:::i;:::-;-1:-1:-1;;;2883:14:61;:12;:14::i;:::-;2899:16;:14;:16::i;:::-;2917:13;:11;:13::i;:::-;2932:15;:13;:15::i;1886:200:63:-;1980:19;;;1997:1;1980:19;;;;;;;;;1933:6;;;;1980:19;;;;;;;;;;;;-1:-1:-1;1980:19:63;1947:52;;2021:18;2005:10;2016:1;2005:13;;;;;;;;:::i;:::-;;;;;;:34;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;2053:28:63;2070:10;2053:16;:28::i;:::-;2046:35;;;1886:200;:::o;2203:372::-;2301:19;;;2318:1;2301:19;;;;;;;;;2252:6;;;;2301:19;;;;;;;;;;;-1:-1:-1;2301:19:63;2266:54;;2344:18;2326:12;2339:1;2326:15;;;;;;;;:::i;:::-;;;;;;:36;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;2386:18;2368:12;2381:1;2368:15;;;;;;;;:::i;:::-;;;;;;:36;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;2428:18;2410:12;2423:1;2410:15;;;;;;;;:::i;:::-;;;;;;:36;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;2470:16;2452:12;2465:1;2452:15;;;;;;;;:::i;:::-;;;;;;:34;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;2510:16;2492:12;2505:1;2492:15;;;;;;;;:::i;2709:138::-;2798:15;;;2811:1;2798:15;;;;;;;;;2755:24;;2798:15;;;;;;;;;;;;;;;;;;;;2787:26;;2819:23;;;;;;;;;;;;;-1:-1:-1;;;2819:23:63;;;:8;2828:1;2819:11;;;;;;;;:::i;:::-;;;;;;:23;;;;2709:138;:::o;2987:304::-;3082:15;;;3095:1;3082:15;;;;;;;;;3035:26;;3082:15;;;;;;;;;;;;;;;;;;;;3069:28;;3103:29;;;;;;;;;;;;;-1:-1:-1;;;3103:29:63;;;:10;3114:1;3103:13;;;;;;;;:::i;:::-;;;;;;:29;;;;3138:27;;;;;;;;;;;;;-1:-1:-1;;;3138:27:63;;;:10;3149:1;3138:13;;;;;;;;:::i;:::-;;;;;;:27;;;;3171:29;;;;;;;;;;;;;-1:-1:-1;;;3171:29:63;;;:10;3182:1;3171:13;;;;;;;;:::i;:::-;;;;;;:29;;;;3206:36;;;;;;;;;;;;;-1:-1:-1;;;3206:36:63;;;:10;3217:1;3206:13;;;;;;;;:::i;:::-;;;;;;:36;;;;3248:38;;;;;;;;;;;;;;;;;:10;3259:1;3248:13;;;;;;;;:::i;5574:520:58:-;5777:21;5801:17;:15;:17::i;:::-;5777:41;-1:-1:-1;5853:4:58;-1:-1:-1;;;;;5828:30:58;;;5824:266;;5868:91;5892:7;5901:11;5914:9;5925:11;5938:8;5948:10;5868:23;:91::i;:::-;5824:266;;;5980:103;;-1:-1:-1;;;5980:103:58;;-1:-1:-1;;;;;5980:35:58;;;;;:103;;6016:7;;6025:11;;6038:9;;6049:11;;6062:8;;6072:10;;5980:103;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5824:266;5771:323;5574:520;;;;;;:::o;1965:214:62:-;2063:19;;;2080:1;2063:19;;;;;;;;;2014:6;;;;2063:19;;;;;;;;;;;;-1:-1:-1;2063:19:62;2028:54;;2106:24;2088:12;2101:1;2088:15;;;;;;;;:::i;2591:144::-;2686:15;;;2699:1;2686:15;;;;;;;;;2639:26;;2686:15;;;;;;;;;;;;;;;;;;;;2673:28;;2707:23;;;;;;;;;;;;;-1:-1:-1;;;2707:23:62;;;:10;2718:1;2707:13;;;;;;;;:::i;1968:205:61:-;2066:19;;;2083:1;2066:19;;;;;;;;;2017:6;;;;2066:19;;;;;;;;;;;;-1:-1:-1;2066:19:61;2031:54;;2109:15;2091:12;2104:1;2091:15;;;;;;;;:::i;2307:141::-;2396:15;;;2409:1;2396:15;;;;;;;;;2353:24;;2396:15;;;;;;;;;;;;;;;;;;;;2385:26;;2417;;;;;;;;;;;;;-1:-1:-1;;;2417:26:61;;;:8;2426:1;2417:11;;;;;;;;:::i;2588:145::-;2683:15;;;2696:1;2683:15;;;;;;;;;2636:26;;2683:15;;;;;;;;;;;;;;;;;;;;2670:28;;2704:24;;;;;;;;;;;;;-1:-1:-1;;;2704:24:61;;;:10;2715:1;2704:13;;;;;;;;:::i;1247:2059:51:-;1315:6;647:2:64;1333:7:51;:14;:33;1329:85;;;1399:7;:14;1375:39;;-1:-1:-1;;;1375:39:51;;;;;;3301:25:113;;3289:2;3274:18;;3155:177;1375:39:51;;;;;;;;1329:85;1420:14;;;;1621:956;1645:7;:14;1641:1;:18;1621:956;;;1671:24;1698:32;:7;1706:1;1698:10;;;;;;;;:::i;:::-;;;;;;;:30;;;;;;;;:::i;:::-;;:32::i;:::-;1671:59;;1743:16;1763:1;1743:21;1739:404;;1928:15;;;;;1739:404;;;1972:17;;1968:175;;2096:38;;-1:-1:-1;;;2096:38:51;;;;;;;;;;;1968:175;2269:16;2254:31;;;;537:1:64;2531::51;2527;437:2:64;2509:19:51;:23;2508:40;2492:7;2500:1;2492:10;;;;;;;;:::i;:::-;;;;;;;2484:19;;;;;;;;:::i;:::-;:65;;2474:75;;;;;-1:-1:-1;2559:3:51;;1621:956;;;;902:1:64;2621:13:51;:34;2617:85;;;2664:38;;-1:-1:-1;;;2664:38:51;;;;;3301:25:113;;;3274:18;;2664:38:51;3155:177:113;2617:85:51;2802:14;;:30;;;537:1:64;1247:13;1259:1;334:2;1247:13;:::i;:::-;1246:30;;;;:::i;:::-;3090:41:51;;;3080:51;;;;;537:1:64;1425;1409:13;1421:1;334:2;1409:13;:::i;:::-;:17;;;;:::i;:::-;1408:34;;;;:::i;:::-;3147:47:51;;;3137:57;;;;;537:1:64;1597;;1577:13;1589:1;334:2;1577:13;:::i;:::-;:17;;;;:::i;:::-;:21;;;;:::i;:::-;1576:38;;;;:::i;:::-;3210:49:51;;;;3200:59;;;;;1247:2059;-1:-1:-1;;;;1247:2059:51:o;1766:227:58:-;-1:-1:-1;;;;;;;;;;;1855:22:58;1816:7;;-1:-1:-1;;;;;1855:22:58;;1883:106;;1931:10;1924:17;;;1766:227;:::o;1883:106::-;1969:13;1766:227;-1:-1:-1;1766:227:58:o;7479:1764:54:-;-1:-1:-1;;;7739:7:54;-1:-1:-1;;;;;;7739:35:54;;;;;:83;;-1:-1:-1;;;;7778:7:54;-1:-1:-1;;;;;;7778:44:54;;;7739:83;7735:209;;;-1:-1:-1;;;7894:7:54;7927;7910:25;;;;;;3936:19:113;;3980:2;3971:12;;3775:214;7910:25:54;;;;-1:-1:-1;;7910:25:54;;;;;;;;;;-1:-1:-1;;;7839:98:54;;;;;;;;;:::i;7735:209::-;7990:43;:11;8025:5;7990:20;:43::i;:::-;8074:40;:9;8107:4;8074:18;:40::i;:::-;8120:43;:11;8155:5;8120:20;:43::i;:::-;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;8251:8:54;:15;:40;8247:148;;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;8372:15:54;;8308:80;;-1:-1:-1;;;8308:80:54;;;;;4587:25:113;;;;4628:18;;;4621:34;4560:18;;8308:80:54;4413:248:113;8247:148:54;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;8445:10:54;:17;:44;8441:158;;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;8574:17:54;;8506:86;;-1:-1:-1;;;8506:86:54;;;;;4587:25:113;;;;4628:18;;;4621:34;4560:18;;8506:86:54;4413:248:113;8441:158:54;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;8656:50:54;8652:171;;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;8723:93:54;;-1:-1:-1;;;8723:93:54;;;;;4587:25:113;;;;4628:18;;;4621:34;4560:18;;8723:93:54;4413:248:113;8652:171:54;8885:31;8908:7;8885:22;:31::i;:::-;8881:140;;;8971:7;9004;8987:25;;;;;;3936:19:113;;3980:2;3971:12;;3775:214;8987:25:54;;;;-1:-1:-1;;8987:25:54;;;;;;;;;;-1:-1:-1;;;8933:81:54;;;;;;;;:::i;8881:140::-;9062:103;9074:7;9083:11;9096:9;9107:11;9131:8;9120:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;9153:10;9142:22;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9142:22:54;;;;;;;;;9062:11;:103::i;:::-;9201:37;9224:7;9233:4;9201:22;:37::i;:::-;7479:1764;;;;;;:::o;3195:520:17:-;3261:7;3274:13;3296:10;3290:17;;;;;;;;:::i;:::-;3274:33;;;;3324:2;3316:5;:10;3312:401;;;3568:2;3560:10;3574:1;3559:16;;;-1:-1:-1;;3195:520:17:o;3312:401::-;3610:18;3596:10;:32;;;;;;;;:::i;:::-;;3592:121;;-1:-1:-1;3643:2:17;;3195:520;-1:-1:-1;;3195:520:17:o;3592:121::-;-1:-1:-1;3707:1:17;;3195:520;-1:-1:-1;;3195:520:17:o;3592:121::-;3270:445;3195:520;;;:::o;6418:1197:37:-;6540:10;6539:11;:36;;;;-1:-1:-1;6022:45:37;;6554:21;6535:95;;;6584:46;;-1:-1:-1;;;6584:46:37;;6628:1;6584:46;;;3301:25:113;3274:18;;6584:46:37;3155:177:113;6535:95:37;6698:25;6726:30;:11;:28;:30::i;:::-;6698:58;;902:1:64;6766:17:37;:38;6762:113;;;6813:62;;-1:-1:-1;;;6813:62:37;;;;;3301:25:113;;;3274:18;;6813:62:37;3155:177:113;6762:113:37;6882:24;6909:29;:11;:27;:29::i;:::-;6882:56;-1:-1:-1;7013:23:37;7039:36;7058:17;6882:56;7039:36;:::i;:::-;7013:62;;647:2:64;7085:15:37;:34;7081:107;;;7128:60;;-1:-1:-1;;;7128:60:37;;;;;3301:25:113;;;3274:18;;7128:60:37;3155:177:113;7081:107:37;7236:9;7231:380;7251:16;7247:1;:20;7231:380;;;7279:24;7306:22;:11;7326:1;7306:19;:22::i;:::-;7279:49;;7340:16;7360:1;7340:21;7336:230;;7380:50;;-1:-1:-1;;;7380:50:37;;;;;;;;;;;7336:230;334:2:64;7449:16:37;:28;7445:121;;;7496:61;;-1:-1:-1;;;7496:61:37;;;;;;;;;;;7445:121;-1:-1:-1;7593:3:37;;7231:380;;5689:1683:51;5796:10;5795:11;:31;;;;-1:-1:-1;6022:45:37;;5810:16:51;5791:80;;;5835:36;;-1:-1:-1;;;5835:36:51;;5869:1;5835:36;;;3301:25:113;3274:18;;5835:36:51;3155:177:113;5791:80:51;5934:25;5962;:6;:23;:25::i;:::-;5934:53;;902:1:64;5997:17:51;:38;5993:103;;;6044:52;;-1:-1:-1;;;6044:52:51;;;;;3301:25:113;;;3274:18;;6044:52:51;3155:177:113;5993:103:51;6103:24;6130;:6;:22;:24::i;:::-;6103:51;-1:-1:-1;6224:23:51;6250:36;6269:17;6103:51;6250:36;:::i;:::-;6224:62;;647:2:64;6296:15:51;:34;6292:97;;;6339:50;;-1:-1:-1;;;6339:50:51;;;;;3301:25:113;;;3274:18;;6339:50:51;3155:177:113;6292:97:51;6448:25;6479:26;6516:9;6511:551;6531:15;6527:1;:19;6511:551;;;6604:1;6562:39;:17;:6;6577:1;6562:14;:17::i;:::-;:37;;;;;;;;:::i;:39::-;:43;6558:459;;;6666:16;6661:1;:21;6657:82;;6691:48;;-1:-1:-1;;;6691:48:51;;;;;;;;;;;6657:82;6771:19;;;;;6558:459;;;6873:16;6869:1;:20;6865:81;;;6898:48;;-1:-1:-1;;;6898:48:51;;;;;;;;;;;6865:81;6978:20;;;;;6558:459;7044:3;;6511:551;;;;7135:16;7114:17;:37;7110:102;;7160:52;;-1:-1:-1;;;7160:52:51;;;;;3301:25:113;;;3274:18;;7160:52:51;3155:177:113;7110:102:51;7288:17;7266:18;:39;7262:105;;7314:53;;-1:-1:-1;;;7314:53:51;;;;;3301:25:113;;;3274:18;;7314:53:51;3155:177:113;3569:314:61;3683:16;;;3697:1;3683:16;;;;;;;;;3635:11;;;;3683:16;;;;;;;;;;;;-1:-1:-1;3683:16:61;3654:45;;3738:10;3705:9;3715:1;3705:12;;;;;;;;:::i;:::-;;;;;;;;;;;:44;;;;1047:74;;;-1:-1:-1;;;1047:74:61;;;197:41:113;-1:-1:-1;;;254:11:113;;;247:58;-1:-1:-1;;;321:12:113;;;314:59;1047:74:61;;;;;;;;;;389:12:113;;1047:74:61;;-1:-1:-1;;3772:62:61;;1039:83;;;:::i;:::-;3807:9;3818:1;-1:-1:-1;;;3772:24:61;:62::i;:::-;3756:78;-1:-1:-1;3856:20:61;;;;3848:29;3840:38;3569:314;-1:-1:-1;;;;3569:314:61:o;20632:676:63:-;25186:53;;;;;;6079:19:113;;;6114:12;;;6107:28;;;25159:12:63;6151::113;;;6144:28;;;25186:53:63;;;;;;;;;;6188:12:113;;;;25186:53:63;;;20923:29;20955:55;20969:18;20989:20;20955:13;:55::i;:::-;20923:87;-1:-1:-1;21016:25:63;21044:55;21058:18;21078:20;21044:13;:55::i;:::-;21135:16;;;21149:1;21135:16;;;;;;;;;21016:83;;-1:-1:-1;21106:26:63;;21135:16;;;;;;;;;;;;-1:-1:-1;21135:16:63;21106:45;;21190:7;21157:9;21167:1;21157:12;;;;;;;;:::i;:::-;;;;;;;;;;;:41;;;;1147:69;;;-1:-1:-1;;;1147:69:63;;;197:41:113;-1:-1:-1;;;254:11:113;;;247:58;-1:-1:-1;;;321:12:113;;;314:59;1147:69:63;;;;;;;;;;389:12:113;;1147:69:63;;21205:98;;1139:78;;;:::i;:::-;21235:9;21246:11;21259:15;21276:12;-1:-1:-1;;;21205:19:63;:98::i;:::-;20834:474;;;;20632:676;;;;;;:::o;4933:268:61:-;5033:16;;;5047:1;5033:16;;;;;;;;;5004:26;;5033:16;;;;;;;;;;;-1:-1:-1;5033:16:61;5004:45;;5088:10;5055:9;5065:1;5055:12;;;;;;;;:::i;:::-;;;;;;;;;;;:44;;;;1047:74;;;-1:-1:-1;;;1047:74:61;;;197:41:113;-1:-1:-1;;;254:11:113;;;247:58;-1:-1:-1;;;321:12:113;;;314:59;1047:74:61;;;;;;;;;;389:12:113;;1047:74:61;;5106:90;;1039:83;;;:::i;:::-;5141:9;5152:1;5173:6;5155:26;;;;;;5750:14:113;5743:22;5738:3;5734:32;5722:45;;5792:1;5783:11;;5599:201;5155:26:61;;;;-1:-1:-1;;5155:26:61;;;;;;;;;-1:-1:-1;;;5106:24:61;:90::i;:::-;4998:203;4933:268;;:::o;5098:173:37:-;5172:7;537:1:64;1597;;1577:13;1589:1;334:2;1577:13;:::i;:::-;:17;;;;:::i;:::-;:21;;;;:::i;:::-;1576:38;;;;:::i;:::-;5208:11:37;5187:79;5200:65;;5187:79;;5098:173;-1:-1:-1;;5098:173:37:o;4700:171::-;4773:7;537:1:64;1425;1409:13;1421:1;334:2;1409:13;:::i;3883:217:37:-;4044:19;:27;;;537:1:64;4043:44:37;4009:79;;;3996:93;;3883:217;;;;;:::o;3948:206:51:-;4018:10;4108:19;:27;;;4139:1;4107:33;4086:6;4061:82;4078:63;;4061:82;;;;;;;;;:::i;:::-;4054:89;3948:206;-1:-1:-1;;;3948:206:51:o;35212:541:54:-;35369:7;35506:242;35550:59;35591:7;35600:8;35550:40;:59::i;:::-;35627:31;:11;:31;;;:19;:31::i;:::-;35676:63;35715:11;35728:10;35676:38;:63::i;:::-;35506:17;:242::i;:::-;35493:255;35212:541;-1:-1:-1;;;;;35212:541:54:o;25435:388:63:-;25561:29;25721:91;25749:18;25743:32;25783:20;25777:34;25721:21;;;:91;;:::i;25988:234::-;26114:12;26165:18;26194:20;26141:76;;;;;;;;;:::i;:::-;;;;;;;;;;;;;26134:83;;25988:234;;;;:::o;12721:3002:54:-;12994:7;12978:75;13003:8;13013:10;13025:14;13041:11;12978:75;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;13118:7:54;-1:-1:-1;;;;;;13118:35:54;;13163:7;13114:62;13314:22;13339:24;13355:7;13339:15;:24::i;:::-;13314:49;;13374:9;13369:340;13389:5;:12;13385:1;:16;13369:340;;;13416:9;13438:5;13444:1;13438:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;13459:33:54;-1:-1:-1;;;;;;13459:14:54;;343:6:66;13459:14:54;:33::i;:::-;13455:248;;;13504:190;;-1:-1:-1;;;13504:190:54;;3392:35:38;;;;;13504:47:54;;:190;;13563:7;;13582:8;;13602:10;;13624:14;;13650:11;;13673;;13504:190;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13455:248;-1:-1:-1;13403:3:54;;;;:::i;:::-;;;;13369:340;;;-1:-1:-1;13772:26:54;13801:59;13842:7;13851:8;13801:40;:59::i;:::-;13772:88;-1:-1:-1;13866:21:54;826:4:48;816:15;;13866:54:54;;13926:149;13964:18;13998:1;14022:13;14051:10;:17;13926:13;;;:149;;:::i;:::-;14175:1;14142:30;:11;:28;:30::i;:::-;:34;14138:1174;;;14261:33;14297:66;14345:7;14354:8;14297:47;:66::i;:::-;579:28:53;;;14261:102:54;-1:-1:-1;826:4:48;816:15;;14537:47:54;;14693:27;14728:25;14766:7;14761:545;14779:30;:11;:28;:30::i;:::-;14775:1;:34;;;14761:545;;;14845:63;14887:7;14896:8;14906:1;14845:41;:63::i;:::-;14823:85;-1:-1:-1;14938:25:54;:14;14961:1;6743:16:49;;862:5;6743:16;785:5;6732:27;6692:68;6670:92;;;6555:218;14938:25:54;14918:45;-1:-1:-1;14973:170:54;15015:19;15054:1;15082:13;14918:45;14973:13;:170::i;:::-;15153:34;15170:17;15153:34;;:::i;:::-;;-1:-1:-1;15284:3:54;;14761:545;;;;14178:1134;;;14138:1174;15386:9;15381:338;15401:5;:12;15397:1;:16;15381:338;;;15428:9;15450:5;15456:1;15450:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;15471:32:54;-1:-1:-1;;;;;;15471:14:54;;437:6:66;15471:14:54;:32::i;:::-;15467:246;;;15515:189;;-1:-1:-1;;;15515:189:54;;3392:35:38;;;;;15515:46:54;;:189;;15573:7;;15592:8;;15612:10;;15634:14;;15660:11;;15683;;15515:189;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15467:246;-1:-1:-1;15415:3:54;;;;:::i;:::-;;;;15381:338;;22277:355;22449:178;22483:7;22508:8;22538:63;22577:11;22590:10;22538:38;:63::i;:::-;22616:4;22449:16;:178::i;:::-;22277:355;;;;;:::o;49619:191::-;49721:7;49785;49794:8;49768:35;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;49768:35:54;;;;;;;;;49758:46;;49768:35;49758:46;;;;41226:22;49751:53;;49619:191;-1:-1:-1;;;49619:191:54:o;50636:242::-;50732:7;;;50771:84;50791:10;50787:14;;:1;:14;50771:84;;;50826:22;:11;50846:1;50826:19;:22::i;:::-;50816:32;;;;:::i;:::-;;-1:-1:-1;50803:3:54;;;;:::i;:::-;;;;50771:84;;;-1:-1:-1;50867:6:54;50636:242;-1:-1:-1;;;50636:242:54:o;8680:790:53:-;8778:14;8814:2;8804:6;:12;8800:112;;8873:2;8864:6;:11;8846:29;;;;8895:2;8885:12;;;;;;:::i;:::-;;;;8800:112;-1:-1:-1;9092:21:53;;9088:1;9076:14;;9072:42;9240:2;:11;;;9322:22;;;9318:148;;;9447:1;9431:14;9427:22;9421:29;9417:1;9402:13;9398:21;9394:57;9386:6;9383:69;9373:79;;8794:676;8680:790;;;;;:::o;2236:344:49:-;2489:23;2474:39;;;785:5;2408:39;;;2377:5;;;2390:58;2456;2236:344;;;;:::o;4372:342:62:-;4488:16;;;4502:1;4488:16;;;;;;;;;4429:22;;4459:26;;4488:16;;;;;;;;;;;;-1:-1:-1;4488:16:62;4459:45;;4543:7;4510:9;4520:1;4510:12;;;;;;;;:::i;:::-;;;;;;;;;;;:41;;;;1047:73;;;-1:-1:-1;;;1047:73:62;;;197:41:113;-1:-1:-1;;;254:11:113;;;247:58;-1:-1:-1;;;321:12:113;;;314:59;1047:73:62;;;;;;;;;;389:12:113;;1047:73:62;;-1:-1:-1;;4579:49:62;;1039:82;;;:::i;:::-;4615:9;4626:1;4579:25;:49::i;:::-;4558:70;;4642:66;:44;4663:5;4670:1;4673:5;:12;4642:20;;;:44;;:::i;:::-;:64;:66::i;2891:136:38:-;2961:4;2980:42;;;3013:9;2981:15;2991:4;3790:26;;;3660:162;2981:15;:27;2980:42;;;2973:49;;2891:136;;;;:::o;1373:2326:53:-;1486:10;;1482:1491;;1639:2;1629:6;:12;1625:122;;1702:2;1693:6;:11;1675:29;;;;1726:2;1716:12;;;;;;:::i;:::-;;;;1625:122;1837:10;;1833:1134;;2045:2;:11;;;1919:21;-1:-1:-1;;1080:1:65;1067:14;;1045:37;1043:40;2077:31:53;;2277:1;2269:6;2265:14;2313:4;2302:9;2298:20;2290:28;;2368:13;2362:20;2351:9;2347:36;2329:54;;2616:4;2612:9;2595:14;2589:21;2585:37;2516:4;2504:10;2500:21;2443:193;2415:14;2395:253;;2707:13;2697:6;:23;2693:36;;2722:7;;;;2693:36;-1:-1:-1;2870:1:53;2852:19;;;;;2883:30;;;;2925:23;;1833:1134;3003:253;3020:2;3010:6;:12;3003:253;;3115:20;;3092:44;;3189:1;3171:19;;;;3217:2;3200:19;;;;-1:-1:-1;;3229:12:53;3003:253;;;3324:10;;3320:375;;3626:21;;3542:20;;-1:-1:-1;;1080:1:65;1067:14;;1045:37;3622::53;;;1043:40:65;;3538:31:53;3487:184;3443:238;;3320:375;1373:2326;;;;:::o;52184:230:54:-;52305:7;52389;52398:8;52372:35;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;52372:35:54;;;;;;;;;52362:46;;52372:35;52362:46;;;;41389:40;52335:73;;52184:230;-1:-1:-1;;;52184:230:54:o;51555:274::-;51699:7;51804;51813:8;51787:35;;;;;;;;;:::i;:::-;;;;;;;;;;;;;51777:46;;;;;;51756:17;51749:25;;-1:-1:-1;;;;;51729:45:54;;41298:34;51729:45;:94;51721:103;;51714:110;;51555:274;;;;;:::o;16359:1506::-;16480:16;16499:59;16540:7;16549:8;16499:40;:59::i;:::-;16480:78;;16660:7;16616:100;16679:8;16696:5;16709:4;16616:100;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;16781:7:54;-1:-1:-1;;;;;;16781:35:54;;16777:62;;16826:7;;;16777:62;16984:22;17009:24;17025:7;17009:15;:24::i;:::-;16984:49;;17044:9;17039:328;17059:5;:12;17055:1;:16;17039:328;;;17086:9;17108:5;17114:1;17108:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;17129:41:54;-1:-1:-1;;;;;;17129:14:54;;548:6:66;17129:14:54;:41::i;:::-;17125:236;;;17182:170;;-1:-1:-1;;;17182:170:54;;3392:35:38;;;;;17182:54:54;;:170;;17258:7;;17287:8;;17314:5;;17337:4;;17182:170;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17125:236;-1:-1:-1;17073:3:54;;;;:::i;:::-;;;;17039:328;;;-1:-1:-1;17416:70:54;17448:8;17416:70;;;17479:4;17416:13;:70::i;:::-;17540:9;17535:326;17555:5;:12;17551:1;:16;17535:326;;;17582:9;17604:5;17610:1;17604:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;17625:40:54;-1:-1:-1;;;;;;17625:14:54;;657:6:66;17625:14:54;:40::i;:::-;17621:234;;;17677:169;;-1:-1:-1;;;17677:169:54;;3392:35:38;;;;;17677:53:54;;:169;;17752:7;;17781:8;;17808:5;;17831:4;;17677:169;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17621:234;-1:-1:-1;17569:3:54;;;;:::i;:::-;;;;17535:326;;36221:522;36357:12;36481:257;36520:79;36562:7;36571:8;36581:17;36520:41;:79::i;:::-;36617:93;36692:17;36617:66;36665:7;36674:8;36617:47;:66::i;:::-;:74;6743:16:49;;862:5;6743:16;785:5;6732:27;6692:68;6670:92;;;6555:218;36617:93:54;36728:1;36481:12;:257::i;2022:570:52:-;2113:5;2211:3;2202:5;:12;;:34;;;;;2225:4;:11;2218:3;:18;;2202:34;2196:85;;2264:4;2270:5;2277:3;2246:35;;-1:-1:-1;;;2246:35:52;;;;;;;;;;:::i;2196:85::-;2349:4;2339:15;;2396:17;2408:5;2339:15;2396:17;:::i;:::-;;-1:-1:-1;2419:12:52;2434:11;2440:5;2434:3;:11;:::i;:::-;-1:-1:-1;;;;;2570:15:52;2562:3;2550:15;;;;2549:37;;;;;;-1:-1:-1;;;;;2022:570:52:o;40037:220:68:-;40103:24;40135:30;40168:32;40186:6;40194:2;40135:30;40168:17;:32::i;850:162:53:-;939:68;945:14;961:6;826:4:48;816:15;;995:11:53;;939:5;:68::i;52752:301:54:-;52873:13;52965:82;52996:48;53026:7;53035:8;52996:29;:48::i;:::-;4572:21:53;;4466:137;4903:665;5315:4;5309:11;5356:4;5344:17;;-1:-1:-1;;5234:14:53;5403:26;;;5234:14;5230:28;5375:4;5368:63;5460:22;;;5493:51;5498:14;5475:6;5522;5530:13;5493:4;:51::i;2631:1127:70:-;2751:22;2781:21;2805;:11;2946:3:52;2924:25;;2850:104;2805:21:70;2781:45;-1:-1:-1;;;;;;3187:38:52;;2832:20:70;2994:11;3187:38:52;2994:11:70;2979:26;;;;:::i;:::-;;2965:40;;3114:4;3108:11;3099:20;;3157:4;3150:5;3146:16;3217:2;3204:11;3200:20;3186:12;3182:39;3176:4;3169:53;3265:11;3258:5;3251:26;3308:1;3285:463;3324:11;3321:1;3318:18;3285:463;;;3718:20;;3697:42;;3676:64;;3590:31;;;;3503:4;3485:23;;;;3411:1;3404:9;3285:463;;;3289:28;;3066:688;;;2631:1127;;;;;:::o;5933:2258:53:-;6050:10;;6046:1421;;6203:2;6193:6;:12;6189:122;;6266:2;6257:6;:11;6239:29;;;;6290:2;6280:12;;;;;;:::i;:::-;;;;6189:122;6401:10;;6397:1064;;6609:2;:11;;;6483:21;-1:-1:-1;;1080:1:65;1067:14;;1045:37;1043:40;6641:38:53;;6863:14;6857:21;6853:1;6845:6;6841:14;6837:42;7110:4;7106:9;7090:13;7084:20;7080:36;7011:4;6999:10;6995:21;6938:192;6911:13;6891:251;;7201:13;7191:6;:23;7187:36;;7216:7;;;;7187:36;-1:-1:-1;7364:1:53;7346:19;;;;;7419:23;;;;;7377:30;6397:1064;7496:253;7513:2;7503:6;:12;7496:253;;7607:21;;7585:44;;7682:1;7664:19;;;;-1:-1:-1;;7722:12:53;;;;7710:2;7693:19;7496:253;;;7817:10;;7813:374;;7837:12;-1:-1:-1;;1080:1:65;1067:14;;1045:37;1043:40;8119:20:53;;8034:21;;8030:32;;8141:9;;8115:36;7979:184;7936:237;;-1:-1:-1;5933:2258:53;;;;:::o;412:297:113:-;530:12;;577:4;566:16;;;560:23;;530:12;595:16;;592:111;;;-1:-1:-1;;669:4:113;665:17;;;;662:1;658:25;654:38;643:50;;412:297;-1:-1:-1;412:297:113:o;846:127::-;907:10;902:3;898:20;895:1;888:31;938:4;935:1;928:15;962:4;959:1;952:15;978:127;1039:10;1034:3;1030:20;1027:1;1020:31;1070:4;1067:1;1060:15;1094:4;1091:1;1084:15;1110:250;1195:1;1205:113;1219:6;1216:1;1213:13;1205:113;;;1295:11;;;1289:18;1276:11;;;1269:39;1241:2;1234:10;1205:113;;;-1:-1:-1;;1352:1:113;1334:16;;1327:27;1110:250::o;1365:271::-;1407:3;1445:5;1439:12;1472:6;1467:3;1460:19;1488:76;1557:6;1550:4;1545:3;1541:14;1534:4;1527:5;1523:16;1488:76;:::i;:::-;1618:2;1597:15;-1:-1:-1;;1593:29:113;1584:39;;;;1625:4;1580:50;;1365:271;-1:-1:-1;;1365:271:113:o;1641:592::-;1693:3;1724;1756:5;1750:12;1783:6;1778:3;1771:19;1809:4;1838:2;1833:3;1829:12;1822:19;;1894:2;1884:6;1881:1;1877:14;1870:5;1866:26;1862:35;1931:2;1924:5;1920:14;1952:1;1962:245;1976:6;1973:1;1970:13;1962:245;;;2063:2;2059:7;2051:5;2045:4;2041:16;2037:30;2032:3;2025:43;2089:38;2122:4;2113:6;2107:13;2089:38;:::i;:::-;2185:12;;;;2081:46;-1:-1:-1;2150:15:113;;;;1998:1;1991:9;1962:245;;;-1:-1:-1;2223:4:113;;1641:592;-1:-1:-1;;;;;;;1641:592:113:o;2238:912::-;2768:6;2757:9;2750:25;2811:6;2806:2;2795:9;2791:18;2784:34;2854:6;2849:2;2838:9;2834:18;2827:34;2897:6;2892:2;2881:9;2877:18;2870:34;2941:3;2935;2924:9;2920:19;2913:32;2731:4;2968:56;3019:3;3008:9;3004:19;2996:6;2968:56;:::i;:::-;3073:9;3065:6;3061:22;3055:3;3044:9;3040:19;3033:51;3101:43;3137:6;3129;3101:43;:::i;:::-;3093:51;2238:912;-1:-1:-1;;;;;;;;;2238:912:113:o;3337:127::-;3398:10;3393:3;3389:20;3386:1;3379:31;3429:4;3426:1;3419:15;3453:4;3450:1;3443:15;3469:128;3536:9;;;3557:11;;;3554:37;;;3571:18;;:::i;3602:168::-;3675:9;;;3706;;3723:15;;;3717:22;;3703:37;3693:71;;3744:18;;:::i;3994:414::-;4250:5;4245:3;4241:15;4233:6;4229:28;4218:9;4211:47;4294:6;4289:2;4278:9;4274:18;4267:34;4337:2;4332;4321:9;4317:18;4310:30;4192:4;4357:45;4398:2;4387:9;4383:18;4375:6;4357:45;:::i;4666:323::-;4875:6;4864:9;4857:25;4918:2;4913;4902:9;4898:18;4891:30;4838:4;4938:45;4979:2;4968:9;4964:18;4956:6;4938:45;:::i;4994:280::-;5193:2;5182:9;5175:21;5156:4;5213:55;5264:2;5253:9;5249:18;5241:6;5213:55;:::i;5469:125::-;5534:9;;;5555:10;;;5552:36;;;5568:18;;:::i;6211:492::-;6386:3;6424:6;6418:13;6440:66;6499:6;6494:3;6487:4;6479:6;6475:17;6440:66;:::i;:::-;6569:13;;6528:16;;;;6591:70;6569:13;6528:16;6638:4;6626:17;;6591:70;:::i;:::-;6677:20;;6211:492;-1:-1:-1;;;;6211:492:113:o;6708:435::-;6761:3;6799:5;6793:12;6826:6;6821:3;6814:19;6852:4;6881:2;6876:3;6872:12;6865:19;;6918:2;6911:5;6907:14;6939:1;6949:169;6963:6;6960:1;6957:13;6949:169;;;7024:13;;7012:26;;7058:12;;;;7093:15;;;;6985:1;6978:9;6949:169;;;-1:-1:-1;7134:3:113;;6708:435;-1:-1:-1;;;;;6708:435:113:o;7148:691::-;7482:3;7471:9;7464:22;7445:4;7509:57;7561:3;7550:9;7546:19;7538:6;7509:57;:::i;:::-;7614:9;7606:6;7602:22;7597:2;7586:9;7582:18;7575:50;7648:33;7674:6;7666;7648:33;:::i;:::-;7634:47;;7717:6;7712:2;7701:9;7697:18;7690:34;7772:9;7764:6;7760:22;7755:2;7744:9;7740:18;7733:50;7800:33;7826:6;7818;7800:33;:::i;:::-;7792:41;7148:691;-1:-1:-1;;;;;;;7148:691:113:o;7844:900::-;8299:6;8288:9;8281:25;8342:3;8337:2;8326:9;8322:18;8315:31;8262:4;8369:57;8421:3;8410:9;8406:19;8398:6;8369:57;:::i;:::-;8474:9;8466:6;8462:22;8457:2;8446:9;8442:18;8435:50;8508:33;8534:6;8526;8508:33;:::i;:::-;8494:47;;8577:6;8572:2;8561:9;8557:18;8550:34;8633:9;8625:6;8621:22;8615:3;8604:9;8600:19;8593:51;8661:33;8687:6;8679;8661:33;:::i;:::-;8653:41;;;8731:6;8725:3;8714:9;8710:19;8703:35;7844:900;;;;;;;;;:::o;8749:135::-;8788:3;8809:17;;;8806:43;;8829:18;;:::i;:::-;-1:-1:-1;8876:1:113;8865:13;;8749:135::o;8889:640::-;9140:6;9135:3;9128:19;9110:3;9166:2;9199;9194:3;9190:12;9231:6;9225:13;9296:2;9288:6;9284:15;9317:1;9327:175;9341:6;9338:1;9335:13;9327:175;;;9404:13;;9390:28;;9440:14;;;;9477:15;;;;9363:1;9356:9;9327:175;;;-1:-1:-1;9518:5:113;;8889:640;-1:-1:-1;;;;;;;8889:640:113:o;9534:127::-;9595:10;9590:3;9586:20;9583:1;9576:31;9626:4;9623:1;9616:15;9650:4;9647:1;9640:15;9666:512;9917:2;9906:9;9899:21;9880:4;9943:56;9995:2;9984:9;9980:18;9972:6;9943:56;:::i;:::-;10047:14;10039:6;10035:27;10030:2;10019:9;10015:18;10008:55;10111:9;10103:6;10099:22;10094:2;10083:9;10079:18;10072:50;10139:33;10165:6;10157;10139:33;:::i;:::-;10131:41;9666:512;-1:-1:-1;;;;;;9666:512:113:o;10183:617::-;10494:6;10483:9;10476:25;10537:3;10532:2;10521:9;10517:18;10510:31;10457:4;10564:57;10616:3;10605:9;10601:19;10593:6;10564:57;:::i;:::-;10669:14;10661:6;10657:27;10652:2;10641:9;10637:18;10630:55;10733:9;10725:6;10721:22;10716:2;10705:9;10701:18;10694:50;10761:33;10787:6;10779;10761:33;:::i;10805:360::-;11008:2;10997:9;10990:21;10971:4;11028:45;11069:2;11058:9;11054:18;11046:6;11028:45;:::i;:::-;11104:2;11089:18;;11082:34;;;;-1:-1:-1;11147:2:113;11132:18;11125:34;11020:53;10805:360;-1:-1:-1;10805:360:113:o;:::-;505:3670:82;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "505:3670:82:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3989:258:57;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4426:150:96;;;;;;:::i;:::-;;:::i;:::-;;881:300:82;;;:::i;592:285::-;;;:::i;3769:309:96:-;;;;;;:::i;:::-;;:::i;1853:207::-;;;;;;:::i;:::-;;:::i;3000:253::-;;;;;;:::i;:::-;;:::i;5256:244:57:-;;;;;;:::i;:::-;;:::i;2170:134:24:-;;;:::i;:::-;;;;;;;:::i;892:274:96:-;;;;;;:::i;:::-;;:::i;2191:736:82:-;;;:::i;2101:249:96:-;;;;;;:::i;:::-;;:::i;2391:261::-;;;;;;:::i;:::-;;:::i;758:156:57:-;;;;;;:::i;:::-;;:::i;:::-;;;9038:25:113;;;9026:2;9011:18;758:156:57;8859:210:113;1454:733:82;;;:::i;2939:133:24:-;;;:::i;2640:141::-;;;:::i;2651:288:57:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;3655:518:82:-;;;:::i;3348:303::-;;;:::i;7772:295:57:-;;;;;;:::i;:::-;;:::i;3629:136:96:-;;;;;;:::i;:::-;;:::i;4155:192::-;;;;;;:::i;:::-;;:::i;2456:178:24:-;;;:::i;:::-;;;;;;;:::i;3139:205:82:-;;;:::i;2310:140:24:-;;;:::i;:::-;;;;;;;:::i;4644:265:57:-;;;;;;:::i;:::-;;:::i;2787:146:24:-;;;:::i;6514:258:57:-;;;;;;:::i;:::-;;:::i;5962:216::-;;;;;;:::i;:::-;;:::i;1220:214:96:-;;;;;;:::i;:::-;;:::i;1875:141:24:-;;;:::i;1819:584:18:-;;;:::i;:::-;;;18361:14:113;;18354:22;18336:41;;18324:2;18309:18;1819:584:18;18196:187:113;1489:323:96;;;;;;:::i;:::-;;:::i;927:85:55:-;994:13;927:85;;1185:265:82;;;:::i;1953:246:57:-;;;;;;:::i;:::-;;:::i;3418:216::-;;;;;;:::i;:::-;;:::i;1433:143::-;;;;;;:::i;:::-;;:::i;3316:258:96:-;;;;;;:::i;:::-;;:::i;2022:142:24:-;;;:::i;1101:151:57:-;;;;;;:::i;:::-;;:::i;2701:235:96:-;;;;;;:::i;:::-;;:::i;1572:26:18:-;;;;;;;;;2931:204:82;;;:::i;3989:258:57:-;4148:17;4180:62;4199:7;4208:8;;4180:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4218:10:57;;-1:-1:-1;4230:11:57;;-1:-1:-1;4180:18:57;;-1:-1:-1;4180:62:57:i;:::-;4173:69;3989:258;-1:-1:-1;;;;;;3989:258:57:o;4426:150:96:-;4520:51;4550:7;4559:11;4520:29;:51::i;:::-;4426:150;;:::o;881:300:82:-;1056:68:104;;;-1:-1:-1;;;1056:68:104;;;21241:92:113;-1:-1:-1;;;21349:11:113;;;21342:100;-1:-1:-1;;;21458:12:113;;;21451:101;935:33:82;;971:38;;21568:12:113;1056:68:104;;;;;;;;;;;;1048:77;;;:::i;:::-;971:24:82;:38::i;:::-;935:74;-1:-1:-1;1015:31:82;-1:-1:-1;;;1049:22:82;1015:56;;1078:98;1108:21;1097:33;;;;;;9038:25:113;;9026:2;9011:18;;8859:210;1097:33:82;;;;-1:-1:-1;;1097:33:82;;;;;;;;;1087:44;;1097:33;1087:44;;;;1143:31;;;9038:25:113;;;1087:44:82;9011:18:113;1143:31:82;;;;;;;;;;;;1133:42;;;;;;1078:8;:98::i;592:285::-;622:17;:15;:17::i;:::-;711:15;;;724:1;711:15;;;;;;;;660:23;;646:11;;711:15;724:1;711:15;;;;;;;;;;-1:-1:-1;711:15:82;689:37;;741:1;732:3;736:1;732:6;;;;;;;;:::i;:::-;;;;;;:10;;;;;;;;;;;757:1;748:3;752:1;748:6;;;;;;;;:::i;:::-;:10;;;;:6;;;;;;;;;;:10;764:46;;;;;;;;;;;;;;;;;;;;816:56;833:3;843:1;852;860:3;764:46;816:9;:56::i;:::-;616:261;;;592:285::o;3769:309:96:-;3982:91;4006:7;4015:11;4028:9;4039:11;3982:91;4052:8;;3982:91;:::i;:::-;;4062:10;;3982:91;:::i;:::-;:23;:91::i;:::-;3769:309;;;;;;;;:::o;1853:207::-;2000:55;2019:7;2028:8;;2000:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2000:55:96;;;;;;;;;;;;;;;;;;;;;;2038:10;;-1:-1:-1;2000:55:96;-1:-1:-1;2050:4:96;;;;;;2000:55;;2050:4;;;;2000:55;;;;;;;;;-1:-1:-1;2000:18:96;;-1:-1:-1;;;2000:55:96:i;:::-;1853:207;;;;;;:::o;3000:253::-;3170:78;3199:7;3208:8;;3170:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3170:78:96;;;;;;;;;;;;;;;;;;;;;;3218:17;;-1:-1:-1;3170:78:96;-1:-1:-1;3237:10:96;;;;;;3170:78;;3237:10;;;;3170:78;;;;;;;;;-1:-1:-1;3170:28:96;;-1:-1:-1;;;3170:78:96:i;5256:244:57:-;5400:17;5432:63;5458:7;5467:8;;5432:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5477:17:57;;-1:-1:-1;5432:25:57;;-1:-1:-1;;5432:63:57:i;:::-;5425:70;5256:244;-1:-1:-1;;;;;5256:244:57:o;2170:134:24:-;2217:33;2281:16;2262:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2262:35:24;;;;;;;;;;;;;;;;;;;;;;;2170:134;:::o;892:274:96:-;1082:79;1102:7;1111:8;;1082:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1082:79:96;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1121:10:96;;-1:-1:-1;1121:10:96;;;;1082:79;;1121:10;;;;1082:79;;;;;;;;;-1:-1:-1;;1082:79:96;;;;;;;;;;;;;;;;;;;;;;1133:14;;-1:-1:-1;1082:79:96;-1:-1:-1;1149:11:96;;;;;;1082:79;;1149:11;;;;1082:79;;;;;;;;;-1:-1:-1;1082:19:96;;-1:-1:-1;;;1082:79:96:i;2191:736:82:-;2303:15;;;2316:1;2303:15;;;;;;;;2254:20;;2240:11;;2303:15;2316:1;2303:15;;;;;;;;;;-1:-1:-1;2303:15:82;2281:37;;2333:1;2324:3;2328:1;2324:6;;;;;;;;:::i;:::-;;;;;;:10;;;;;;;;;;;2349:1;2340:3;2344:1;2340:6;;;;;;;;:::i;:::-;;;;;;:10;;;;;;;;;;;2356:15;:31;;;;;;;;;;;;;;;;;;;2394:54;;;;;;;;;;;;;;;;;;:14;:54::i;:::-;2454:57;2472:3;2482:1;2491;2499:3;2507:1;2454:10;:57::i;:::-;2517:14;:12;:14::i;:::-;2538:56;;;;;;;;;;;;;;;;;;:14;:56::i;:::-;2600:22;2625:15;2636:3;2625:10;:15::i;:::-;2600:40;;2646:14;:12;:14::i;:::-;2676:9;;2667:22;;;;2687:1;2667:8;:22::i;:::-;2695:23;2704:5;:10;;;2695:23;;2716:1;2695:8;:23::i;:::-;2724:25;2733:5;:9;;;2743:1;2733:12;;;;;;;;:::i;:::-;;;;;;;2724:25;;2747:1;2724:8;:25::i;:::-;2755;2764:5;:9;;;2774:1;2764:12;;;;;;;;:::i;:::-;;;;;;;2755:25;;2778:1;2755:8;:25::i;:::-;2786:20;2795:5;:7;;;2804:1;2786:8;:20::i;:::-;2813:59;;;;;;;;;;;;;;;;;;:14;:59::i;:::-;2878:24;2898:3;2878:19;:24::i;:::-;2908:14;:12;:14::i;:::-;2234:693;;;;2191:736::o;2101:249:96:-;2277:68;2296:7;2305:8;;2277:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2277:68:96;;;;;;;;;;;;;;;;;;;;;;2315:10;;-1:-1:-1;2277:68:96;-1:-1:-1;2327:4:96;;;;;;2277:68;;2327:4;;;;2277:68;;;;;;;;;-1:-1:-1;2333:11:96;;-1:-1:-1;2277:18:96;;-1:-1:-1;;2277:68:96:i;:::-;2101:249;;;;;;;:::o;2391:261::-;2573:74;2598:7;2607:8;;2573:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2573:74:96;;;;;;;;;;;;;;;;;;;;;;2617:10;;-1:-1:-1;2573:74:96;-1:-1:-1;2629:4:96;;;;;;2573:74;;2629:4;;;;2573:74;;;;;;;;;-1:-1:-1;2635:11:96;;-1:-1:-1;2573:24:96;;-1:-1:-1;;2573:74:96:i;758:156:57:-;831:23;876:33;901:7;876:24;:33::i;:::-;862:47;758:156;-1:-1:-1;;758:156:57:o;1454:733:82:-;1566:15;;;1579:1;1566:15;;;;;;;;1517:20;;1503:11;;1566:15;1579:1;1566:15;;;;;;;;;;-1:-1:-1;1566:15:82;1544:37;;1596:1;1587:3;1591:1;1587:6;;;;;;;;:::i;:::-;;;;;;:10;;;;;;;;;;;1612:1;1603:3;1607:1;1603:6;;;;;;;;:::i;:::-;;;;;;:10;;;;;;;;;;;1619:15;:31;;;;;;;;;;;;;;;;;;;1657:54;;;;;;;;;;;;;;;;;;:14;:54::i;:::-;1717:56;1734:3;1744:1;1753;1761:3;1769:1;1717:9;:56::i;:::-;1779:14;:12;:14::i;:::-;1800:56;;;;;;;;;;;;;;;;;;:14;:56::i;:::-;1862:22;1887:14;1897:3;1887:9;:14::i;:::-;1862:39;;1907:14;:12;:14::i;:::-;1937:9;;1928:22;;;;1948:1;1928:8;:22::i;:::-;1956:23;1965:5;:10;;;1956:23;;1977:1;1956:8;:23::i;:::-;1985:25;1994:5;:9;;;2004:1;1994:12;;;;;;;;:::i;1985:25::-;2016;2025:5;:9;;;2035:1;2025:12;;;;;;;;:::i;2016:25::-;2047:20;2056:5;:7;;;2065:1;2047:8;:20::i;:::-;2074:59;;;;;;;;;;;;;;;;;;:14;:59::i;:::-;2139:23;2158:3;2139:18;:23::i;2939:133:24:-;2985:33;3049:16;3030:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3030:35:24;;;;;;;;;;;;;;;;;;;;;;2939:133;:::o;2640:141::-;2688:35;2756:18;2735:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2735:39:24;;;;;;;;;;;;;;;;;;;;;;2640:141;:::o;2651:288:57:-;2789:23;2814:28;2844:24;2883:51;2903:7;2912:8;;2883:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2922:11:57;;-1:-1:-1;2883:19:57;;-1:-1:-1;;2883:51:57:i;:::-;2876:58;;;;;;2651:288;;;;;;;;:::o;3655:518:82:-;3712:15;;;3725:1;3712:15;;;;;;;;3690:19;;3712:15;;;;;;;;;;-1:-1:-1;3712:15:82;3690:37;;3742:1;3733:3;3737:1;3733:6;;;;;;;;:::i;:::-;;;;;;:10;;;;;;;;;;;3758:1;3749:3;3753:1;3749:6;;;;;;;;:::i;:::-;:10;;;;:6;;;;;;;;;;:10;3765:31;;;;;;;;;;;;;;;;;;;;:15;;;3887:26;3900:1;3903;3906:3;3765:31;3887:12;:26::i;:::-;3803:110;;;;;;3919:67;3928:10;3919:67;;;;;;;;;;;;;;;;;:8;:67::i;:::-;3992:104;4001:14;3992:104;:8;:104::i;:::-;4102:66;4111:11;4102:66;;;;;;;;;;;;;;;;;:8;:66::i;:::-;3684:489;;;;;3655:518::o;3348:303::-;3417:70;;;;;;;;3434:1;3417:70;;3443:1;3417:70;;;;;;3451:15;;;;;;;;;;-1:-1:-1;;3417:70:82;;;3451:15;;;;;;;;;;;;-1:-1:-1;3451:15:82;3417:70;;;;;;;;;;;;;;;;;;;;;;;;3392:95;;3508:1;3493:5;:9;;;3503:1;3493:12;;;;;;;;:::i;:::-;;;;;;:16;;;;;;;;;;;3530:1;3515:5;:9;;;3525:1;3515:12;;;;;;;;:::i;:::-;;;;;;:16;;;;;;;;;;;3538:65;;;;;;;;;;;;;;;;;;:14;:65::i;:::-;3609:17;;:9;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3621:5;;3609:17;;;;;;;;;:::i;:::-;-1:-1:-1;3609:17:82;;;;;;;;;;;;:::i;:::-;;;;;3632:14;:12;:14::i;:::-;3386:265;3348:303::o;7772:295:57:-;7955:12;7982:80;8013:7;8022:8;8032:17;8051:5;8058:3;7982:30;:80::i;3629:136:96:-;3719:41;3742:7;3751:8;3719:22;:41::i;4155:192::-;4273:69;4301:7;4310:11;4323:18;4273:27;:69::i;2456:178:24:-;2512:48;2601:26;2572:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2572:55:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2456:178;:::o;3139:205:82:-;3186:11;3200:23;3186:37;;3230:59;;;;;;;;;;;;;;;;;;:14;:59::i;:::-;3295:24;3315:3;3295:19;:24::i;:::-;3325:14;:12;:14::i;2310:140:24:-;2358:34;2425:18;2404:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4644:265:57;4809:12;4836:68;4861:7;4870:8;;4836:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4880:10:57;;-1:-1:-1;4892:11:57;;-1:-1:-1;4836:24:57;;-1:-1:-1;4836:68:57:i;2787:146:24:-;2835:40;2908:18;2887:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2887:39:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6514:258:57;6677:7;6699:68;6724:7;6733:8;6743:10;6755:11;6699:24;:68::i;6514:258::-;;;;;;;:::o;5962:216::-;6096:7;6118:55;6143:7;6152:8;6162:10;6118:24;:55::i;:::-;6111:62;;5962:216;;;;;;:::o;1220:214:96:-;1371:58;1398:7;1407:8;;1371:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1371:58:96;;;;;;;;;;;;;;;;;;;;;;1417:5;;-1:-1:-1;1371:58:96;-1:-1:-1;1424:4:96;;;;;;1371:58;;1424:4;;;;1371:58;;;;;;;;;-1:-1:-1;1371:26:96;;-1:-1:-1;;;1371:58:96:i;1875:141:24:-;1924:34;1991:18;1970:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:18;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:18;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;26809:74:113;;;2221:17:18;26899:18:113;;;26892:34;2196:43:18;;;;;;;;;26782:18:113;;;2196:43:18;;;-1:-1:-1;;1671:64:18;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:18;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:18:o;1489:323:96:-;1705:102;1733:7;1742:8;;1705:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1705:102:96;;;;;;;;;;;;;;;;;;;;;;1752:17;;-1:-1:-1;1771:16:96;;-1:-1:-1;1789:11:96;;1802:4;;;;;;1705:102;;1802:4;;;;1705:102;;;;;;;;;-1:-1:-1;1705:27:96;;-1:-1:-1;;;1705:102:96:i;1185:265:82:-;1056:68:104;;;-1:-1:-1;;;1056:68:104;;;21241:92:113;-1:-1:-1;;;21349:11:113;;;21342:100;-1:-1:-1;;;21458:12:113;;;21451:101;1234:23:82;;1260:38;;21568:12:113;1056:68:104;;;;;;;;;;;;1048:77;;;:::i;:::-;1260:24:82;:38::i;:::-;1234:64;;1304:21;1328:22;:20;:22::i;1953:246:57:-;2062:23;2087:28;2117:24;2156:38;2176:7;2185:8;;2156:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2156:19:57;;-1:-1:-1;;;2156:38:57:i;:::-;2149:45;;;;;;1953:246;;;;;;;;:::o;3418:216::-;3548:17;3580:49;3599:7;3608:8;;3580:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3618:10:57;;-1:-1:-1;3580:18:57;;-1:-1:-1;;3580:49:57:i;1433:143::-;1504:16;1540:31;1563:7;1540:22;:31::i;3316:258:96:-;3485:84;3515:7;3524:8;;3485:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3534:17:96;;-1:-1:-1;3553:15:96;;-1:-1:-1;3485:29:96;;-1:-1:-1;3485:84:96:i;2022:142:24:-;2071:35;2139:18;2118:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2118:39:24;;;;;;;;;;;;;;;;;;;;;;2022:142;:::o;1101:151:57:-;1174:18;1214:33;1239:7;1214:24;:33::i;2701:235:96:-;2862:69;2888:7;2897:8;;2862:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2862:69:96;;;;;;;;;;;;;;;;;;;;;;2907:17;;-1:-1:-1;2862:69:96;-1:-1:-1;2926:4:96;;;;;;2862:69;;2926:4;;;;2862:69;;;;;;;;;-1:-1:-1;2862:25:96;;-1:-1:-1;;;2862:69:96:i;2931:204:82:-;2978:11;2992:23;2978:37;;3022:59;;;;;;;;;;;;;;;;;;:14;:59::i;:::-;3087:23;3106:3;3087:18;:23::i;34165:440:54:-;34316:12;34353:29;:11;:27;:29::i;:::-;34340:10;:42;;;34336:265;;;34399:82;34438:7;34447:8;34457:10;34469:11;34399:38;:82::i;:::-;34392:89;;;;34336:265;34509:85;34525:7;34534:8;34563:29;:11;:27;:29::i;:::-;34544:49;;:10;:49;:::i;:::-;34509:15;:85::i;10496:170::-;1047:73:62;;;-1:-1:-1;;;1047:73:62;;;21241:92:113;-1:-1:-1;;;21349:11:113;;;21342:100;1098:21:62;21458:12:113;;;21451:101;10584:77:54;;21568:12:113;1047:73:62;;;;;;;;;;;;1039:82;;;:::i;:::-;10631:7:54;10648:11;10584:27;:77::i;4858:651::-;1147:69:63;;;-1:-1:-1;;;1147:69:63;;;21241:92:113;-1:-1:-1;;;21349:11:113;;;21342:100;-1:-1:-1;;;21458:12:113;;;21451:101;4925:11:54;;21568:12:113;1147:69:63;;;;;;;;;;;;1139:78;;;:::i;:::-;5179:7:54;5161:62;5157:112;;-1:-1:-1;1324:66:63;;4858:651:54;-1:-1:-1;4858:651:54:o;5157:112::-;1147:69:63;;;-1:-1:-1;;;1147:69:63;;;21241:92:113;-1:-1:-1;;;21349:11:113;;;21342:100;-1:-1:-1;;;21458:12:113;;;21451:101;5313:183:54;;5359:83;;21568:12:113;1147:69:63;;;;;;;;;;;;1139:78;;;:::i;:::-;5433:7:54;5359:40;:83::i;:::-;5462:2;5484:1;5313:17;:183::i;4095:277:18:-;4163:1;4158;:6;4154:212;;4185:44;;;;;28493:2:113;28475:21;;;28532:2;28512:18;;;28505:30;28571:34;28566:2;28551:18;;28544:62;28642:7;28637:2;28622:18;;28615:35;28682:3;28667:19;;28291:401;4185:44:18;;;;;;;;4248:34;4280:1;4248:34;;;;;;:::i;:::-;;;;;;;;4301;4333:1;4301:34;;;;;;:::i;:::-;;;;;;;;4349:6;:4;:6::i;3291:154:104:-;1056:68;;;-1:-1:-1;;;1056:68:104;;;21241:92:113;-1:-1:-1;;;21349:11:113;;;21342:100;-1:-1:-1;;;21458:12:113;;;21451:101;3327:113:104;;21568:12:113;1056:68:104;;;;;;;;;;;;1048:77;;;:::i;:::-;-1:-1:-1;;;3375:14:104;:12;:14::i;:::-;3391:16;:14;:16::i;:::-;3409:13;:11;:13::i;:::-;3424:15;:13;:15::i;3327:113::-;3291:154::o;15848:444::-;15953:24;15980:23;15993:3;15998:4;15980:12;:23::i;:::-;15953:50;;16010:29;16042:21;16056:3;16061:1;16042:13;:21::i;:::-;16010:53;;16069:25;16097:21;16111:3;16116:1;16097:13;:21::i;:::-;16154:16;;;16168:1;16154:16;;;;;;;;;16069:49;;-1:-1:-1;16125:26:104;;16154:16;;;;;;;;;;;;-1:-1:-1;16154:16:104;16125:45;;16191:3;16176:9;16186:1;16176:12;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;;1056:68;;;-1:-1:-1;;;1056:68:104;;;21241:92:113;-1:-1:-1;;;21349:11:113;;;21342:100;-1:-1:-1;;;21458:12:113;;;21451:101;1056:68:104;;;;;;;;;;21568:12:113;;1056:68:104;;16201:86;;1048:77;;;:::i;:::-;16233:9;16244:11;16257:15;16274:12;16201:21;:86::i;:::-;15947:345;;;;15848:444;;;;;:::o;7479:1764:54:-;-1:-1:-1;;;7739:7:54;:35;;;;;;:83;;-1:-1:-1;7799:23:54;7778:7;:44;;;;7739:83;7735:209;;;-1:-1:-1;;;7894:7:54;7927;7910:25;;;;;;29892:19:113;;29936:2;29927:12;;29731:214;7910:25:54;;;;-1:-1:-1;;7910:25:54;;;;;;;;;;7839:98;;;;;;;;;;:::i;:::-;;;;;;;;7735:209;7990:43;:11;8025:5;7990:20;:43::i;:::-;8074:40;:9;8107:4;8074:18;:40::i;:::-;8120:43;:11;8155:5;8120:20;:43::i;:::-;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;8251:8:54;:15;:40;8247:148;;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;8372:15:54;;8308:80;;;;;;;;30593:25:113;;;;30634:18;;;30627:34;30566:18;;8308:80:54;30419:248:113;8247:148:54;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;8445:10:54;:17;:44;8441:158;;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;8574:17:54;;8506:86;;;;;;;;30593:25:113;;;;30634:18;;;30627:34;30566:18;;8506:86:54;30419:248:113;8441:158:54;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;8656:50:54;8652:171;;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;1576:38:64;5165:60:51;;;1408:34:64;5088:59:51;;;5082:144;5067:159;;8723:93:54;;;;;;;;30593:25:113;;;;30634:18;;;30627:34;30566:18;;8723:93:54;30419:248:113;8652:171:54;8885:31;8908:7;8885:22;:31::i;:::-;8881:140;;;8971:7;9004;8987:25;;;;;;29892:19:113;;29936:2;29927:12;;29731:214;8987:25:54;;;;-1:-1:-1;;8987:25:54;;;;;;;;;;8933:81;;;;;;;;;:::i;8881:140::-;9062:103;9074:7;9083:11;9096:9;9107:11;9131:8;9120:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;9153:10;9142:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;9062:11;:103::i;:::-;9201:37;9224:7;9233:4;9201:22;:37::i;20119:192::-;20236:70;20245:7;20254:8;20264:10;20276:4;20282:23;20297:7;20282:14;:23::i;:::-;20236:8;:70::i;27809:790::-;28068:36;28107:66;28155:7;28164:8;28107:47;:66::i;:::-;28068:105;-1:-1:-1;28179:26:54;28215:49;28068:105;28246:17;6743:16:49;;862:5;6743:16;785:5;6732:27;6692:68;6670:92;;;6555:218;28215:49:54;28179:86;;28303:291;28357:7;28382:8;28417:17;28467:19;28508:1;28523:10;28565:22;28303:36;:291::i;36221:522::-;36357:12;36481:257;36520:79;36562:7;36571:8;36581:17;36520:41;:79::i;:::-;36617:93;36692:17;36617:66;36665:7;36674:8;36617:47;:66::i;:::-;:74;6743:16:49;;862:5;6743:16;785:5;6732:27;6692:68;6670:92;;;6555:218;36617:93:54;36728:1;36481:12;:257::i;11576:285::-;11762:94;11772:7;11781:8;11791:10;11803:14;11819:11;11832:23;11847:7;11832:14;:23::i;:::-;11762:9;:94::i;330:580:16:-;394:39;;;;;;;;;31205:21:113;;;;31262:2;31242:18;;;31235:30;31301:22;31281:18;;;31274:50;309:37:19;31376:20:113;;;31369:52;394:8:16;;;;31341:19:113;;394:39:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;389:53;;330:580;:::o;389:53::-;468:22;462:36;;;;;:::i;:::-;;;502:1;462:41;558:22;511:150;;;;;;;;:::i;:::-;;;;;;;;;;;;;447:220;;;;;;;;;;;;;;:::i;:::-;;681:12;694:4;681:18;;;;;;:::i;:::-;;;;;;;;;;;;;;703:1;681:23;736:4;706:67;;;;;;;;:::i;:::-;;;;;;;;;;;;;673:101;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;780:22:16;:29;805:4;780:22;:29;:::i;:::-;;317:28:19;309:37;;-1:-1:-1;;;;;815:19:16;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;868:9;842:23;:35;883:22;;;;;;;;:20;;;;:22;;;;;309:37:19;;883:22:16;;;;;;;309:37:19;883:20:16;:22;;;;;;;;;;;;;;;;;;;;;;;;;;16364:457:104;16470:24;16497:23;16510:3;16515:4;16497:12;:23::i;:::-;16470:50;;16527:29;16559:21;16573:3;16578:1;16559:13;:21::i;:::-;16527:53;;16586:25;16614:21;16628:3;16633:1;16614:13;:21::i;:::-;16671:16;;;16685:1;16671:16;;;;;;;;;16586:49;;-1:-1:-1;16642:26:104;;16671:16;;;;;;;;;;;;-1:-1:-1;16671:16:104;16642:45;;16708:3;16693:9;16703:1;16693:12;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;;1056:68;;;-1:-1:-1;;;1056:68:104;;;21241:92:113;-1:-1:-1;;;21349:11:113;;;21342:100;-1:-1:-1;;;21458:12:113;;;21451:101;1056:68:104;;;;;;;;;;21568:12:113;;1056:68:104;;16718:98;;1048:77;;;:::i;:::-;16748:9;16759:11;16772:15;16789:12;-1:-1:-1;;;16718:19:104;:98::i;914:534:16:-;953:11;967:9;987:39;;;;;;;;;31205:21:113;;;;31262:2;31242:18;;;31235:30;31301:22;31281:18;;;31274:50;309:37:19;31376:20:113;;;31369:52;953:23:16;;-1:-1:-1;987:8:16;;;;31341:19:113;;987:39:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;982:53;;1028:7;914:534::o;982:53::-;1151:15;1201:3;1195;1169:23;;:29;;;;:::i;:::-;:35;;;;:::i;:::-;:39;;1207:1;1169:39;:::i;:::-;1151:57;;1232:1;1222:7;:11;1214:49;;;;;;;34568:2:113;1214:49:16;;;34550:21:113;34607:2;34587:18;;;34580:30;34646:27;34626:18;;;34619:55;34691:18;;1214:49:16;34366:349:113;1214:49:16;1308:7;1269:12;1282:22;1269:36;;;;;;:::i;:::-;;;;;;;;;;;;;;:46;1321:16;:45;;;;;;;-1:-1:-1;1321:45:16;;;;;;;1343:22;1321:45;;:::i;:::-;;1372:38;1387:22;1372:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:38::i;:::-;1416:27;;;;;;;;;-1:-1:-1;1416:27:16;;:22;;:27;;:22;:27;:::i;15386:390:104:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15496:16:104;;15510:1;15496:16;;;;;;;;;-1:-1:-1;;;;15496:16:104;;;;;;;;;;;;;-1:-1:-1;15496:16:104;15467:45;;15533:3;15518:9;15528:1;15518:12;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;;1056:68;;;-1:-1:-1;;;1056:68:104;;;21241:92:113;-1:-1:-1;;;21349:11:113;;;21342:100;-1:-1:-1;;;21458:12:113;;;21451:101;1056:68:104;;;;;;;;;;21568:12:113;;1056:68:104;;-1:-1:-1;;;;;;15630:78:104;;1048:77;;;:::i;:::-;15673:9;-1:-1:-1;;;15630:19:104;:78::i;:::-;15543:165;;;;;;15721:50;15728:11;15741:15;15758:12;15721:6;:50::i;5209:262:18:-;5271:1;5266;:6;5262:203;;5293:41;;;;;36683:2:113;36665:21;;;36722:2;36702:18;;;36695:30;36761:34;36756:2;36741:18;;36734:62;36832:4;36827:2;36812:18;;36805:32;36869:3;36854:19;;36481:398;5293:41:18;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;17902:344::-;18038:1;18021:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;18011:30;;;;;;18004:1;17987:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;17977:30;;;;;;:64;17973:267;;18062:43;;;;;37792:2:113;37774:21;;;37831:2;37811:18;;;37804:30;37870:34;37865:2;37850:18;;37843:62;37941:6;37936:2;37921:18;;37914:34;37980:3;37965:19;;37590:400;18062:43:18;;;;;;;;18124:33;18155:1;18124:33;;;;;;:::i;:::-;;;;;;;;18176;18207:1;18176:33;;;;;;:::i;19620:189:104:-;19700:16;;;19714:1;19700:16;;;;;;;;;19671:26;;19700:16;;;;;;;;;;;-1:-1:-1;19700:16:104;19671:45;;19737:3;19722:9;19732:1;19722:12;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;;1056:68;;;-1:-1:-1;;;1056:68:104;;;21241:92:113;-1:-1:-1;;;21349:11:113;;;21342:100;-1:-1:-1;;;21458:12:113;;;21451:101;1056:68:104;;;;;;;;;;21568:12:113;;1056:68:104;;19747:57;;1048:77;;;:::i;:::-;19780:9;-1:-1:-1;;;19747:22:104;:57::i;21210:409:54:-;21393:29;:11;:27;:29::i;:::-;21380:10;:42;;;21376:239;;;21432:64;21447:7;21456:8;21466:10;21478:4;21484:11;21432:14;:64::i;:::-;21376:239;;;21517:91;21533:7;21542:8;21571:29;:11;:27;:29::i;:::-;21552:49;;:10;:49;:::i;:::-;21603:4;21517:15;:91::i;22277:355::-;22449:178;22483:7;22508:8;22538:63;22577:11;22590:10;22538:38;:63::i;:::-;22616:4;22449:16;:178::i;14947:391:104:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15056:16:104;;15070:1;15056:16;;;;;;;;;-1:-1:-1;;;;15056:16:104;;;;;;;;;;;;;-1:-1:-1;15056:16:104;15027:45;;15093:3;15078:9;15088:1;15078:12;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;;1056:68;;;-1:-1:-1;;;1056:68:104;;;21241:92:113;-1:-1:-1;;;21349:11:113;;;21342:100;-1:-1:-1;;;21458:12:113;;;21451:101;1056:68:104;;;;;;;;;;21568:12:113;;1056:68:104;;-1:-1:-1;;;;;;15190:80:104;;1048:77;;;:::i;:::-;15235:9;-1:-1:-1;;;15190:21:104;:80::i;19383:176::-;19462:16;;;19476:1;19462:16;;;;;;;;;19433:26;;19462:16;;;;;;;;;;;-1:-1:-1;19462:16:104;19433:45;;19499:3;19484:9;19494:1;19484:12;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;;1056:68;;;-1:-1:-1;;;1056:68:104;;;21241:92:113;-1:-1:-1;;;21349:11:113;;;21342:100;-1:-1:-1;;;21458:12:113;;;21451:101;1056:68:104;;;;;;;;;;21568:12:113;;1056:68:104;;19509:45;;1048:77;;;:::i;:::-;19544:9;19509:24;:45::i;31801:1314:54:-;31931:23;31956:28;31986:24;32052:20;32075:30;:11;:28;:30::i;:::-;32052:53;;32166:65;32199:7;32208:8;32218:12;32166:32;:65::i;:::-;32153:78;;32295:24;32322:30;:11;:28;:30::i;:::-;32295:57;-1:-1:-1;32362:20:54;;32358:753;;32455:66;32503:7;32512:8;32455:47;:66::i;:::-;32438:83;-1:-1:-1;6126:59:49;;;32573:33:54;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;32573:33:54;-1:-1:-1;32559:47:54;-1:-1:-1;826:4:48;816:15;;32614:21:54;32678:427;32696:16;32692:1;:20;;;32678:427;;;32729:27;32759:63;32801:7;32810:8;32820:1;32759:41;:63::i;:::-;32729:93;-1:-1:-1;32832:14:54;32849:25;:14;32872:1;6743:16:49;;862:5;6743:16;785:5;6732:27;6692:68;6670:92;;;6555:218;32849:25:54;32832:42;;32884:110;32915:19;32944:6;32960:1;32978:13;32884:12;:110::i;:::-;33073:23;33090:6;33073:23;;:::i;:::-;;;32719:386;;32714:3;;;;;:::i;:::-;;;;32678:427;;;;32384:727;32358:753;32012:1103;;31801:1314;;;;;;;:::o;21244:400:104:-;21367:12;21381:13;21396:12;21416:24;21443:23;21456:3;21461:4;21443:12;:23::i;:::-;21416:50;;21473:29;21505:21;21519:3;21524:1;21505:13;:21::i;:::-;21473:53;;21532:25;21560:21;21574:3;21579:1;21560:13;:21::i;:::-;21596:11;;21609:15;;-1:-1:-1;21596:11:104;;-1:-1:-1;21244:400:104;-1:-1:-1;;;;;;21244:400:104:o;1299:99:20:-;1376:15;1386:1;1389;1376:9;:15::i;39944:995:54:-;40121:12;40345:28;40376:66;40424:7;40433:8;40376:47;:66::i;:::-;40345:97;-1:-1:-1;40448:19:54;40470:41;40345:97;40493:17;6743:16:49;;862:5;6743:16;785:5;6732:27;6692:68;6670:92;;;6555:218;40470:41:54;40448:63;;40530:11;40521:5;:20;;:41;;;;40551:11;40545:3;:17;40521:41;40517:157;;;40615:11;40637;40628:5;:20;;:38;;40659:7;40665:1;40659:3;:7;:::i;:::-;40628:38;;;40651:5;40628:38;40579:88;;;;;;;;30593:25:113;;;;30634:18;;;30627:34;30566:18;;40579:88:54;30419:248:113;40517:157:54;40744:16;40763:79;40805:7;40814:8;40824:17;40763:41;:79::i;:::-;40744:98;-1:-1:-1;40856:78:54;40744:98;40905:11;40911:5;40905:3;:11;:::i;:::-;40926:5;40856:12;:78::i;:::-;40849:85;39944:995;-1:-1:-1;;;;;;;;;39944:995:54:o;24721:145::-;24805:56;24818:7;24827:8;24837:23;24852:7;24837:14;:23::i;:::-;24805:12;:56::i;9845:447::-;-1:-1:-1;;;10029:7:54;:35;;;10025:161;;-1:-1:-1;;;10136:7:54;10169;10152:25;;;;;;29892:19:113;;29936:2;29927:12;;29731:214;10025:161:54;10192:95;10208:7;979:29:38;987:20;;;;979:29;1011:30;;;;;;979:62;10192:15:54;:95::i;35212:541::-;35369:7;35506:242;35550:59;35591:7;35600:8;35550:40;:59::i;:::-;35627:31;;;;4044:19:37;:27;537:1:64;4043:44:37;4009:79;;;3996:93;35676:63:54;35715:11;35728:10;35676:38;:63::i;:::-;35506:17;:242::i;38007:427::-;38164:7;38179:21;38209:29;:11;:27;:29::i;:::-;38179:60;;38262:15;38249:28;;:10;:28;;;38245:185;;;38294:31;;;;4044:19:37;:27;537:1:64;4043:44:37;4009:79;;;3996:93;38294:31:54;38287:38;;;;;38245:185;38353:70;38375:7;38384:8;38394:28;38407:15;38394:10;:28;:::i;:::-;38353:21;:70::i;37360:225::-;37488:7;37510:70;37525:7;37534:8;37544:10;37556:23;37571:7;37556:14;:23::i;:::-;37510:14;:70::i;16359:1506::-;16480:16;16499:59;16540:7;16549:8;16499:40;:59::i;:::-;16480:78;;16660:7;16616:100;16679:8;16696:5;16709:4;16616:100;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;16781:7:54;:35;;;16777:62;;16826:7;;;16777:62;16984:22;17009:24;17025:7;17009:15;:24::i;:::-;16984:49;;17044:9;17039:328;17059:5;:12;17055:1;:16;17039:328;;;17086:9;17108:5;17114:1;17108:8;;;;;;;;:::i;:::-;;;;;;;17086:31;;17129:41;548:6:66;17129:4:54;:14;;;;;:41;;;;:::i;:::-;17125:236;;;17182:170;;;;;3392:35:38;;;;;17182:54:54;;:170;;17258:7;;17287:8;;17314:5;;17337:4;;17182:170;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17125:236;-1:-1:-1;17073:3:54;;;;:::i;:::-;;;;17039:328;;;;17416:70;17448:8;17466:5;17416:70;;17479:4;17416:13;:70::i;:::-;17540:9;17535:326;17555:5;:12;17551:1;:16;17535:326;;;17582:9;17604:5;17610:1;17604:8;;;;;;;;:::i;:::-;;;;;;;17582:31;;17625:40;657:6:66;17625:4:54;:14;;;;;:40;;;;:::i;:::-;17621:234;;;17677:169;;;;;3392:35:38;;;;;17677:53:54;;:169;;17752:7;;17781:8;;17808:5;;17831:4;;17677:169;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17621:234;-1:-1:-1;17569:3:54;;;;:::i;:::-;;;;17535:326;;18764:539;18970:328;19024:7;19049:8;19084:17;19127:16;19164:11;19189:4;19225:66;19273:7;19282:8;19225:47;:66::i;:::-;18970:36;:328::i;6416:273::-;6483:18;6523:31;6546:7;6523:22;:31::i;:::-;6509:45;-1:-1:-1;5479:35:51;6560:125:54;;6635:7;6668;6651:25;;;;;;29892:19:113;;29936:2;29927:12;;29731:214;6651:25:54;;;;-1:-1:-1;;6651:25:54;;;;;;;;;;6602:76;;;;;;;;;:::i;2039:337:104:-;2137:19;;;2154:1;2137:19;;;;;;;;;2088:6;;;;2137:19;;;;;;;;;;;-1:-1:-1;2137:19:104;2102:54;;2180:17;2162:12;2175:1;2162:15;;;;;;;;:::i;:::-;;;;;;:35;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;2221:18;2203:12;2216:1;2203:15;;;;;;;;:::i;:::-;;;;;;:36;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;2263:23;2245:12;2258:1;2245:15;;;;;;;;:::i;:::-;;;;;;:41;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;2310:17;2292:12;2305:1;2292:15;;;;;;;;:::i;:::-;;;;;;:35;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;2341:30:104;2358:12;2341:16;:30::i;:::-;2334:37;;;2039:337;:::o;31001:253:54:-;31102:23;31127:28;31157:24;31196:53;31206:7;31215:8;31225:23;31240:7;31225:14;:23::i;:::-;31196:9;:53::i;:::-;31189:60;;;;;;31001:253;;;;;:::o;33544:218::-;33666:12;33693:64;33702:7;33711:8;33721:10;33733:23;33748:7;33733:14;:23::i;:::-;33693:8;:64::i;5769:379::-;5834:16;5870:29;5891:7;5870:20;:29::i;:::-;5858:41;;6013:31;6036:7;6013:22;:31::i;:::-;6008:136;;6094:7;6127;6110:25;;;;;;29892:19:113;;29936:2;29927:12;;29731:214;29279:833:54;29539:36;29578:66;29626:7;29635:8;29578:47;:66::i;:::-;29539:105;-1:-1:-1;29650:26:54;29686:49;29539:105;29717:17;6743:16:49;;862:5;6743:16;785:5;6732:27;6692:68;6670:92;;;6555:218;29686:49:54;29650:86;-1:-1:-1;29774:333:54;29828:7;29853:8;29888:17;29938:37;29960:15;29938:37;;;;:::i;:::-;30034:12;;;30044:1;30034:12;;;;;;;;30004:15;;30078:22;29774:36;:333::i;23322:737::-;23573:36;23612:66;23660:7;23669:8;23612:47;:66::i;:::-;23573:105;-1:-1:-1;23684:26:54;23720:49;23573:105;23751:17;6743:16:49;;862:5;6743:16;785:5;6732:27;6692:68;6670:92;;;6555:218;23720:49:54;23684:86;;23777:277;23831:7;23856:8;23891:17;23934:1;23956:19;23989:4;24025:22;23777:36;:277::i;4700:171:37:-;4773:7;537:1:64;1425;1409:13;1421:1;334:2;1409:13;:::i;:::-;:17;;;;:::i;:::-;1408:34;;;;:::i;:::-;4809:11:37;4788:78;4801:64;;4788:78;;4700:171;-1:-1:-1;;4700:171:37:o;48461:511:54:-;48624:12;48766:201;48805:41;48828:7;48837:8;48805:22;:41::i;:::-;48864:31;;;;4044:19:37;:27;537:1:64;4043:44:37;4009:79;;;3996:93;48913:45:54;48934:11;48947:10;48913:20;:45::i;:::-;48766:12;:201::i;1405:1060:38:-;1545:29;1577:39;1588:11;1601:14;1577:10;:39::i;:::-;1545:71;;1734:25;1776:12;:19;1762:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1762:34:38;;1734:62;;1844:21;1894:25;1889:312;1941:12;:19;1921:17;:39;1889:312;;;2064:19;-1:-1:-1;;;;;1997:87:38;:55;2007:12;2020:17;2007:31;;;;;;;;:::i;:::-;;;;;;;1997:53;;;3392:35;;;3262:170;1997:55;-1:-1:-1;;;;;1997:87:38;;1993:200;;2124:12;2137:17;2124:31;;;;;;;;:::i;:::-;;;;;;;2098:8;2107:13;2098:23;;;;;;;;:::i;:::-;:57;;;;:23;;;;;;;;;;;:57;2167:15;;;;;1993:200;1962:19;;1889:312;;;;2354:13;2344:8;2337:31;2411:49;2422:11;2435:14;2451:8;2411:10;:49::i;50062:282:54:-;50307:30;;;;;;41391:19:113;;;41426:12;;;41419:28;;;50150:7:54;;41463:12:113;;50307:30:54;;;;-1:-1:-1;;50307:30:54;;;;;;;;;50297:41;;50307:30;50297:41;;;;41226:22;50290:48;;50062:282;-1:-1:-1;;;50062:282:54:o;8680:790:53:-;8778:14;8814:2;8804:6;:12;8800:112;;8873:2;8864:6;:11;8846:29;;;;8895:2;8885:12;;;;;;:::i;:::-;;;;8800:112;-1:-1:-1;9092:21:53;;9088:1;9076:14;;9072:42;9240:2;:11;;;9322:22;;;9318:148;;;9447:1;9431:14;9427:22;9421:29;9417:1;9402:13;9398:21;9394:57;9386:6;9383:69;9373:79;;9318:148;8794:676;8680:790;;;;;:::o;2409:432:18:-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;41877:74:113;;;2677:17:18;41967:18:113;;;41960:34;;;;2712:4:18;42010:18:113;;;42003:34;2489:11:18;;1671:64;2586:43;;41850:18:113;;2652:67:18;;;-1:-1:-1;;2652:67:18;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:18;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:18;2820:7;:14;;;;;;;;2409:432::o;1722:200:104:-;1816:19;;;1833:1;1816:19;;;;;;;;;1769:6;;;;1816:19;;;;;;;;;;;;-1:-1:-1;1816:19:104;1783:52;;1857:18;1841:10;1852:1;1841:13;;;;;;;;:::i;2510:134::-;2599:15;;;2612:1;2599:15;;;;;;;;;2556:24;;2599:15;;;;;;;;;;;;;;;;;;;;2588:26;;2620:19;;;;;;;;;;;;;;;;;:8;2629:1;2620:11;;;;;;;;:::i;:::-;;;;;;:19;;;;2510:134;:::o;2784:222::-;2879:15;;;2892:1;2879:15;;;;;;;;;2832:26;;2879:15;;;;;;;;;;;;;;;;;;;;2866:28;;2900:21;;;;;;;;;;;;;;;;;:10;2911:1;2900:13;;;;;;;;:::i;:::-;;;;;;:21;;;;2927:22;;;;;;;;;;;;;;;;;:10;2938:1;2927:13;;;;;;;;:::i;:::-;;;;;;:22;;;;2955:21;;;;;;;;;;;;;;;;;:10;2966:1;2955:13;;;;;;;;:::i;:::-;;;;;;:21;;;;2982:19;;;;;;;;;;;;;;;;;:10;2993:1;2982:13;;;;;;;;:::i;19969:130::-;20067:27;;42237:66:113;42223:3;42219:16;;;42215:89;20067:27:104;;;42203:102:113;42356:66;42342:3;42338:16;;;42334:89;42321:11;;;42314:110;20040:12:104;;42440::113;;20067:27:104;;;;;;;;;;;;;20060:34;;19969:130;;;;:::o;20290:309::-;20556:10;;20572:15;;20374:29;;20569:1;20556:14;2377:5:49;;;785;2408:39;;;;2390:58;2489:23;2474:39;;;;2456:58;20534:54:104;2236:344:49;20764:171:104;20848:12;20892:25;20912:3;20892:18;:25::i;:::-;20926:1;20875:55;;;;;;;;;:::i;6388:479:58:-;6574:21;6598:17;:15;:17::i;:::-;6574:41;-1:-1:-1;6650:4:58;-1:-1:-1;;;;;6625:30:58;;;6621:242;;6665:79;6685:7;6694:8;6704:10;6716:14;6732:11;6665:19;:79::i;:::-;6621:242;;;6765:91;;;;;-1:-1:-1;;;;;6765:31:58;;;;;:91;;6797:7;;6806:8;;6816:10;;6828:14;;6844:11;;6765:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6568:299;6388:479;;;;;:::o;6418:1197:37:-;6540:10;6539:11;:36;;;;-1:-1:-1;5479:35:51;;6554:21:37;6535:95;;;6584:46;;;;;6628:1;6584:46;;;9038:25:113;9011:18;;6584:46:37;8859:210:113;6535:95:37;6698:25;6726:30;:11;:28;:30::i;:::-;6698:58;;902:1:64;6766:17:37;:38;6762:113;;;6813:62;;;;;;;;9038:25:113;;;9011:18;;6813:62:37;8859:210:113;6762:113:37;6882:24;6909:29;:11;:27;:29::i;:::-;6882:56;-1:-1:-1;7013:23:37;7039:36;7058:17;6882:56;7039:36;:::i;:::-;7013:62;;647:2:64;7085:15:37;:34;7081:107;;;7128:60;;;;;;;;9038:25:113;;;9011:18;;7128:60:37;8859:210:113;7081:107:37;7236:9;7231:380;7251:16;7247:1;:20;7231:380;;;3996:93;4044:19;:27;;;537:1:64;4043:44:37;4009:79;;;3996:93;7279:24;7340:21;;;7336:230;;7380:50;;;;;;;;;;;;;;7336:230;334:2:64;7449:16:37;:28;7445:121;;;7496:61;;;;;;;;;;;;;;7445:121;-1:-1:-1;7593:3:37;;7231:380;;5689:1683:51;5796:10;5795:11;:31;;;;-1:-1:-1;5479:35:51;;5810:16;5791:80;;;5835:36;;-1:-1:-1;;;5835:36:51;;5869:1;5835:36;;;9038:25:113;9011:18;;5835:36:51;8859:210:113;5791:80:51;5934:25;5962;:6;:23;:25::i;:::-;5934:53;;902:1:64;5997:17:51;:38;5993:103;;;6044:52;;-1:-1:-1;;;6044:52:51;;;;;9038:25:113;;;9011:18;;6044:52:51;8859:210:113;5993:103:51;6103:24;6130;:6;:22;:24::i;:::-;6103:51;-1:-1:-1;6224:23:51;6250:36;6269:17;6103:51;6250:36;:::i;:::-;6224:62;;647:2:64;6296:15:51;:34;6292:97;;;6339:50;;-1:-1:-1;;;6339:50:51;;;;;9038:25:113;;;9011:18;;6339:50:51;8859:210:113;6292:97:51;6448:25;6479:26;6516:9;6511:551;6531:15;6527:1;:19;6511:551;;;6604:1;6562:39;:17;:6;6577:1;6562:14;:17::i;:::-;:37;;;;;;;;:::i;:::-;;:39::i;:::-;:43;6558:459;;;6666:16;6661:1;:21;6657:82;;6691:48;;;;;;;;;;;;;;6657:82;6771:19;;;;;6558:459;;;6873:16;6869:1;:20;6865:81;;;6898:48;;;;;;;;;;;;;;6865:81;6978:20;;;;;6558:459;7044:3;;6511:551;;;;7135:16;7114:17;:37;7110:102;;7160:52;;-1:-1:-1;;;7160:52:51;;;;;9038:25:113;;;9011:18;;7160:52:51;8859:210:113;7110:102:51;7288:17;7266:18;:39;7262:105;;7314:53;;-1:-1:-1;;;7314:53:51;;;;;9038:25:113;;;9011:18;;7314:53:51;8859:210:113;3569:314:61;3683:16;;;3697:1;3683:16;;;;;;;;;3635:11;;;;3683:16;;;;;;;;;;;;-1:-1:-1;3683:16:61;3654:45;;3738:10;3705:9;3715:1;3705:12;;;;;;;;:::i;:::-;;;;;;;;;;;:44;;;;1047:74;;;-1:-1:-1;;;1047:74:61;;;21241:92:113;-1:-1:-1;;;21349:11:113;;;21342:100;1098:22:61;21458:12:113;;;21451:101;1047:74:61;;;;;;;;;;21568:12:113;;1047:74:61;;-1:-1:-1;;3772:62:61;;1039:83;;;:::i;:::-;3807:9;3818:1;1234:66;3772:24;:62::i;:::-;3756:78;;3848:29;3869:5;3856:20;;8938:13:49;8827:130;20632:676:63;25186:53;;;;;;54230:19:113;;;54265:12;;;54258:28;;;25159:12:63;54302::113;;;54295:28;;;25186:53:63;;;;;;;;;;54339:12:113;;;;25186:53:63;;;20923:29;20955:55;20969:18;20989:20;20955:13;:55::i;:::-;20923:87;;21016:25;21044:55;21058:18;21078:20;21044:13;:55::i;:::-;21135:16;;;21149:1;21135:16;;;;;;;;;21016:83;;-1:-1:-1;21106:26:63;;21135:16;;;;;;;;;;;;-1:-1:-1;21135:16:63;21106:45;;21190:7;21157:9;21167:1;21157:12;;;;;;;;:::i;:::-;;;;;;;;;;;:41;;;;1147:69;;;-1:-1:-1;;;1147:69:63;;;21241:92:113;-1:-1:-1;;;21349:11:113;;;21342:100;-1:-1:-1;;;21458:12:113;;;21451:101;1147:69:63;;;;;;;;;;21568:12:113;;1147:69:63;;21205:98;;1139:78;;;:::i;:::-;21235:9;21246:11;21259:15;21276:12;1324:66;21205:19;:98::i;4933:268:61:-;5033:16;;;5047:1;5033:16;;;;;;;;;5004:26;;5033:16;;;;;;;;;;;-1:-1:-1;5033:16:61;5004:45;;5088:10;5055:9;5065:1;5055:12;;;;;;;;:::i;:::-;;;;;;;;;;;:44;;;;1047:74;;;-1:-1:-1;;;1047:74:61;;;21241:92:113;-1:-1:-1;;;21349:11:113;;;21342:100;1098:22:61;21458:12:113;;;21451:101;1047:74:61;;;;;;;;;;21568:12:113;;1047:74:61;;5106:90;;1039:83;;;:::i;:::-;5141:9;5152:1;5173:6;5155:26;;;;;;44099:14:113;44092:22;44087:3;44083:32;44071:45;;44141:1;44132:11;;43948:201;5155:26:61;;;;-1:-1:-1;;5155:26:61;;;;;;;;;1234:66;5106:24;:90::i;52752:301:54:-;52873:13;52965:82;52996:48;53026:7;53035:8;52996:29;:48::i;:::-;4572:21:53;;4466:137;43119:3949:54;-1:-1:-1;;;43516:7:54;:35;;;43512:161;;-1:-1:-1;;;43623:7:54;43656;43639:25;;;;;;29892:19:113;;29936:2;29927:12;;29731:214;43512:161:54;43679:27;43709:49;:22;43740:17;6743:16:49;;862:5;6743:16;785:5;6732:27;6692:68;6670:92;;;6555:218;43709:49:54;43679:79;;43764:26;43829:4;:11;43815;43793:33;;:19;:33;;;;:::i;:::-;:47;;;;:::i;:::-;43764:76;;44112:18;44089:19;:41;;:98;;;;-1:-1:-1;44168:19:54;44134:30;44153:11;44134:16;:30;:::i;:::-;:53;;;;44089:98;44085:218;;;44204:92;;;;;44539:12:113;44578:15;;;44204:92:54;;;44560:34:113;44630:15;;;44610:18;;;44603:43;44682:15;;44662:18;;;44655:43;44502:18;;44204:92:54;44333:371:113;44085:218:54;44409:19;44390:16;:38;;;44386:140;;;44445:74;;;;;;;;44882:25:113;;;44955:12;44943:25;;44923:18;;;44916:53;44855:18;;44445:74:54;44709:266:113;44386:140:54;44565:35;44603:72;:22;44637:17;44656:18;44603:33;:72::i;:::-;44565:110;-1:-1:-1;44734:32:54;;;:13;44874:107;44892:17;44888:21;;:1;:21;;;44874:107;;;44937:33;:22;44968:1;6743:16:49;;862:5;6743:16;785:5;6732:27;6692:68;6670:92;;;6555:218;44937:33:54;44928:42;;;;44911:3;;44874:107;;;;45103:7;45050:228;45130:8;45162:5;45191:11;45228:21;45265:4;45050:228;;;;;;;;;;:::i;:::-;;;;;;;;44682:603;45431:22;45456:24;45472:7;45456:15;:24::i;:::-;45431:49;;45491:9;45486:485;45506:5;:12;45502:1;:16;45486:485;;;45533:9;45555:5;45561:1;45555:8;;;;;;;;:::i;:::-;;;;;;;45533:31;;45576:42;770:6:66;45576:4:54;:14;;;;;:42;;;;:::i;:::-;45572:393;;;3392:35:38;;;;-1:-1:-1;;;;;45630:55:54;;45707:7;45736:8;45775:17;45822:16;45863:11;45902:21;45941:4;45630:326;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45572:393;-1:-1:-1;45520:3:54;;;;:::i;:::-;;;;45486:485;;;;46056:18;46033:19;:41;46029:248;;46084:31;46118:48;46148:7;46157:8;46118:29;:48::i;:::-;579:28:53;;;-1:-1:-1;46029:248:54;46334:27;46364:61;46388:7;46397:8;46407:17;46364:23;:61::i;:::-;46334:91;;46433:92;46465:19;46494:16;46433:92;;46518:4;46433:13;:92::i;:::-;46326:206;46586:9;46581:483;46601:5;:12;46597:1;:16;46581:483;;;46628:9;46650:5;46656:1;46650:8;;;;;;;;:::i;:::-;;;;;;;46628:31;;46671:41;881:6:66;46671:4:54;:14;;;;;:41;;;;:::i;:::-;46667:391;;;3392:35:38;;;;-1:-1:-1;;;;;46724:54:54;;46800:7;46829:8;46868:17;46915:16;46956:11;46995:21;47034:4;46724:325;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46667:391;-1:-1:-1;46615:3:54;;;;:::i;:::-;;;;46581:483;;;;43362:3706;;;;43119:3949;;;;;;;:::o;51555:274::-;51699:7;51804;51813:8;51787:35;;;;;;;;;:::i;:::-;;;;;;;;;;;;;51777:46;;;;;;51756:17;51749:25;;51729:45;;;41298:34;51729:45;:94;51721:103;;51714:110;;51555:274;;;;;:::o;4903:665:53:-;5315:4;5309:11;5356:4;5344:17;;-1:-1:-1;;5234:14:53;5403:26;;;5234:14;5230:28;5375:4;5368:63;5475:6;5467;5460:22;5493:51;5498:14;5514:6;5522;5530:13;5493:4;:51::i;12721:3002:54:-;12994:7;12978:75;13003:8;13013:10;13025:14;13041:11;12978:75;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;13118:7:54;:35;;;13163:7;13114:62;13314:22;13339:24;13355:7;13339:15;:24::i;:::-;13314:49;;13374:9;13369:340;13389:5;:12;13385:1;:16;13369:340;;;13416:9;13438:5;13444:1;13438:8;;;;;;;;:::i;:::-;;;;;;;13416:31;;13459:33;343:6:66;13459:4:54;:14;;;;;:33;;;;:::i;:::-;13455:248;;;13504:190;;;;;3392:35:38;;;;;13504:47:54;;:190;;13563:7;;13582:8;;13602:10;;13624:14;;13650:11;;13673;;13504:190;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13455:248;-1:-1:-1;13403:3:54;;;;:::i;:::-;;;;13369:340;;;;13772:26;13801:59;13842:7;13851:8;13801:40;:59::i;:::-;13772:88;-1:-1:-1;13866:21:54;826:4:48;816:15;;13866:54:54;;13926:149;13964:18;13998:1;14022:13;14051:10;:17;13926:13;:149::i;:::-;14175:1;14142:30;:11;:28;:30::i;:::-;:34;14138:1174;;;14261:33;14297:66;14345:7;14354:8;14297:47;:66::i;:::-;579:28:53;;;14261:102:54;-1:-1:-1;826:4:48;816:15;;14537:47:54;;14693:27;14728:25;14766:7;14761:545;14779:30;:11;:28;:30::i;:::-;14775:1;:34;;;14761:545;;;14845:63;14887:7;14896:8;14906:1;14845:41;:63::i;:::-;14823:85;-1:-1:-1;14938:25:54;:14;14961:1;6743:16:49;;862:5;6743:16;785:5;6732:27;6692:68;6670:92;;;6555:218;14938:25:54;14918:45;;14973:170;15015:19;15054:1;15082:13;15115:17;14973:13;:170::i;:::-;15153:34;15170:17;15153:34;;:::i;:::-;;-1:-1:-1;15284:3:54;;14761:545;;;;14178:1134;;;14138:1174;15386:9;15381:338;15401:5;:12;15397:1;:16;15381:338;;;15428:9;15450:5;15456:1;15450:8;;;;;;;;:::i;:::-;;;;;;;15428:31;;15471:32;437:6:66;15471:4:54;:14;;;;;:32;;;;:::i;:::-;15467:246;;;15515:189;;;;;3392:35:38;;;;;15515:46:54;;:189;;15573:7;;15592:8;;15612:10;;15634:14;;15660:11;;15683;;15515:189;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15467:246;-1:-1:-1;15415:3:54;;;;:::i;:::-;;;;15381:338;;1754:155:16;1818:86;317:28:19;309:37;;-1:-1:-1;;;;;1860:11:16;;1872:12;1885:4;1872:18;;;;;;:::i;:::-;;;;;;;;;;;;;;;1860:31;;;;;;;;;;;;9038:25:113;;;9026:2;9011:18;;8859:210;1860:31:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1860:31:16;;;;;;;;;;;;:::i;:::-;1898:4;1830:73;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1818:11;:86::i;19018:304:104:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19216:25:104;19229:11;10797:4:36;10783:27;;10777:34;10783:27;;;;10777:34;18080:30:104;;;;;;18126:32;;;;;;17976:188;19216:25;19188:53;;19201:11;;;19188:53;;;;;19273:44;19287:15;19304:12;19273:13;:44::i;:::-;19261:8;;;19248:69;19249:10;;;19248:69;19249:6;19018:304;-1:-1:-1;;;19018:304:104:o;25465:1680:54:-;25635:7;25616:37;25644:8;25616:37;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;25718:7:54;:35;;;25714:62;;25465:1680;;;:::o;25714:62::-;25917:22;25942:24;25958:7;25942:15;:24::i;:::-;25917:49;;25977:9;25972:235;25992:5;:12;25988:1;:16;25972:235;;;26019:9;26041:5;26047:1;26041:8;;;;;;;;:::i;:::-;;;;;;;26019:31;;26062:36;983:6:66;26062:4:54;:14;;;;;:36;;;;:::i;:::-;26058:143;;;26110:82;;;;;3392:35:38;;;;;26110:50:54;;:82;;26161:7;;26170:8;;26180:11;;26110:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26058:143;-1:-1:-1;26006:3:54;;;;:::i;:::-;;;;25972:235;;;;26239:26;26268:59;26309:7;26318:8;26268:40;:59::i;:::-;26239:88;;26333:113;26365:18;26393:1;26412:30;:11;:28;:30::i;:::-;26402:41;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26402:41:54;;26333:13;:113::i;:::-;26665:1;26632:30;:11;:28;:30::i;:::-;:34;26628:236;;;26676:33;26712:66;26760:7;26769:8;26712:47;:66::i;:::-;26676:102;;26786:71;26817:25;26852:2;26786:12;:71::i;:::-;26668:196;26628:236;26913:9;26908:233;26928:5;:12;26924:1;:16;26908:233;;;26955:9;26977:5;26983:1;26977:8;;;;;;;;:::i;:::-;;;;;;;26955:31;;26998:35;1083:6:66;26998:4:54;:14;;;;;:35;;;;:::i;:::-;26994:141;;;27045:81;;;;;3392:35:38;;;;;27045:49:54;;:81;;27095:7;;27104:8;;27114:11;;27045:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26994:141;-1:-1:-1;26942:3:54;;;;:::i;:::-;;;;26908:233;;50636:242;50732:7;;;50771:84;50791:10;50787:14;;:1;:14;50771:84;;;50816:32;3996:93:37;4044:19;:27;;;537:1:64;4043:44:37;4009:79;;;3996:93;50816:32:54;;:::i;:::-;;-1:-1:-1;50803:3:54;;;;:::i;:::-;;;;50771:84;;15275:430:58;15405:12;15419:13;15434:12;15454:21;15478:17;:15;:17::i;:::-;15454:41;-1:-1:-1;15530:4:58;-1:-1:-1;;;;;15505:30:58;;;15501:200;;15552:51;15572:7;15581:8;15591:11;15552:19;:51::i;:::-;15545:58;;;;;;;;;15501:200;15631:63;;;;;-1:-1:-1;;;;;15631:31:58;;;;;:63;;15663:7;;15672:8;;15682:11;;15631:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15631:63:58;;;;;;;;;;;;:::i;13776:301::-;13860:21;13884:17;:15;:17::i;:::-;13860:41;-1:-1:-1;13936:4:58;-1:-1:-1;;;;;13911:30:58;;;13907:166;;13951:41;13974:7;13983:8;13951:22;:41::i;13907:166::-;14013:53;;;;;-1:-1:-1;;;;;14013:34:58;;;;;:53;;14048:7;;14057:8;;14013:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4319:171:37;4393:7;537:1:64;1247:13;1259:1;334:2;1247:13;:::i;:::-;1246:30;;;;:::i;:::-;4415:70:37;;;;;4319:171;-1:-1:-1;4319:171:37:o;47636:360:54:-;47762:12;47786:6;47796:1;47786:11;47782:26;;-1:-1:-1;47799:9:54;;;;;;;;;-1:-1:-1;47799:9:54;;;;47782:26;47849:16;47868:41;47891:7;47900:8;47868:22;:41::i;:::-;47849:60;;47922:69;47953:8;47971:6;47987:1;47922:12;:69::i;5098:173:37:-;5172:7;537:1:64;1597;;1577:13;1589:1;334:2;1577:13;:::i;:::-;:17;;;;:::i;5933:2258:53:-;6050:10;;6046:1421;;6203:2;6193:6;:12;6189:122;;6266:2;6257:6;:11;6239:29;;;;6290:2;6280:12;;;;;;:::i;:::-;;;;6189:122;6401:10;;6397:1064;;6609:2;:11;;;6483:21;-1:-1:-1;;1080:1:65;1067:14;;1045:37;1043:40;6641:38:53;;6863:14;6857:21;6853:1;6845:6;6841:14;6837:42;7110:4;7106:9;7090:13;7084:20;7080:36;7011:4;6999:10;6995:21;6938:192;6911:13;6891:251;;7201:13;7191:6;:23;7187:36;;7216:7;;;;7187:36;-1:-1:-1;7364:1:53;7346:19;;;;;7419:23;;;;;7377:30;6397:1064;7496:253;7513:2;7503:6;:12;7496:253;;7607:21;;7585:44;;7682:1;7664:19;;;;-1:-1:-1;;7722:12:53;;;;7710:2;7693:19;7496:253;;;7817:10;;7813:374;;7837:12;-1:-1:-1;;1080:1:65;1067:14;;1045:37;1043:40;8119:20:53;;8034:21;;8030:32;;8141:9;;8115:36;7979:184;7936:237;;-1:-1:-1;5933:2258:53;;;;:::o;19479:291:18:-;19554:14;19563:1;19566;19554:8;:14::i;:::-;19549:215;;19589:42;;;;;52610:2:113;52592:21;;;52649:2;52629:18;;;52622:30;52688:34;52683:2;52668:18;;52661:62;52759:5;52754:2;52739:18;;52732:33;52797:3;52782:19;;52408:399;19589:42:18;;;;;;;;19650:32;19680:1;19650:32;;;;;;:::i;:::-;;;;;;;;19701;19731:1;19701:32;;;;;;:::i;10062:255:62:-;10158:16;;;10172:1;10158:16;;;;;;;;;10129:26;;10158:16;;;;;;;;;;;-1:-1:-1;10158:16:62;10129:45;;10213:7;10180:9;10190:1;10180:12;;;;;;;;:::i;:::-;;;;;;;;;;;:41;;;;1047:73;;;-1:-1:-1;;;1047:73:62;;;21241:92:113;-1:-1:-1;;;21349:11:113;;;21342:100;1098:21:62;21458:12:113;;;21451:101;1047:73:62;;;;;;;;;;21568:12:113;;1047:73:62;;10228:84;;1039:82;;;:::i;:::-;10283:28;;53849:66:113;53837:79;;10283:28:62;;;53825:92:113;10269:9:62;;10280:1;;53933:12:113;;10283:28:62;;;;;;;;;;;;10228:30;:84::i;49619:191:54:-;49721:7;49785;49794:8;49768:35;;;;;;;;;:::i;38950:262::-;39092:7;39114:93;39189:17;39114:66;39162:7;39171:8;39114:47;:66::i;4372:342:62:-;4488:16;;;4502:1;4488:16;;;;;;;;;4429:22;;4459:26;;4488:16;;;;;;;;;;;;-1:-1:-1;4488:16:62;4459:45;;4543:7;4510:9;4520:1;4510:12;;;;;;;;:::i;:::-;;;;;;;;;;;:41;;;;1047:73;;;-1:-1:-1;;;1047:73:62;;;21241:92:113;-1:-1:-1;;;21349:11:113;;;21342:100;1098:21:62;21458:12:113;;;21451:101;1047:73:62;;;;;;;;;;21568:12:113;;1047:73:62;;-1:-1:-1;;4579:49:62;;1039:82;;;:::i;:::-;4615:9;4626:1;4579:25;:49::i;:::-;4558:70;;4642:66;:44;4663:5;4670:1;4673:5;:12;4642:20;:44::i;:::-;:64;:66::i;2891:136:38:-;2961:4;3013:9;2980:42;;2999:9;2981:15;2991:4;3790:26;;;3660:162;2981:15;:27;2980:42;;;2973:49;;2891:136;;;;:::o;850:162:53:-;939:68;945:14;961:6;826:4:48;816:15;;995:4:53;:11;939:5;:68::i;6955:316:63:-;7078:16;;;7092:1;7078:16;;;;;;;;;7023:18;;;;7078:16;;;;;;;;;;;;-1:-1:-1;7078:16:63;7049:45;;7133:7;7100:9;7110:1;7100:12;;;;;;;;:::i;:::-;;;;;;;;;;;:41;;;;1147:69;;;-1:-1:-1;;;1147:69:63;;;21241:92:113;-1:-1:-1;;;21349:11:113;;;21342:100;-1:-1:-1;;;21458:12:113;;;21451:101;1147:69:63;;;;;;;;;;21568:12:113;;1147:69:63;;-1:-1:-1;;7164:62:63;;1139:78;;;:::i;:::-;7199:9;7210:1;1324:66;7164:24;:62::i;1247:2059:51:-;1315:6;647:2:64;1333:7:51;:14;:33;1329:85;;;1399:7;:14;1375:39;;-1:-1:-1;;;1375:39:51;;;;;;9038:25:113;;9026:2;9011:18;;8859:210;1329:85:51;1420:14;;;;1621:956;1645:7;:14;1641:1;:18;1621:956;;;1671:24;1698:32;:7;1706:1;1698:10;;;;;;;;:::i;:::-;;;;;;;:30;;;;;;;;:::i;:32::-;1671:59;;1743:16;1763:1;1743:21;1739:404;;1928:15;;;;;1739:404;;;1972:17;;1968:175;;2096:38;;;;;;;;;;;;;;1968:175;2269:16;2254:31;;;;537:1:64;2531::51;2527;437:2:64;2509:19:51;:23;2508:40;2492:7;2500:1;2492:10;;;;;;;;:::i;:::-;;;;;;;2484:19;;;;;;;;:::i;:::-;:65;;2474:75;;;;;-1:-1:-1;2559:3:51;;1621:956;;;;902:1:64;2621:13:51;:34;2617:85;;;2664:38;;-1:-1:-1;;;2664:38:51;;;;;9038:25:113;;;9011:18;;2664:38:51;8859:210:113;2617:85:51;2802:14;;:30;;;537:1:64;1247:13;1259:1;334:2;1247:13;:::i;:::-;1246:30;;;;:::i;:::-;3090:41:51;;;3080:51;;;;;537:1:64;1425;1409:13;1421:1;334:2;1409:13;:::i;:::-;:17;;;;:::i;:::-;1408:34;;;;:::i;:::-;3147:47:51;;;3137:57;;;;;537:1:64;1597;;1577:13;1589:1;334:2;1577:13;:::i;:::-;:17;;;;:::i;:::-;:21;;;;:::i;:::-;1576:38;;;;:::i;:::-;3210:49:51;;;;3200:59;;;;;1247:2059;-1:-1:-1;;;;1247:2059:51:o;5573:312:63:-;5692:16;;;5706:1;5692:16;;;;;;;;;5639;;;;5692;;;;;;;;;;;;-1:-1:-1;5692:16:63;5663:45;;5747:7;5714:9;5724:1;5714:12;;;;;;;;:::i;:::-;;;;;;;;;;;:41;;;;1147:69;;;-1:-1:-1;;;1147:69:63;;;21241:92:113;-1:-1:-1;;;21349:11:113;;;21342:100;-1:-1:-1;;;21458:12:113;;;21451:101;1147:69:63;;;;;;;;;;21568:12:113;;1147:69:63;;-1:-1:-1;;5778:62:63;;1139:78;;;:::i;:::-;5813:9;5824:1;1324:66;5778:24;:62::i;4302:369:60:-;4442:16;;;4456:1;4442:16;;;;;;;;;4383:22;;4413:26;;4442:16;;;;;;;;;;;;-1:-1:-1;4442:16:60;4413:45;;4497:10;4464:9;4474:1;4464:12;;;;;;;;:::i;:::-;;;;;;:44;;;;;4515:18;4536:49;4562:8;4572:9;4583:1;4536:25;:49::i;:::-;4515:70;;4599:66;:44;4620:5;4627:1;4630:5;:12;4599:20;:44::i;5689:282::-;5815:16;;;5829:1;5815:16;;;;;;;;;5786:26;;5815:16;;;;;;;;;;;-1:-1:-1;5815:16:60;5786:45;;5870:10;5837:9;5847:1;5837:12;;;;;;;;:::i;:::-;;;;;;:44;;;;;5888:78;5914:8;5924:9;5935:1;5938:27;5958:5;5938:18;:27::i;:::-;5888:25;:78::i;1947:222:69:-;2010:12;2100:6;2124:40;2100:6;2157:1;2160:3;2124:17;:40::i;1766:227:58:-;996:42;1855:22;1816:7;;-1:-1:-1;;;;;1855:22:58;;1883:106;;1931:10;1924:17;;;1766:227;:::o;1883:106::-;1825:168;1766:227;:::o;3948:206:51:-;4018:10;4108:19;:27;;;4139:1;4107:33;4086:6;4061:82;4078:63;;4061:82;;;;;;;;;:::i;3195:520:17:-;3261:7;3274:13;3296:10;3290:17;;;;;;;;:::i;:::-;3274:33;;;;3324:2;3316:5;:10;3312:401;;;3568:2;3560:10;3574:1;3559:16;;;-1:-1:-1;;3195:520:17:o;3312:401::-;3610:18;3596:10;:32;;;;;;;;:::i;:::-;;3592:121;;-1:-1:-1;3643:2:17;;3195:520;-1:-1:-1;;3195:520:17:o;3592:121::-;-1:-1:-1;3707:1:17;;3195:520;-1:-1:-1;;3195:520:17:o;3592:121::-;3270:445;3195:520;;;:::o;25435:388:63:-;25743:32;;25777:34;;25561:29;;2377:5:49;;;785;2408:39;;;;2390:58;2489:23;2474:39;;;;2456:58;25721:91:63;2236:344:49;25988:234:63;26114:12;26165:18;26194:20;26141:76;;;;;;;;;:::i;52184:230:54:-;52305:7;52389;52398:8;52372:35;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;52372:35:54;;;;;;;;;52362:46;;52372:35;52362:46;;;;41389:40;52335:73;;52184:230;-1:-1:-1;;;52184:230:54:o;7139:1488:49:-;7265:13;933:16;7290:25;;7286:97;;;7332:44;;;;;;;;9038:25:113;;;9011:18;;7332:44:49;8859:210:113;7286:97:49;7445:13;6126:59;;;6743:16;;;862:5;6743:16;785:5;6732:27;6692:68;;;6670:92;;7708:38;;;7704:192;;7791:19;7773:15;:37;7758:52;;;;7704:192;;;7872:15;7850:19;:37;7835:52;;;;7704:192;-1:-1:-1;8212:16:49;785:5;862;8079:16;;;;8068:27;8204:35;;;8518:5;8357:26;8338:45;;;;8337:61;;;8499:24;;;;8528:34;;;;;8498:65;;-1:-1:-1;7139:1488:49;;;;;:::o;1373:2326:53:-;1486:10;;1482:1491;;1639:2;1629:6;:12;1625:122;;1702:2;1693:6;:11;1675:29;;;;1726:2;1716:12;;;;;;:::i;:::-;;;;1625:122;1837:10;;1833:1134;;2045:2;:11;;;1919:21;-1:-1:-1;;1080:1:65;1067:14;;1045:37;1043:40;2077:31:53;;2277:1;2269:6;2265:14;2313:4;2302:9;2298:20;2290:28;;2368:13;2362:20;2351:9;2347:36;2329:54;;2616:4;2612:9;2595:14;2589:21;2585:37;2516:4;2504:10;2500:21;2443:193;2415:14;2395:253;;2707:13;2697:6;:23;2693:36;;2722:7;;;;2693:36;-1:-1:-1;2870:1:53;2852:19;;;;;2883:30;;;;2925:23;;1833:1134;3003:253;3020:2;3010:6;:12;3003:253;;3115:20;;3092:44;;3189:1;3171:19;;;;3217:2;3200:19;;;;-1:-1:-1;;3229:12:53;3003:253;;;3324:10;;3320:375;;3344:12;-1:-1:-1;;1080:1:65;1067:14;;1045:37;1043:40;3626:21:53;;3542:20;;3538:31;;3649:9;;3622:37;3487:184;3443:238;;-1:-1:-1;1373:2326:53;;;;:::o;5630:121:32:-;5685:59;5740:2;5701:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5701:42:32;;;;;;;;;;;;;;;;;;;;5685:15;:59::i;18267:484:104:-;18376:19;;18420:14;785:5:49;6692:68;;;6670:92;;18528:62:104;:41;18549:5;18420:14;6670:92:49;18528:20:104;:41::i;:::-;:60;:62::i;:::-;18521:70;-1:-1:-1;18607:4:104;-1:-1:-1;18607:4:104;6670:92:49;6732:27;6692:68;;;6670:92;18635:34:104;18693:51;:41;18714:5;18721:6;18635:34;18693:20;:41::i;:::-;:49;:51::i;:::-;18681:65;;18414:337;;18267:484;;;;;:::o;3893:370:53:-;4015:13;4064:2;4049:11;:6;4058:2;4049:11;:::i;:::-;4048:18;;;;:::i;:::-;4031:35;;:14;:35;:::i;:::-;4015:51;;4072:187;4096:5;4079:14;:22;4072:187;;;4194:1;4178:14;4171:25;4243:1;4227:14;4223:22;4205:40;;4072:187;;19129:345:18;19256:8;;19244;;19226:4;;19244:20;;19240:228;;19285:6;19280:137;19301:1;:8;19297:1;:12;19280:137;;;19346:1;19348;19346:4;;;;;;;;:::i;:::-;;;;;;;;;19338:12;;;:1;19340;19338:4;;;;;;;;:::i;:::-;;;;;;;:12;19334:69;;19379:5;19374:10;;19334:69;19311:3;;;;:::i;:::-;;;;19280:137;;;;19240:228;;12274:451:58;12434:21;12458:17;:15;:17::i;:::-;12434:41;-1:-1:-1;12510:4:58;-1:-1:-1;;;;;12485:30:58;;;12481:240;;12525:78;12554:7;12563:8;12573:17;12592:10;12525:28;:78::i;12481:240::-;12624:90;;;;;-1:-1:-1;;;;;12624:40:58;;;;;:90;;12665:7;;12674:8;;12684:17;;12703:10;;12624:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2022:570:52;2113:5;2211:3;2202:5;:12;;:34;;;;;2225:4;:11;2218:3;:18;;2202:34;2196:85;;2264:4;2270:5;2277:3;2246:35;;;;;;;;;;;;;:::i;2196:85::-;2349:4;2339:15;;2396:17;2408:5;2339:15;2396:17;:::i;:::-;;-1:-1:-1;2419:12:52;2434:11;2440:5;2434:3;:11;:::i;:::-;643:17;2570:15;2562:3;2550:15;;;;2549:37;;;;;;-1:-1:-1;;;;;2022:570:52:o;40037:220:68:-;40103:24;40135:30;40168:32;40186:6;40194:2;40198:1;40168:17;:32::i;39736:222:69:-;39800:12;39890:6;39914:39;39890:6;39947:2;39951:1;784:1339:70;956:12;;909:17;;934:19;997:26;1012:11;956:12;997:26;:::i;:::-;974:49;;1391:4;1385:11;;-1:-1:-1;1434:4:70;1424:15;;-1:-1:-1;;5234:14:53;1481:32:70;;;5234:14:53;5230:28;1453:4:70;1446:69;1557:12;1551:4;1544:26;1601:1;1671:4;1664:5;1660:16;1578:535;1691:11;1688:1;1685:18;1578:535;;;2084:19;;2063:41;;2041:64;;1957:31;;;;1778:1;1771:9;;;;;1870:4;1852:23;1578:535;;;1582:102;;;1176:943;;784:1339;;;;;:::o;181:376:32:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;2068:219:68:-;2133:23;2164:30;2197:33;2215:6;2223:1;2226:3;2197:17;:33::i;3494:416:52:-;3546:17;3571:19;3593:13;3601:4;2946:3;2924:25;;2850:104;3593:13;3571:35;-1:-1:-1;643:17:52;3187:38;;;3716:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3716:18:52;-1:-1:-1;3709:25:52;-1:-1:-1;3803:2:52;3793:13;;3861:44;3873:11;3793:13;3897:7;3861:11;:44::i;:::-;3565:345;;;3494:416;;;:::o;2631:1127:70:-;2751:22;2781:21;2805;:11;2946:3:52;2924:25;;2850:104;2805:21:70;2781:45;-1:-1:-1;643:17:52;3187:38;;2832:20:70;2994:11;3187:38:52;2994:11:70;2979:26;;;;:::i;:::-;;2965:40;;3114:4;3108:11;3099:20;;3157:4;3150:5;3146:16;3217:2;3204:11;3200:20;3186:12;3182:39;3176:4;3169:53;3265:11;3258:5;3251:26;3308:1;3285:463;3324:11;3321:1;3318:18;3285:463;;;3718:20;;3697:42;;3676:64;;3590:31;;;;3503:4;3485:23;;;;3411:1;3404:9;3285:463;;1161:822:48;1278:324;1295:2;1285:6;:12;1278:324;;1385:18;;1367:37;;1536:2;1548:17;;;;1523:15;;;;-1:-1:-1;;1575:12:48;1278:324;;;1611:6;1621:1;1611:11;1607:24;;1161:822;;;:::o;1607:24::-;1670:12;-1:-1:-1;;1080:1:65;1067:14;;1045:37;1043:40;1670:31:48;;1949:4;1945:9;1933;1927:16;1923:32;1869:4;1855:11;1849:18;1845:29;1798:167;1779:9;1763:210;1755:224;1161:822;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:367:113;77:8;87:6;141:3;134:4;126:6;122:17;118:27;108:55;;159:1;156;149:12;108:55;-1:-1:-1;182:20:113;;225:18;214:30;;211:50;;;257:1;254;247:12;211:50;294:4;286:6;282:17;270:29;;354:3;347:4;337:6;334:1;330:14;322:6;318:27;314:38;311:47;308:67;;;371:1;368;361:12;308:67;14:367;;;;;:::o;386:156::-;452:20;;512:4;501:16;;491:27;;481:55;;532:1;529;522:12;547:709;723:6;731;739;747;755;808:3;796:9;787:7;783:23;779:33;776:53;;;825:1;822;815:12;776:53;861:9;848:23;838:33;;922:2;911:9;907:18;894:32;949:18;941:6;938:30;935:50;;;981:1;978;971:12;935:50;1020:70;1082:7;1073:6;1062:9;1058:22;1020:70;:::i;:::-;1109:8;;-1:-1:-1;994:96:113;-1:-1:-1;1163:36:113;;-1:-1:-1;1195:2:113;1180:18;;1163:36;:::i;:::-;547:709;;;;-1:-1:-1;547:709:113;;1246:2;1231:18;1218:32;;547:709;-1:-1:-1;;547:709:113:o;1261:250::-;1346:1;1356:113;1370:6;1367:1;1364:13;1356:113;;;1446:11;;;1440:18;1427:11;;;1420:39;1392:2;1385:10;1356:113;;;-1:-1:-1;;1503:1:113;1485:16;;1478:27;1261:250::o;1516:329::-;1557:3;1595:5;1589:12;1622:6;1617:3;1610:19;1638:76;1707:6;1700:4;1695:3;1691:14;1684:4;1677:5;1673:16;1638:76;:::i;:::-;1759:2;1747:15;-1:-1:-1;;1743:88:113;1734:98;;;;1834:4;1730:109;;1516:329;-1:-1:-1;;1516:329:113:o;1850:217::-;1997:2;1986:9;1979:21;1960:4;2017:44;2057:2;2046:9;2042:18;2034:6;2017:44;:::i;2072:208::-;2152:20;;-1:-1:-1;;;;;2201:54:113;;2191:65;;2181:93;;2270:1;2267;2260:12;2285:318;2405:6;2413;2466:2;2454:9;2445:7;2441:23;2437:32;2434:52;;;2482:1;2479;2472:12;2434:52;2518:9;2505:23;2495:33;;2547:50;2593:2;2582:9;2578:18;2547:50;:::i;:::-;2537:60;;2285:318;;;;;:::o;2608:1193::-;2911:6;2919;2927;2935;2943;2951;2959;2967;3020:3;3008:9;2999:7;2995:23;2991:33;2988:53;;;3037:1;3034;3027:12;2988:53;3073:9;3060:23;3050:33;;3130:2;3119:9;3115:18;3102:32;3092:42;;3181:2;3170:9;3166:18;3153:32;3143:42;;3232:2;3221:9;3217:18;3204:32;3194:42;;3287:3;3276:9;3272:19;3259:33;3311:18;3352:2;3344:6;3341:14;3338:34;;;3368:1;3365;3358:12;3338:34;3407:70;3469:7;3460:6;3449:9;3445:22;3407:70;:::i;:::-;3496:8;;-1:-1:-1;3381:96:113;-1:-1:-1;3584:3:113;3569:19;;3556:33;;-1:-1:-1;3601:16:113;;;3598:36;;;3630:1;3627;3620:12;3598:36;;3669:72;3733:7;3722:8;3711:9;3707:24;3669:72;:::i;:::-;2608:1193;;;;-1:-1:-1;2608:1193:113;;-1:-1:-1;2608:1193:113;;;;;;3760:8;-1:-1:-1;;;2608:1193:113:o;3806:347::-;3857:8;3867:6;3921:3;3914:4;3906:6;3902:17;3898:27;3888:55;;3939:1;3936;3929:12;3888:55;-1:-1:-1;3962:20:113;;4005:18;3994:30;;3991:50;;;4037:1;4034;4027:12;3991:50;4074:4;4066:6;4062:17;4050:29;;4126:3;4119:4;4110:6;4102;4098:19;4094:30;4091:39;4088:59;;;4143:1;4140;4133:12;4158:916;4312:6;4320;4328;4336;4344;4352;4405:3;4393:9;4384:7;4380:23;4376:33;4373:53;;;4422:1;4419;4412:12;4373:53;4458:9;4445:23;4435:33;;4519:2;4508:9;4504:18;4491:32;4542:18;4583:2;4575:6;4572:14;4569:34;;;4599:1;4596;4589:12;4569:34;4638:70;4700:7;4691:6;4680:9;4676:22;4638:70;:::i;:::-;4727:8;;-1:-1:-1;4612:96:113;-1:-1:-1;4612:96:113;;-1:-1:-1;4781:36:113;4813:2;4798:18;;4781:36;:::i;:::-;4771:46;;4870:2;4859:9;4855:18;4842:32;4826:48;;4899:2;4889:8;4886:16;4883:36;;;4915:1;4912;4905:12;4883:36;;4954:60;5006:7;4995:8;4984:9;4980:24;4954:60;:::i;:::-;4158:916;;;;-1:-1:-1;4158:916:113;;-1:-1:-1;4158:916:113;;5033:8;;4158:916;-1:-1:-1;;;4158:916:113:o;5079:607::-;5213:6;5221;5229;5237;5290:2;5278:9;5269:7;5265:23;5261:32;5258:52;;;5306:1;5303;5296:12;5258:52;5342:9;5329:23;5319:33;;5403:2;5392:9;5388:18;5375:32;5430:18;5422:6;5419:30;5416:50;;;5462:1;5459;5452:12;5416:50;5501:70;5563:7;5554:6;5543:9;5539:22;5501:70;:::i;:::-;5590:8;;-1:-1:-1;5475:96:113;-1:-1:-1;5644:36:113;;-1:-1:-1;5676:2:113;5661:18;;5644:36;:::i;:::-;5634:46;;5079:607;;;;;;;:::o;5691:681::-;5862:2;5914:21;;;5984:13;;5887:18;;;6006:22;;;5833:4;;5862:2;6085:15;;;;6059:2;6044:18;;;5833:4;6128:218;6142:6;6139:1;6136:13;6128:218;;;6207:13;;-1:-1:-1;;;;;6203:62:113;6191:75;;6321:15;;;;6286:12;;;;6164:1;6157:9;6128:218;;;-1:-1:-1;6363:3:113;;5691:681;-1:-1:-1;;;;;;5691:681:113:o;6377:1237::-;6588:6;6596;6604;6612;6620;6628;6636;6644;6697:3;6685:9;6676:7;6672:23;6668:33;6665:53;;;6714:1;6711;6704:12;6665:53;6750:9;6737:23;6727:33;;6811:2;6800:9;6796:18;6783:32;6834:18;6875:2;6867:6;6864:14;6861:34;;;6891:1;6888;6881:12;6861:34;6930:70;6992:7;6983:6;6972:9;6968:22;6930:70;:::i;:::-;7019:8;;-1:-1:-1;6904:96:113;-1:-1:-1;7107:2:113;7092:18;;7079:32;;-1:-1:-1;7123:16:113;;;7120:36;;;7152:1;7149;7142:12;7120:36;7191:60;7243:7;7232:8;7221:9;7217:24;7191:60;:::i;:::-;7270:8;;-1:-1:-1;7165:86:113;-1:-1:-1;7352:2:113;7337:18;;7324:32;;-1:-1:-1;7409:3:113;7394:19;;7381:33;;-1:-1:-1;7426:16:113;;;7423:36;;;7455:1;7452;7445:12;7423:36;;7494:60;7546:7;7535:8;7524:9;7520:24;7494:60;:::i;7619:1018::-;7815:6;7823;7831;7839;7847;7855;7863;7916:3;7904:9;7895:7;7891:23;7887:33;7884:53;;;7933:1;7930;7923:12;7884:53;7969:9;7956:23;7946:33;;8030:2;8019:9;8015:18;8002:32;8053:18;8094:2;8086:6;8083:14;8080:34;;;8110:1;8107;8100:12;8080:34;8149:70;8211:7;8202:6;8191:9;8187:22;8149:70;:::i;:::-;8238:8;;-1:-1:-1;8123:96:113;-1:-1:-1;8123:96:113;;-1:-1:-1;8292:36:113;8324:2;8309:18;;8292:36;:::i;:::-;8282:46;;8381:2;8370:9;8366:18;8353:32;8337:48;;8410:2;8400:8;8397:16;8394:36;;;8426:1;8423;8416:12;8394:36;;8465:60;8517:7;8506:8;8495:9;8491:24;8465:60;:::i;:::-;7619:1018;;;;-1:-1:-1;7619:1018:113;;;;;;8626:3;8611:19;;;8598:33;;7619:1018;-1:-1:-1;;;;7619:1018:113:o;8642:212::-;8733:6;8786:2;8774:9;8765:7;8761:23;8757:32;8754:52;;;8802:1;8799;8792:12;8754:52;-1:-1:-1;8825:23:113;;8642:212;-1:-1:-1;8642:212:113:o;9074:638::-;9243:6;9251;9259;9267;9320:2;9308:9;9299:7;9295:23;9291:32;9288:52;;;9336:1;9333;9326:12;9288:52;9372:9;9359:23;9349:33;;9433:2;9422:9;9418:18;9405:32;9460:18;9452:6;9449:30;9446:50;;;9492:1;9489;9482:12;9446:50;9531:70;9593:7;9584:6;9573:9;9569:22;9531:70;:::i;:::-;9074:638;;9620:8;;-1:-1:-1;9505:96:113;;9702:2;9687:18;9674:32;;9074:638;-1:-1:-1;;;;9074:638:113:o;9717:483::-;9973:2;9962:9;9955:21;9936:4;9999:44;10039:2;10028:9;10024:18;10016:6;9999:44;:::i;:::-;10079:6;10074:2;10063:9;10059:18;10052:34;10134:9;10126:6;10122:22;10117:2;10106:9;10102:18;10095:50;10162:32;10187:6;10179;10162:32;:::i;10205:184::-;-1:-1:-1;;;10254:1:113;10247:88;10354:4;10351:1;10344:15;10378:4;10375:1;10368:15;10394:334;10465:2;10459:9;10521:2;10511:13;;-1:-1:-1;;10507:86:113;10495:99;;10624:18;10609:34;;10645:22;;;10606:62;10603:88;;;10671:18;;:::i;:::-;10707:2;10700:22;10394:334;;-1:-1:-1;10394:334:113:o;10733:183::-;10793:4;10826:18;10818:6;10815:30;10812:56;;;10848:18;;:::i;:::-;-1:-1:-1;10893:1:113;10889:14;10905:4;10885:25;;10733:183::o;10921:662::-;10975:5;11028:3;11021:4;11013:6;11009:17;11005:27;10995:55;;11046:1;11043;11036:12;10995:55;11082:6;11069:20;11108:4;11132:60;11148:43;11188:2;11148:43;:::i;:::-;11132:60;:::i;:::-;11226:15;;;11312:1;11308:10;;;;11296:23;;11292:32;;;11257:12;;;;11336:15;;;11333:35;;;11364:1;11361;11354:12;11333:35;11400:2;11392:6;11388:15;11412:142;11428:6;11423:3;11420:15;11412:142;;;11494:17;;11482:30;;11532:12;;;;11445;;11412:142;;;-1:-1:-1;11572:5:113;10921:662;-1:-1:-1;;;;;;10921:662:113:o;11588:656::-;11738:6;11746;11754;11762;11770;11823:3;11811:9;11802:7;11798:23;11794:33;11791:53;;;11840:1;11837;11830:12;11791:53;11876:9;11863:23;11853:33;;11937:2;11926:9;11922:18;11909:32;11964:18;11956:6;11953:30;11950:50;;;11996:1;11993;11986:12;11950:50;12019:61;12072:7;12063:6;12052:9;12048:22;12019:61;:::i;:::-;12009:71;;;12099:36;12131:2;12120:9;12116:18;12099:36;:::i;:::-;11588:656;;;;-1:-1:-1;12089:46:113;;12182:2;12167:18;;12154:32;;-1:-1:-1;12233:3:113;12218:19;12205:33;;11588:656;-1:-1:-1;;11588:656:113:o;12249:448::-;12374:6;12382;12435:2;12423:9;12414:7;12410:23;12406:32;12403:52;;;12451:1;12448;12441:12;12403:52;12487:9;12474:23;12464:33;;12548:2;12537:9;12533:18;12520:32;12575:18;12567:6;12564:30;12561:50;;;12607:1;12604;12597:12;12561:50;12630:61;12683:7;12674:6;12663:9;12659:22;12630:61;:::i;:::-;12620:71;;;12249:448;;;;;:::o;12702:388::-;12829:6;12837;12845;12898:2;12886:9;12877:7;12873:23;12869:32;12866:52;;;12914:1;12911;12904:12;12866:52;12950:9;12937:23;12927:33;;12979:50;13025:2;13014:9;13010:18;12979:50;:::i;:::-;12969:60;;13048:36;13080:2;13069:9;13065:18;13048:36;:::i;:::-;13038:46;;12702:388;;;;;:::o;13095:1699::-;13301:4;13330:2;13370;13359:9;13355:18;13400:2;13389:9;13382:21;13423:6;13458;13452:13;13489:6;13481;13474:22;13515:2;13505:12;;13548:2;13537:9;13533:18;13526:25;;13610:2;13600:6;13597:1;13593:14;13582:9;13578:30;13574:39;13648:2;13640:6;13636:15;13669:1;13690;13700:1065;13716:6;13711:3;13708:15;13700:1065;;;13785:22;;;-1:-1:-1;;13781:95:113;13769:108;;13900:13;;13987:9;;-1:-1:-1;;;;;13983:58:113;13968:74;;14081:11;;14075:18;14113:15;;;14106:27;;;14194:19;;13940:15;;;14226:24;;;14316:21;;;;14361:1;;14284:2;14272:15;;;14375:282;14391:8;14386:3;14383:17;14375:282;;;14472:15;;14489:66;14468:88;14454:103;;14626:17;;;;14419:1;14410:11;;;;;14583:14;;;;14375:282;;;-1:-1:-1;14743:12:113;;;;14680:5;-1:-1:-1;;;14708:15:113;;;;13742:1;13733:11;13700:1065;;;-1:-1:-1;14782:6:113;;13095:1699;-1:-1:-1;;;;;;;;;13095:1699:113:o;14799:861::-;14961:4;14990:2;15030;15019:9;15015:18;15060:2;15049:9;15042:21;15083:6;15118;15112:13;15149:6;15141;15134:22;15187:2;15176:9;15172:18;15165:25;;15249:2;15239:6;15236:1;15232:14;15221:9;15217:30;15213:39;15199:53;;15287:2;15279:6;15275:15;15308:1;15318:313;15332:6;15329:1;15326:13;15318:313;;;-1:-1:-1;;15409:9:113;15401:6;15397:22;15393:95;15388:3;15381:108;15512:39;15544:6;15535;15529:13;15512:39;:::i;:::-;15502:49;-1:-1:-1;15609:12:113;;;;15574:15;;;;15354:1;15347:9;15318:313;;;-1:-1:-1;15648:6:113;;14799:861;-1:-1:-1;;;;;;;14799:861:113:o;15847:620::-;16021:6;16029;16037;16045;16098:3;16086:9;16077:7;16073:23;16069:33;16066:53;;;16115:1;16112;16105:12;16066:53;16151:9;16138:23;16128:33;;16212:2;16201:9;16197:18;16184:32;16239:18;16231:6;16228:30;16225:50;;;16271:1;16268;16261:12;16225:50;16294:61;16347:7;16338:6;16327:9;16323:22;16294:61;:::i;:::-;16284:71;;;16374:36;16406:2;16395:9;16391:18;16374:36;:::i;:::-;15847:620;;;;-1:-1:-1;16364:46:113;;16457:2;16442:18;16429:32;;-1:-1:-1;;15847:620:113:o;16654:518::-;16786:6;16794;16802;16855:2;16843:9;16834:7;16830:23;16826:32;16823:52;;;16871:1;16868;16861:12;16823:52;16907:9;16894:23;16884:33;;16968:2;16957:9;16953:18;16940:32;16995:18;16987:6;16984:30;16981:50;;;17027:1;17024;17017:12;16981:50;17050:61;17103:7;17094:6;17083:9;17079:22;17050:61;:::i;:::-;17040:71;;;17130:36;17162:2;17151:9;17147:18;17130:36;:::i;17177:1014::-;17332:6;17340;17348;17356;17364;17372;17425:3;17413:9;17404:7;17400:23;17396:33;17393:53;;;17442:1;17439;17432:12;17393:53;17478:9;17465:23;17455:33;;17539:2;17528:9;17524:18;17511:32;17562:18;17603:2;17595:6;17592:14;17589:34;;;17619:1;17616;17609:12;17589:34;17658:70;17720:7;17711:6;17700:9;17696:22;17658:70;:::i;:::-;17747:8;;-1:-1:-1;17632:96:113;-1:-1:-1;17832:2:113;17817:18;;17804:32;;-1:-1:-1;17876:14:113;17865:26;;17855:37;;17845:65;;17906:1;17903;17896:12;17845:65;17929:5;;-1:-1:-1;17987:2:113;17972:18;;17959:32;;18003:16;;;18000:36;;;18032:1;18029;18022:12;18388:165;18455:20;;18515:12;18504:24;;18494:35;;18484:63;;18543:1;18540;18533:12;18558:1062;18728:6;18736;18744;18752;18760;18768;18776;18784;18837:3;18825:9;18816:7;18812:23;18808:33;18805:53;;;18854:1;18851;18844:12;18805:53;18890:9;18877:23;18867:33;;18951:2;18940:9;18936:18;18923:32;18974:18;19015:2;19007:6;19004:14;19001:34;;;19031:1;19028;19021:12;19001:34;19070:70;19132:7;19123:6;19112:9;19108:22;19070:70;:::i;:::-;19159:8;;-1:-1:-1;19044:96:113;-1:-1:-1;19044:96:113;;-1:-1:-1;19213:36:113;19245:2;19230:18;;19213:36;:::i;:::-;19203:46;;19268:37;19301:2;19290:9;19286:18;19268:37;:::i;:::-;19258:47;;19324:38;19357:3;19346:9;19342:19;19324:38;:::i;:::-;19314:48;;19415:3;19404:9;19400:19;19387:33;19371:49;;19445:2;19435:8;19432:16;19429:36;;;19461:1;19458;19451:12;19625:537;19752:6;19760;19768;19821:2;19809:9;19800:7;19796:23;19792:32;19789:52;;;19837:1;19834;19827:12;19789:52;19873:9;19860:23;19850:33;;19934:2;19923:9;19919:18;19906:32;19961:18;19953:6;19950:30;19947:50;;;19993:1;19990;19983:12;19947:50;20032:70;20094:7;20085:6;20074:9;20070:22;20032:70;:::i;:::-;19625:537;;20121:8;;-1:-1:-1;20006:96:113;;-1:-1:-1;;;;19625:537:113:o;21591:357::-;21709:12;;21756:4;21745:16;;;21739:23;;21709:12;21774:16;;21771:171;;;-1:-1:-1;;21848:4:113;21844:17;;;;21841:1;21837:25;21833:98;21822:110;;21591:357;-1:-1:-1;21591:357:113:o;21953:184::-;-1:-1:-1;;;22002:1:113;21995:88;22102:4;22099:1;22092:15;22126:4;22123:1;22116:15;22142:246;22191:4;22224:18;22216:6;22213:30;22210:56;;;22246:18;;:::i;:::-;-1:-1:-1;22303:2:113;22291:15;-1:-1:-1;;22287:88:113;22377:4;22283:99;;22142:246::o;22393:1412::-;22531:9;22566:64;22582:47;22622:6;22582:47;:::i;22566:64::-;22652:3;22676:6;22671:3;22664:19;22702:4;22731:2;22726:3;22722:12;22715:19;;22775:6;22772:1;22768:14;22761:5;22757:26;22806:14;22798:6;22795:26;22792:46;;;22834:1;22831;22824:12;22792:46;22858:5;22872:900;22888:6;22883:3;22880:15;22872:900;;;22974:3;22961:17;23010:18;22997:11;22994:35;22991:125;;;23070:1;23099:2;23095;23088:14;22991:125;23139:23;;23204:14;23197:4;23189:13;;23185:34;23175:132;;23261:1;23290:2;23286;23279:14;23175:132;23343:2;23330:16;23372:49;23388:32;23417:2;23388:32;:::i;23372:49::-;23448:2;23441:5;23434:17;23492:14;23487:2;23482;23478;23474:11;23470:20;23467:40;23464:130;;;23548:1;23577:2;23573;23566:14;23464:130;23649:2;23644;23640;23636:11;23631:2;23624:5;23620:14;23607:45;23697:1;23676:14;;;23672:23;;23665:34;;;;23712:18;;-1:-1:-1;23750:12:113;;;;22905;;22872:900;;;-1:-1:-1;23794:5:113;;22393:1412;-1:-1:-1;;;;;;22393:1412:113:o;23810:437::-;23889:1;23885:12;;;;23932;;;23953:61;;24007:4;23999:6;23995:17;23985:27;;23953:61;24060:2;24052:6;24049:14;24029:18;24026:38;24023:218;;-1:-1:-1;;;24094:1:113;24087:88;24198:4;24195:1;24188:15;24226:4;24223:1;24216:15;24378:545;24480:2;24475:3;24472:11;24469:448;;;24516:1;24541:5;24537:2;24530:17;24586:4;24582:2;24572:19;24656:2;24644:10;24640:19;24637:1;24633:27;24627:4;24623:38;24692:4;24680:10;24677:20;24674:47;;;-1:-1:-1;24715:4:113;24674:47;24770:2;24765:3;24761:12;24758:1;24754:20;24748:4;24744:31;24734:41;;24825:82;24843:2;24836:5;24833:13;24825:82;;;24888:17;;;24869:1;24858:13;24825:82;;25159:1471;25285:3;25279:10;25312:18;25304:6;25301:30;25298:56;;;25334:18;;:::i;:::-;25363:97;25453:6;25413:38;25445:4;25439:11;25413:38;:::i;:::-;25407:4;25363:97;:::i;:::-;25515:4;;25579:2;25568:14;;25596:1;25591:782;;;;26417:1;26434:6;26431:89;;;-1:-1:-1;26486:19:113;;;26480:26;26431:89;-1:-1:-1;;25056:1:113;25052:11;;;25048:84;25044:89;25034:100;25140:1;25136:11;;;25031:117;26533:81;;25561:1063;;25591:782;24325:1;24318:14;;;24362:4;24349:18;;-1:-1:-1;;25627:79:113;;;25804:236;25818:7;25815:1;25812:14;25804:236;;;25907:19;;;25901:26;25886:42;;25999:27;;;;25967:1;25955:14;;;;25834:19;;25804:236;;;25808:3;26068:6;26059:7;26056:19;26053:261;;;26129:19;;;26123:26;-1:-1:-1;;26212:1:113;26208:14;;;26224:3;26204:24;26200:97;26196:102;26181:118;26166:134;;26053:261;-1:-1:-1;;;;;26360:1:113;26344:14;;;26340:22;26327:36;;-1:-1:-1;25159:1471:113:o;26937:430::-;27134:66;27126:6;27122:79;27117:3;27110:92;27092:3;27231:6;27225:13;27247:74;27314:6;27310:1;27305:3;27301:11;27294:4;27286:6;27282:17;27247:74;:::i;:::-;27341:16;;;;27359:1;27337:24;;26937:430;-1:-1:-1;;;26937:430:113:o;27372:287::-;27501:3;27539:6;27533:13;27555:66;27614:6;27609:3;27602:4;27594:6;27590:17;27555:66;:::i;:::-;27637:16;;;;;27372:287;-1:-1:-1;;27372:287:113:o;27664:277::-;27731:6;27784:2;27772:9;27763:7;27759:23;27755:32;27752:52;;;27800:1;27797;27790:12;27752:52;27832:9;27826:16;27885:5;27878:13;27871:21;27864:5;27861:32;27851:60;;27907:1;27904;27897:12;27946:184;-1:-1:-1;;;27995:1:113;27988:88;28095:4;28092:1;28085:15;28119:4;28116:1;28109:15;28135:151;28225:4;28218:12;;;28204;;;28200:31;;28243:14;;28240:40;;;28260:18;;:::i;28861:348::-;29091:2;29080:9;29073:21;29054:4;29111:49;29156:2;29145:9;29141:18;28774:2;28762:15;;28809:12;28802:4;28793:14;;28786:36;28847:2;28838:12;;28697:159;29111:49;29103:57;;29196:6;29191:2;29180:9;29176:18;29169:34;28861:348;;;;:::o;29378:::-;29608:2;29597:9;29590:21;29571:4;29628:49;29673:2;29662:9;29658:18;29291:2;29279:15;;29326:12;29319:4;29310:14;;29303:36;29364:2;29355:12;;29214:159;29950:464;30197:66;30189:6;30185:79;30174:9;30167:98;30301:6;30296:2;30285:9;30281:18;30274:34;30344:2;30339;30328:9;30324:18;30317:30;30148:4;30364:44;30404:2;30393:9;30389:18;30381:6;30364:44;:::i;30672:322::-;30881:6;30870:9;30863:25;30924:2;30919;30908:9;30904:18;30897:30;30844:4;30944:44;30984:2;30973:9;30969:18;30961:6;30944:44;:::i;31432:780::-;31482:3;31523:5;31517:12;31552:36;31578:9;31552:36;:::i;:::-;31607:1;31624:18;;;31651:191;;;;31856:1;31851:355;;;;31617:589;;31651:191;31699:66;31688:9;31684:82;31679:3;31672:95;31822:6;31815:14;31808:22;31800:6;31796:35;31791:3;31787:45;31780:52;;31651:191;;31851:355;31882:5;31879:1;31872:16;31911:4;31956:2;31953:1;31943:16;31981:1;31995:165;32009:6;32006:1;32003:13;31995:165;;;32087:14;;32074:11;;;32067:35;32130:16;;;;32024:10;;31995:165;;;31999:3;;;32189:6;32184:3;32180:16;32173:23;;31617:589;;;;;31432:780;;;;:::o;32217:664::-;32567:66;32562:3;32555:79;32537:3;32653:47;32696:2;32691:3;32687:12;32679:6;32653:47;:::i;:::-;32720:66;32709:78;;32816:31;32811:2;32803:11;;32796:52;32872:2;32864:11;;32217:664;-1:-1:-1;;;32217:664:113:o;33404:694::-;33747:66;33742:3;33735:79;33717:3;33843:6;33837:13;33859:75;33927:6;33922:2;33917:3;33913:12;33906:4;33898:6;33894:17;33859:75;:::i;:::-;33998:66;33993:2;33953:16;;;;33985:11;;;33978:87;-1:-1:-1;34089:2:113;34081:11;;33404:694;-1:-1:-1;33404:694:113:o;34103:128::-;34170:9;;;34191:11;;;34188:37;;;34205:18;;:::i;34236:125::-;34301:9;;;34322:10;;;34319:36;;;34335:18;;:::i;34720:197::-;34848:3;34873:38;34907:3;34899:6;34873:38;:::i;34922:1554::-;35041:3;35035:4;35032:13;35029:26;;35048:5;;34922:1554::o;35029:26::-;35078:37;35110:3;35104:10;35078:37;:::i;:::-;35138:18;35130:6;35127:30;35124:56;;;35160:18;;:::i;:::-;35189:97;35279:6;35239:38;35271:4;35265:11;35239:38;:::i;35189:97::-;35312:1;35340:2;35332:6;35329:14;35357:1;35352:867;;;;36263:1;36280:6;36277:89;;;-1:-1:-1;36332:19:113;;;36326:26;36277:89;-1:-1:-1;;25056:1:113;25052:11;;;25048:84;25044:89;25034:100;25140:1;25136:11;;;25031:117;36379:81;;35322:1148;;35352:867;24325:1;24318:14;;;24362:4;24349:18;;-1:-1:-1;;35388:79:113;;;24325:1;24318:14;;;24362:4;24349:18;;35611:9;35633:251;35647:7;35644:1;35641:14;35633:251;;;35729:21;;;35723:28;35708:44;;35779:1;35852:18;;;;35807:15;;;;35670:4;35663:12;35633:251;;;35637:3;35912:6;35903:7;35900:19;35897:263;;;35973:21;;35967:28;-1:-1:-1;;36070:3:113;36058:1;36054:14;;;36050:24;36046:97;36042:102;36027:118;36012:134;;;-1:-1:-1;;36206:1:113;36190:14;;;36186:22;36173:36;;-1:-1:-1;34922:1554:113:o;37995:439::-;38245:2;38234:9;38227:21;38208:4;38271:49;38316:2;38305:9;38301:18;28774:2;28762:15;;28809:12;28802:4;28793:14;;28786:36;28847:2;28838:12;;28697:159;38271:49;38368:9;38360:6;38356:22;38351:2;38340:9;38336:18;38329:50;38396:32;38421:6;38413;38396:32;:::i;38439:439::-;38689:2;38678:9;38671:21;38652:4;38715:49;38760:2;38749:9;38745:18;29291:2;29279:15;;29326:12;29319:4;29310:14;;29303:36;29364:2;29355:12;;29214:159;38883:175;38920:3;38964:4;38957:5;38953:16;38993:4;38984:7;38981:17;38978:43;;39001:18;;:::i;:::-;39050:1;39037:15;;38883:175;-1:-1:-1;;38883:175:113:o;39063:435::-;39116:3;39154:5;39148:12;39181:6;39176:3;39169:19;39207:4;39236:2;39231:3;39227:12;39220:19;;39273:2;39266:5;39262:14;39294:1;39304:169;39318:6;39315:1;39312:13;39304:169;;;39379:13;;39367:26;;39413:12;;;;39448:15;;;;39340:1;39333:9;39304:169;;;-1:-1:-1;39489:3:113;;39063:435;-1:-1:-1;;;;;39063:435:113:o;39503:511::-;39754:2;39743:9;39736:21;39717:4;39780:56;39832:2;39821:9;39817:18;39809:6;39780:56;:::i;:::-;39884:14;39876:6;39872:27;39867:2;39856:9;39852:18;39845:55;39948:9;39940:6;39936:22;39931:2;39920:9;39916:18;39909:50;39976:32;40001:6;39993;39976:32;:::i;40019:616::-;40330:6;40319:9;40312:25;40373:3;40368:2;40357:9;40353:18;40346:31;40293:4;40400:57;40452:3;40441:9;40437:19;40429:6;40400:57;:::i;:::-;40505:14;40497:6;40493:27;40488:2;40477:9;40473:18;40466:55;40569:9;40561:6;40557:22;40552:2;40541:9;40537:18;40530:50;40597:32;40622:6;40614;40597:32;:::i;:::-;40589:40;40019:616;-1:-1:-1;;;;;;;40019:616:113:o;40640:195::-;40679:3;-1:-1:-1;;40703:5:113;40700:77;40697:103;;40780:18;;:::i;:::-;-1:-1:-1;40827:1:113;40816:13;;40640:195::o;40840:184::-;-1:-1:-1;;;40889:1:113;40882:88;40989:4;40986:1;40979:15;41013:4;41010:1;41003:15;41029:168;41102:9;;;41133;;41150:15;;;41144:22;;41130:37;41120:71;;41171:18;;:::i;41486:184::-;-1:-1:-1;;;41535:1:113;41528:88;41635:4;41632:1;41625:15;41659:4;41656:1;41649:15;42463:492;42638:3;42676:6;42670:13;42692:66;42751:6;42746:3;42739:4;42731:6;42727:17;42692:66;:::i;:::-;42821:13;;42780:16;;;;42843:70;42821:13;42780:16;42890:4;42878:17;;42843:70;:::i;:::-;42929:20;;42463:492;-1:-1:-1;;;;42463:492:113:o;42960:793::-;43354:6;43343:9;43336:25;43397:3;43392:2;43381:9;43377:18;43370:31;43317:4;43424:57;43476:3;43465:9;43461:19;43453:6;43424:57;:::i;:::-;43529:9;43521:6;43517:22;43512:2;43501:9;43497:18;43490:50;43563:32;43588:6;43580;43563:32;:::i;:::-;43549:46;;43631:6;43626:2;43615:9;43611:18;43604:34;43687:9;43679:6;43675:22;43669:3;43658:9;43654:19;43647:51;43715:32;43740:6;43732;43715:32;:::i;:::-;43707:40;42960:793;-1:-1:-1;;;;;;;;42960:793:113:o;44154:174::-;44221:12;44253:10;;;44265;;;44249:27;;44288:11;;;44285:37;;;44302:18;;:::i;:::-;44285:37;44154:174;;;;:::o;44980:708::-;45320:3;45309:9;45302:22;45283:4;45347:57;45399:3;45388:9;45384:19;45376:6;45347:57;:::i;:::-;45452:14;45444:6;45440:27;45435:2;45424:9;45420:18;45413:55;45516:12;45508:6;45504:25;45499:2;45488:9;45484:18;45477:53;45566:6;45561:2;45550:9;45546:18;45539:34;45622:9;45614:6;45610:22;45604:3;45593:9;45589:19;45582:51;45650:32;45675:6;45667;45650:32;:::i;45693:900::-;46117:6;46106:9;46099:25;46160:3;46155:2;46144:9;46140:18;46133:31;46080:4;46187:57;46239:3;46228:9;46224:19;46216:6;46187:57;:::i;:::-;46292:4;46280:17;;46275:2;46260:18;;46253:45;46317:12;46365:15;;;46360:2;46345:18;;46338:43;46418:15;;46412:3;46397:19;;46390:44;46465:3;46450:19;;46443:35;;;46515:22;;;46509:3;46494:19;;46487:51;46555:32;46519:6;46572;46555:32;:::i;:::-;46547:40;45693:900;-1:-1:-1;;;;;;;;;;45693:900:113:o;46598:640::-;46849:6;46844:3;46837:19;46819:3;46875:2;46908;46903:3;46899:12;46940:6;46934:13;47005:2;46997:6;46993:15;47026:1;47036:175;47050:6;47047:1;47044:13;47036:175;;;47113:13;;47099:28;;47149:14;;;;47186:15;;;;47072:1;47065:9;47036:175;;;-1:-1:-1;47227:5:113;;46598:640;-1:-1:-1;;;;;;;46598:640:113:o;47243:689::-;47577:3;47566:9;47559:22;47540:4;47604:57;47656:3;47645:9;47641:19;47633:6;47604:57;:::i;:::-;47709:9;47701:6;47697:22;47692:2;47681:9;47677:18;47670:50;47743:32;47768:6;47760;47743:32;:::i;:::-;47729:46;;47811:6;47806:2;47795:9;47791:18;47784:34;47866:9;47858:6;47854:22;47849:2;47838:9;47834:18;47827:50;47894:32;47919:6;47911;47894:32;:::i;47937:898::-;48392:6;48381:9;48374:25;48435:3;48430:2;48419:9;48415:18;48408:31;48355:4;48462:57;48514:3;48503:9;48499:19;48491:6;48462:57;:::i;:::-;48567:9;48559:6;48555:22;48550:2;48539:9;48535:18;48528:50;48601:32;48626:6;48618;48601:32;:::i;:::-;48587:46;;48669:6;48664:2;48653:9;48649:18;48642:34;48725:9;48717:6;48713:22;48707:3;48696:9;48692:19;48685:51;48753:32;48778:6;48770;48753:32;:::i;:::-;48745:40;;;48822:6;48816:3;48805:9;48801:19;48794:35;47937:898;;;;;;;;;:::o;48840:322::-;48916:5;48945:53;48961:36;48990:6;48961:36;:::i;48945:53::-;48936:62;;49021:6;49014:5;49007:21;49061:3;49052:6;49047:3;49043:16;49040:25;49037:45;;;49078:1;49075;49068:12;49037:45;49091:65;49149:6;49142:4;49135:5;49131:16;49126:3;49091:65;:::i;49167:459::-;49247:6;49300:2;49288:9;49279:7;49275:23;49271:32;49268:52;;;49316:1;49313;49306:12;49268:52;49349:9;49343:16;49382:18;49374:6;49371:30;49368:50;;;49414:1;49411;49404:12;49368:50;49437:22;;49490:4;49482:13;;49478:27;-1:-1:-1;49468:55:113;;49519:1;49516;49509:12;49468:55;49542:78;49612:7;49607:2;49601:9;49596:2;49592;49588:11;49542:78;:::i;49631:764::-;50021:14;50016:3;50009:27;49991:3;50065:6;50059:13;50081:75;50149:6;50144:2;50139:3;50135:12;50128:4;50120:6;50116:17;50081:75;:::i;:::-;50220:3;50215:2;50175:16;;;50207:11;;;50200:24;50249:13;;50271:76;50249:13;50333:2;50325:11;;50318:4;50306:17;;50271:76;:::i;:::-;50367:17;50386:2;50363:26;;49631:764;-1:-1:-1;;;;49631:764:113:o;50400:261::-;50579:2;50568:9;50561:21;50542:4;50599:56;50651:2;50640:9;50636:18;50628:6;50599:56;:::i;50666:468::-;50966:6;50955:9;50948:25;51009:2;51004;50993:9;50989:18;50982:30;50929:4;51029:56;51081:2;51070:9;51066:18;51058:6;51029:56;:::i;:::-;51021:64;;51121:6;51116:2;51105:9;51101:18;51094:34;50666:468;;;;;;:::o;51139:236::-;51192:5;51245:3;51238:4;51230:6;51226:17;51222:27;51212:55;;51263:1;51260;51253:12;51212:55;51285:84;51365:3;51356:6;51350:13;51343:4;51335:6;51331:17;51285:84;:::i;51380:654::-;51521:6;51529;51537;51590:2;51578:9;51569:7;51565:23;51561:32;51558:52;;;51606:1;51603;51596:12;51558:52;51639:9;51633:16;51668:18;51709:2;51701:6;51698:14;51695:34;;;51725:1;51722;51715:12;51695:34;51748:60;51800:7;51791:6;51780:9;51776:22;51748:60;:::i;:::-;51738:70;;51848:2;51837:9;51833:18;51827:25;51817:35;;51898:2;51887:9;51883:18;51877:25;51861:41;;51927:2;51917:8;51914:16;51911:36;;;51943:1;51940;51933:12;51911:36;;51966:62;52020:7;52009:8;51998:9;51994:24;51966:62;:::i;:::-;51956:72;;;51380:654;;;;;:::o;52039:364::-;52278:6;52267:9;52260:25;52321:2;52316;52305:9;52301:18;52294:30;52241:4;52341:56;52393:2;52382:9;52378:18;52370:6;52341:56;:::i;54362:274::-;54402:1;54428;54418:189;;-1:-1:-1;;;54460:1:113;54453:88;54564:4;54561:1;54554:15;54592:4;54589:1;54582:15;54418:189;-1:-1:-1;54621:9:113;;54362:274::o;54641:604::-;54950:6;54939:9;54932:25;54993:3;54988:2;54977:9;54973:18;54966:31;54913:4;55020:57;55072:3;55061:9;55057:19;55049:6;55020:57;:::i;:::-;55125:4;55117:6;55113:17;55108:2;55097:9;55093:18;55086:45;55179:9;55171:6;55167:22;55162:2;55151:9;55147:18;55140:50;55207:32;55232:6;55224;55207:32;:::i;55250:359::-;55453:2;55442:9;55435:21;55416:4;55473:44;55513:2;55502:9;55498:18;55490:6;55473:44;:::i;:::-;55548:2;55533:18;;55526:34;;;;-1:-1:-1;55591:2:113;55576:18;55569:34;55465:52;55250:359;-1:-1:-1;55250:359:113:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "deleteRecord(bytes32,bytes32[])": "505a181d",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "getDynamicField(bytes32,bytes32[],uint8)": "1e788977",
    "getDynamicFieldLength(bytes32,bytes32[],uint8)": "dbbf0e21",
    "getDynamicFieldSlice(bytes32,bytes32[],uint8,uint256,uint256)": "4dc77d97",
    "getField(bytes32,bytes32[],uint8)": "d03edb8c",
    "getField(bytes32,bytes32[],uint8,bytes32)": "05242d2f",
    "getFieldLayout(bytes32)": "3a77c2c2",
    "getFieldLength(bytes32,bytes32[],uint8)": "a53417ed",
    "getFieldLength(bytes32,bytes32[],uint8,bytes32)": "9f1fcf0a",
    "getKeySchema(bytes32)": "d4285dc2",
    "getRecord(bytes32,bytes32[])": "cc49db7e",
    "getRecord(bytes32,bytes32[],bytes32)": "419b58fd",
    "getStaticField(bytes32,bytes32[],uint8,bytes32)": "8c364d59",
    "getValueSchema(bytes32)": "e228a4a3",
    "popFromDynamicField(bytes32,bytes32[],uint8,uint256)": "d9c03a04",
    "pushToDynamicField(bytes32,bytes32[],uint8,bytes)": "150f3262",
    "registerStoreHook(bytes32,address,uint8)": "530f4b60",
    "registerTable(bytes32,bytes32,bytes32,bytes32,string[],string[])": "0ba51f49",
    "setDynamicField(bytes32,bytes32[],uint8,bytes)": "ef6ea862",
    "setField(bytes32,bytes32[],uint8,bytes)": "114a7266",
    "setField(bytes32,bytes32[],uint8,bytes,bytes32)": "3708196e",
    "setRecord(bytes32,bytes32[],bytes,bytes32,bytes)": "298314fb",
    "setStaticField(bytes32,bytes32[],uint8,bytes,bytes32)": "390baae0",
    "setUp()": "0a9254e4",
    "spliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes)": "c0a2895a",
    "spliceStaticData(bytes32,bytes32[],uint48,bytes)": "b047c1eb",
    "storeVersion()": "c1122229",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testCompareSolidity()": "4c4cb815",
    "testDeleteExternalCold()": "fc9cc759",
    "testDeleteInternalCold()": "72663d8c",
    "testEncode()": "42011ac9",
    "testRegisterAndGetFieldLayout()": "0a028481",
    "testRegisterAndGetSchema()": "c290114c",
    "testSetGetDeleteExternal()": "3b310015",
    "testSetGetDeleteInternal()": "34cab085",
    "unregisterStoreHook(bytes32,address)": "05609129"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"FieldLayoutLib_InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FieldLayoutLib_StaticLengthDoesNotFitInAWord\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FieldLayoutLib_StaticLengthIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"PackedCounter_InvalidLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"SchemaLib_InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SchemaLib_StaticTypeAfterDynamicType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"name\":\"Slice_OutOfBounds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessedIndex\",\"type\":\"uint256\"}],\"name\":\"Store_IndexOutOfBounds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"received\",\"type\":\"uint256\"}],\"name\":\"Store_InvalidDynamicDataLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"received\",\"type\":\"uint256\"}],\"name\":\"Store_InvalidFieldNamesLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"received\",\"type\":\"uint256\"}],\"name\":\"Store_InvalidKeyNamesLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes2\",\"name\":\"expected\",\"type\":\"bytes2\"},{\"internalType\":\"ResourceId\",\"name\":\"resourceId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"resourceIdString\",\"type\":\"string\"}],\"name\":\"Store_InvalidResourceType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint40\",\"name\":\"startWithinField\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"deleteCount\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"fieldLength\",\"type\":\"uint40\"}],\"name\":\"Store_InvalidSplice\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"received\",\"type\":\"uint256\"}],\"name\":\"Store_InvalidValueSchemaLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"tableIdString\",\"type\":\"string\"}],\"name\":\"Store_TableAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"tableIdString\",\"type\":\"string\"}],\"name\":\"Store_TableNotFound\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"storeVersion\",\"type\":\"bytes32\"}],\"name\":\"HelloStore\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"}],\"name\":\"Store_DeleteRecord\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"}],\"name\":\"Store_DeleteRecord\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"staticData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dynamicData\",\"type\":\"bytes\"}],\"name\":\"Store_SetRecord\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"staticData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dynamicData\",\"type\":\"bytes\"}],\"name\":\"Store_SetRecord\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint40\",\"name\":\"deleteCount\",\"type\":\"uint40\"},{\"indexed\":false,\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Store_SpliceDynamicData\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint40\",\"name\":\"deleteCount\",\"type\":\"uint40\"},{\"indexed\":false,\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Store_SpliceDynamicData\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Store_SpliceStaticData\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Store_SpliceStaticData\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"}],\"name\":\"deleteRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"dynamicFieldIndex\",\"type\":\"uint8\"}],\"name\":\"getDynamicField\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"dynamicFieldIndex\",\"type\":\"uint8\"}],\"name\":\"getDynamicFieldLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"dynamicFieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"name\":\"getDynamicFieldSlice\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"fieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"name\":\"getField\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"fieldIndex\",\"type\":\"uint8\"}],\"name\":\"getField\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"}],\"name\":\"getFieldLayout\",\"outputs\":[{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"fieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"name\":\"getFieldLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"fieldIndex\",\"type\":\"uint8\"}],\"name\":\"getFieldLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"}],\"name\":\"getKeySchema\",\"outputs\":[{\"internalType\":\"Schema\",\"name\":\"keySchema\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"name\":\"getRecord\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"staticData\",\"type\":\"bytes\"},{\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dynamicData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"}],\"name\":\"getRecord\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"staticData\",\"type\":\"bytes\"},{\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dynamicData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"fieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"name\":\"getStaticField\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"}],\"name\":\"getValueSchema\",\"outputs\":[{\"internalType\":\"Schema\",\"name\":\"valueSchema\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"dynamicFieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"byteLengthToPop\",\"type\":\"uint256\"}],\"name\":\"popFromDynamicField\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"dynamicFieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"dataToPush\",\"type\":\"bytes\"}],\"name\":\"pushToDynamicField\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IStoreHook\",\"name\":\"hookAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"enabledHooksBitmap\",\"type\":\"uint8\"}],\"name\":\"registerStoreHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"},{\"internalType\":\"Schema\",\"name\":\"keySchema\",\"type\":\"bytes32\"},{\"internalType\":\"Schema\",\"name\":\"valueSchema\",\"type\":\"bytes32\"},{\"internalType\":\"string[]\",\"name\":\"keyNames\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"fieldNames\",\"type\":\"string[]\"}],\"name\":\"registerTable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"dynamicFieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"setDynamicField\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"fieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"setField\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"fieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"name\":\"setField\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"staticData\",\"type\":\"bytes\"},{\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dynamicData\",\"type\":\"bytes\"}],\"name\":\"setRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"fieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"name\":\"setStaticField\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"dynamicFieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"uint40\",\"name\":\"startWithinField\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"deleteCount\",\"type\":\"uint40\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"spliceDynamicData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"spliceStaticData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storeVersion\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCompareSolidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testDeleteExternalCold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testDeleteInternalCold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testEncode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testRegisterAndGetFieldLayout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testRegisterAndGetSchema\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSetGetDeleteExternal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSetGetDeleteInternal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IStoreHook\",\"name\":\"hookAddress\",\"type\":\"address\"}],\"name\":\"unregisterStoreHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"SchemaLib_InvalidLength(uint256)\":[{\"details\":\"Error raised when the provided schema has an invalid length.\"}],\"SchemaLib_StaticTypeAfterDynamicType()\":[{\"details\":\"Error raised when a static type is placed after a dynamic type in a schema.\"}]},\"events\":{\"HelloStore(bytes32)\":{\"params\":{\"storeVersion\":\"The version of the Store contract.\"}},\"Store_DeleteRecord(bytes32,bytes32[])\":{\"params\":{\"keyTuple\":\"An array representing the composite key for the record.\",\"tableId\":\"The ID of the table where the record is deleted.\"}},\"Store_SetRecord(bytes32,bytes32[],bytes,bytes32,bytes)\":{\"params\":{\"dynamicData\":\"The dynamic data of the record.\",\"encodedLengths\":\"The encoded lengths of the dynamic data of the record.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"staticData\":\"The static data of the record.\",\"tableId\":\"The ID of the table where the record is set.\"}},\"Store_SpliceDynamicData(bytes32,bytes32[],uint48,uint40,bytes32,bytes)\":{\"params\":{\"data\":\"The data to insert into the dynamic data of the record at the start byte.\",\"deleteCount\":\"The number of bytes to delete in the splice operation.\",\"encodedLengths\":\"The encoded lengths of the dynamic data of the record.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"start\":\"The start position in bytes for the splice operation.\",\"tableId\":\"The ID of the table where the data is spliced.\"}},\"Store_SpliceStaticData(bytes32,bytes32[],uint48,bytes)\":{\"details\":\"In static data, data is always overwritten starting at the start position, so the total length of the data remains the same and no data is shifted.\",\"params\":{\"data\":\"The data to write to the static data of the record at the start byte.\",\"keyTuple\":\"An array representing the key for the record.\",\"start\":\"The start position in bytes for the splice operation.\",\"tableId\":\"The ID of the table where the data is spliced.\"}}},\"kind\":\"dev\",\"methods\":{\"getDynamicField(bytes32,bytes32[],uint8)\":{\"params\":{\"dynamicFieldIndex\":\"Index of the dynamic field to retrieve.\",\"keyTuple\":\"The tuple used as a key to fetch the dynamic field.\",\"tableId\":\"The ID of the table.\"},\"returns\":{\"data\":\"The dynamic data of the specified field.\"}},\"getDynamicFieldLength(bytes32,bytes32[],uint8)\":{\"params\":{\"dynamicFieldIndex\":\"Index of the dynamic field to measure.\",\"keyTuple\":\"The tuple used as a key.\",\"tableId\":\"The ID of the table.\"},\"returns\":{\"_0\":\"The length of the specified dynamic field.\"}},\"getDynamicFieldSlice(bytes32,bytes32[],uint8,uint256,uint256)\":{\"params\":{\"dynamicFieldIndex\":\"Index of the dynamic field to slice.\",\"end\":\"The ending position of the slice.\",\"keyTuple\":\"The tuple used as a key to fetch the dynamic field slice.\",\"start\":\"The starting position of the slice.\",\"tableId\":\"The ID of the table.\"},\"returns\":{\"_0\":\"The sliced data from the specified dynamic field.\"}},\"getField(bytes32,bytes32[],uint8)\":{\"details\":\"This overload loads the FieldLayout from storage. If the table's FieldLayout is known to the caller, it should be passed in to the other overload to avoid the storage read.\",\"params\":{\"fieldIndex\":\"Index of the field to retrieve.\",\"keyTuple\":\"The tuple used as a key to fetch the field.\",\"tableId\":\"The ID of the table.\"},\"returns\":{\"data\":\"The data of the specified field.\"}},\"getField(bytes32,bytes32[],uint8,bytes32)\":{\"params\":{\"fieldIndex\":\"Index of the field to retrieve.\",\"fieldLayout\":\"The layout of fields for the retrieval.\",\"keyTuple\":\"The tuple used as a key to fetch the field.\",\"tableId\":\"The ID of the table.\"},\"returns\":{\"data\":\"The data of the specified field.\"}},\"getFieldLayout(bytes32)\":{\"params\":{\"tableId\":\"The ID of the table for which to retrieve the field layout.\"},\"returns\":{\"fieldLayout\":\"The layout of fields in the specified table.\"}},\"getFieldLength(bytes32,bytes32[],uint8)\":{\"details\":\"This overload loads the FieldLayout from storage. If the table's FieldLayout is known to the caller, it should be passed in to the other overload to avoid the storage read.\",\"params\":{\"fieldIndex\":\"Index of the field to measure.\",\"keyTuple\":\"The tuple used as a key.\",\"tableId\":\"The ID of the table.\"},\"returns\":{\"_0\":\"The length of the specified field.\"}},\"getFieldLength(bytes32,bytes32[],uint8,bytes32)\":{\"params\":{\"fieldIndex\":\"Index of the field to measure.\",\"fieldLayout\":\"The layout of fields for measurement.\",\"keyTuple\":\"The tuple used as a key.\",\"tableId\":\"The ID of the table.\"},\"returns\":{\"_0\":\"The length of the specified field.\"}},\"getKeySchema(bytes32)\":{\"params\":{\"tableId\":\"The ID of the table.\"},\"returns\":{\"keySchema\":\"The schema for keys in the specified table.\"}},\"getRecord(bytes32,bytes32[])\":{\"params\":{\"keyTuple\":\"The tuple used as a key to fetch the record.\",\"tableId\":\"The ID of the table.\"},\"returns\":{\"dynamicData\":\"The dynamic data of the record.\",\"encodedLengths\":\"Encoded lengths of dynamic data.\",\"staticData\":\"The static data of the record.\"}},\"getRecord(bytes32,bytes32[],bytes32)\":{\"params\":{\"fieldLayout\":\"The layout of fields to retrieve.\",\"keyTuple\":\"The tuple used as a key to fetch the record.\",\"tableId\":\"The ID of the table.\"},\"returns\":{\"dynamicData\":\"The dynamic data of the record.\",\"encodedLengths\":\"Encoded lengths of dynamic data.\",\"staticData\":\"The static data of the record.\"}},\"getStaticField(bytes32,bytes32[],uint8,bytes32)\":{\"params\":{\"fieldIndex\":\"Index of the static field to retrieve.\",\"fieldLayout\":\"The layout of fields for the retrieval.\",\"keyTuple\":\"The tuple used as a key to fetch the static field.\",\"tableId\":\"The ID of the table.\"},\"returns\":{\"data\":\"The static data of the specified field.\"}},\"getValueSchema(bytes32)\":{\"params\":{\"tableId\":\"The ID of the table.\"},\"returns\":{\"valueSchema\":\"The schema for values in the specified table.\"}},\"storeVersion()\":{\"returns\":{\"_0\":\"The current version of the store as a bytes32.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"HelloStore(bytes32)\":{\"notice\":\"Emitted when the store is initialized.\"},\"Store_DeleteRecord(bytes32,bytes32[])\":{\"notice\":\"Emitted when a record is deleted from the store.\"},\"Store_SetRecord(bytes32,bytes32[],bytes,bytes32,bytes)\":{\"notice\":\"Emitted when a new record is set in the store.\"},\"Store_SpliceDynamicData(bytes32,bytes32[],uint48,uint40,bytes32,bytes)\":{\"notice\":\"Emitted when dynamic data in the store is spliced.\"},\"Store_SpliceStaticData(bytes32,bytes32[],uint48,bytes)\":{\"notice\":\"Emitted when static data in the store is spliced.\"}},\"kind\":\"user\",\"methods\":{\"getDynamicField(bytes32,bytes32[],uint8)\":{\"notice\":\"Retrieves data for a specific dynamic (variable length) field in a record.\"},\"getDynamicFieldLength(bytes32,bytes32[],uint8)\":{\"notice\":\"Calculates the length of a specified dynamic (variable length) field in a record.\"},\"getDynamicFieldSlice(bytes32,bytes32[],uint8,uint256,uint256)\":{\"notice\":\"Retrieves a slice of a dynamic (variable length) field.\"},\"getField(bytes32,bytes32[],uint8)\":{\"notice\":\"Retrieves data for a specified field in a record.\"},\"getField(bytes32,bytes32[],uint8,bytes32)\":{\"notice\":\"Retrieves data for a specified field in a record.\"},\"getFieldLayout(bytes32)\":{\"notice\":\"Fetches the field layout for a given table.\"},\"getFieldLength(bytes32,bytes32[],uint8)\":{\"notice\":\"Calculates the length of a specified field in a record.\"},\"getFieldLength(bytes32,bytes32[],uint8,bytes32)\":{\"notice\":\"Calculates the length of a specified field in a record.\"},\"getKeySchema(bytes32)\":{\"notice\":\"Retrieves the key schema for a given table.\"},\"getRecord(bytes32,bytes32[])\":{\"notice\":\"Fetches a record from a specified table using a provided key tuple.\"},\"getRecord(bytes32,bytes32[],bytes32)\":{\"notice\":\"Fetches a record from a specified table using a provided key tuple and field layout.\"},\"getStaticField(bytes32,bytes32[],uint8,bytes32)\":{\"notice\":\"Retrieves data for a specific static (fixed length) field in a record.\"},\"getValueSchema(bytes32)\":{\"notice\":\"Retrieves the value schema for a given table.\"},\"storeVersion()\":{\"notice\":\"Retrieves the version of the store.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Mixed.t.sol\":\"MixedTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[\":@latticexyz/=node_modules/@latticexyz/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"node_modules/@latticexyz/gas-report/src/GasReporter.sol\":{\"keccak256\":\"0xf0b03a19a92cd2e9950c25b6d307e5aeca4a64be8932194431197d0570e9bf3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef2a14f0fb6e5bcab0c70d3648d247c3919c63eabc8b226be4d1f359d8af860f\",\"dweb:/ipfs/QmXi1HgeUNmS9GwSFMDJa8QVT7KiENG9VjgBB78hpHrHV6\"]},\"node_modules/@latticexyz/schema-type/src/solidity/SchemaType.sol\":{\"keccak256\":\"0x770eff7a38b9b7b1613dc11ca09db4f28b42a117c9b39b2a06a650a58a250bdb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39f544110658a53def52c2a4e33b8b158b95a4f14fccea58d5268b6e728d86d4\",\"dweb:/ipfs/QmTesj6tjSFbfAiKUitXapdNYWPStS8bLkB3r22qfyHwUC\"]},\"node_modules/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"node_modules/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"node_modules/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"node_modules/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x51e6eb138fc953fac1ac78012a39b3f16d9289ce06a222ba93bb0621768f96e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c577e054cf578594148a07b286571d494f401b6d4a940d3ccabd47b29233d\",\"dweb:/ipfs/QmTWDVvR4m82MGXWYY8BCaVN89TguQJSLqRgzHzrMkFHtx\"]},\"node_modules/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x2e1b4b99283c16efaf155f7e55ea357943cf6e61fc02aad060534349f63b6cd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d471a35903e8a367a145ca5b5955caf691c723fe1117c6dcffd928d9f8d7c95a\",\"dweb:/ipfs/QmXGnFUGiX9APL8xit7NZQEYBoEL3wWyW1YyFoJQd2pGPe\"]},\"node_modules/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"node_modules/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c\",\"dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss\"]},\"node_modules/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"node_modules/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"node_modules/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x391a28a2e54aea51a6fb03a3a48035304ca4d24bc669ddf3d4c152c7162e514d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://475fd0d87ccb0fdc4418dea2babffb4adb4aafb817e61f7ef31c2303f10c6c26\",\"dweb:/ipfs/QmQgcgtZxpkW6DRmbJszN1F8mU6zhaTZGdWWsj77yCuWN9\"]},\"node_modules/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"node_modules/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"node_modules/forge-std/src/Test.sol\":{\"keccak256\":\"0xf3b62c75cea11a0e8ef8e6526e5e5c74ae47a892b9bcefc0e98d76066e1ffd24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a41faaf836453e02c71fc272c80b3c90a614b30c9ba636512db0d033c7b93beb\",\"dweb:/ipfs/QmeQAreYYaxztQtFLQdHCzCPEorj9T5foSu2hQmxk7xT5x\"]},\"node_modules/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb569d0b4398fad95f508fb854e832143edf69a897af4250f5f60fe195a2066c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84b722ada97ea7bb841cdc0fa556aa36a02ff2d380fa24f6dc0717a71c6d9c7c\",\"dweb:/ipfs/QmfCH9Q4tvJhPM286GFsE4UCP4YncLpRu4Nwa2ZkHdRfbw\"]},\"node_modules/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"node_modules/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"node_modules/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"src/Bytes.sol\":{\"keccak256\":\"0xab31edce915377852bb5f29f7f2ccfc50cac087d64d2a8aae669715ad862d558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3187e86e43be1fbdd59df45c695294f1114aa1ac48e6445c0cb26089434be5c4\",\"dweb:/ipfs/Qmck7shMVrcKMVkgN2pC1byPY7hb3V9fTxnUcGgxAUeXYk\"]},\"src/FieldLayout.sol\":{\"keccak256\":\"0x2a0536cd6cecc479d0b81d5aad6380231f4d6873beadc54814d801c2036b02c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e07c041e19146a9ec258cc700a450b4d49440202895eb12f3bb17508427c23ba\",\"dweb:/ipfs/QmXoqrCGDSkuFgNSMURRFdjokjREL78nLDzNaUi6rjefy9\"]},\"src/Hook.sol\":{\"keccak256\":\"0x045024523eb55d08ad8d13eca6185bff2988865f4aa12e3f9372029c2ecb8ddd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6621c53b49f8fe0557d1a1db47bfe1561801c09256948dd0652fb41541891a18\",\"dweb:/ipfs/QmZgFVCUH1pKcc9MeFyzMe1VW87SLz6c9szGwrDRUp6BZe\"]},\"src/IERC165.sol\":{\"keccak256\":\"0x2bbc3c43400c15a91a5cb35430a91309cb64a4d13a0a170eacec71dcf334feaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f44dfc9605067de539de07a76a34bf469faa9e6dad8c192abafc2e05860c7dd2\",\"dweb:/ipfs/QmX8xgG6XWokM7YFwFZvmMhuh1uhkSjxCMD2oTHjUVdapb\"]},\"src/IStore.sol\":{\"keccak256\":\"0x9092b65551d0f910e5645cebb5acadb387cdd192d75fa89cd6b293bd65b28827\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://478825a6f7eff9ddab968e71e1d55ebee279d3b318f10976d9334384000059c0\",\"dweb:/ipfs/Qme7NY976woRy3RQjE4tkkiwoXnoVtTmER3PbWCSbjZ2kb\"]},\"src/IStoreData.sol\":{\"keccak256\":\"0xa8eade05c551aeef35c84727d7a44af239516deb2d8a0cfb7ebeb5d88c6995e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5335910bd8a204abb5f4396fb911a5ee5c221bd7fa63b1cc8ae5e737c6458c6a\",\"dweb:/ipfs/QmckkCAfrNcWo3yDxoD1jCe1k4iDA2GzVDpFjJZs7W79vx\"]},\"src/IStoreErrors.sol\":{\"keccak256\":\"0xb9070663ded3cad82285bb7610949e422f88abb48c2ddbd792af83d127d64212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://830490f1c888bec86df1e7ef43773d60ebdbdfdb2b91ab7fe074e2f38d7439dc\",\"dweb:/ipfs/QmS26fpXdZuGgMmjcdQDf9k1Bedn2dhjk9byFZJoNkctPZ\"]},\"src/IStoreEvents.sol\":{\"keccak256\":\"0xdd3104680808f975462a85cbd4fa87783ba5395797419caeeca37e8f8627a16f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://943864b7eb16ad2047ade5a8598e85c8a4b46d1aed6aef02bfb7cee8de732b4d\",\"dweb:/ipfs/QmTEij4caToSNk15PFpubXYDy9QhwmPyP9tMXjUse2cTdv\"]},\"src/IStoreHook.sol\":{\"keccak256\":\"0xa6777c7868333996ad9c61a94457dcac702d8d7445a104dfdc86543d25e7470e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6268a16449d7529a94746d0103670dd0e38faf5117bf914fb01da9947ab44c2e\",\"dweb:/ipfs/QmaSfbx1QRA3jw2K8bGkQTw4CTGPUzNqnCJW7LwaFUJCXy\"]},\"src/IStoreRead.sol\":{\"keccak256\":\"0xd2180d53ecd31069b1166f170ecdcd85917ac50f45fc26fb39b49cee7ba00e37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1494bb0a3228e2d194bddaed4761fd3ca865979f0e3f3a53acd271143a4aa0ac\",\"dweb:/ipfs/Qmaddnzzmu99iP9dTWK9ZeByh5dZyjY9SpVnRdvyr2fBAo\"]},\"src/IStoreRegistration.sol\":{\"keccak256\":\"0xf448fbb2bc9c982721a43234463656da5a49cea08543e62148d54f11e1ac3e2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64b3579d9b9dcd73dca2beab3d4fcf60237420945ebbb2e9f4ffcc88f4110115\",\"dweb:/ipfs/QmaW5nN3zGEriSYHncye6Nz2TkAw1oo1CyG2JuJTJrJoXg\"]},\"src/IStoreWrite.sol\":{\"keccak256\":\"0x8b6c7af5ee330928aebb58c8872d3944304ee10ed11f8a325b6accc4ec5df81b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b866d158701c7a40834bed735194b804ef219f2bbe574e2307785fff7bcf9da1\",\"dweb:/ipfs/QmXzJfZkXVfyr2RFGwDuazeVnV3UWYmQxjKZ3KzFbbe75U\"]},\"src/Memory.sol\":{\"keccak256\":\"0x69295976e61a1a108d1b4d6eb497b238730309f3047c4320d48e01a0ce8d4ec7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://559c451b21fb9dd4fec27b41bef42f4362f1e7ebb7992106d548b9d4f733b3e5\",\"dweb:/ipfs/QmeSE7YTW5zUrfZYFVb2pFnDe3XxiT8XNecfwC3wfpxCRv\"]},\"src/PackedCounter.sol\":{\"keccak256\":\"0x44ddfa9eb8a861462c550f0a9d66c40c68acdb347a61fa765949608407a2c7fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47ee957f4b19cab9e20bf5fc569c015eca13852fb3351f2a105a8be9c48204c0\",\"dweb:/ipfs/QmNkyzDobVQLoq9BtQ8HtgsPLiqnmi97EZx1wsu6wp8nKH\"]},\"src/ResourceId.sol\":{\"keccak256\":\"0x40983c580b8958e55db4520095934a535e98544ffe8228327e598973eb6647ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839d658fa2bb2b1f09a08149d2bf0c26a26c301ad2dda8154fc99458085a695d\",\"dweb:/ipfs/Qmd5jHHYrgqraPqF8bjzT4xyjsoPk8K7pkxXLLfz6MRT6d\"]},\"src/Schema.sol\":{\"keccak256\":\"0x58aef318ba03f8ff8866ef70f8a30f549b150657ea699734aefe16c298956401\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dc104690a7e2bcf5ce1afadcd58f8ef4d639b4b92b9ad9293656235d54395f3\",\"dweb:/ipfs/QmYJJvEv5KBJ3kzf9AkgRn7Uu5dp4exGTRddf4cae1btgE\"]},\"src/Slice.sol\":{\"keccak256\":\"0xfaf54b1f5acccd4c6ce3f8377050ee84efbb423cb604b4651e8b9ea3b467bf32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acf2ce7ffec21f28ad1dc6da06c342f1212a03a3d16a0be7ee85715a5940718c\",\"dweb:/ipfs/QmTCN3NSdFg87hi7KS2Xtq7PsmRUMG64SxC8PtP3p2GzuT\"]},\"src/Storage.sol\":{\"keccak256\":\"0x0893905ebe431a414226b479a84a54804091001a406222c748adbd4b651853a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcfcd3848127884041f0bcd727a0e7acbddec283aa6c16ba47abc6a3be720648\",\"dweb:/ipfs/QmY5fBd53e4Ro6vzTZYsteSibSTXVA3GHTeCAiUZTa5DPZ\"]},\"src/StoreCore.sol\":{\"keccak256\":\"0x95b7d62d84b43777c54dd1c7d941dbb5ba0afc02c444c30cfdb1de671bbbf180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe62a2fdb2a73610c3072f31b7f88ed3f9d03c1009fe0f0ef37a7eb814b23534\",\"dweb:/ipfs/QmV85zaV5HAD6eGc5N4RmdtmpR6EwkswVLQTaR2aJqsXrj\"]},\"src/StoreData.sol\":{\"keccak256\":\"0x4e451128c33a01d520c1944b3db42a62c158aea8fa11e786a58a0f719a189526\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2f98f30a7b2c9ef020e274b87ae0fa66d1380343a00ecf6bd796ae31cd9b279\",\"dweb:/ipfs/QmYXHSBn4Hp7cimDLKy86ep23v2VRUS6dLPevcVMs3dJrw\"]},\"src/StoreRead.sol\":{\"keccak256\":\"0x0da12dea94f088d01b1b0d6d4887f628c61c9c34a4c74a4c9033621bddcc007f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e77d66891e1cdff6899e00c7993302dd77dd291f954b79d2c582da076e22264\",\"dweb:/ipfs/QmcLyDFSnyMUF89hGhPX4nvUpkXdJSxBe5zGSJFqTAT5Mj\"]},\"src/StoreSwitch.sol\":{\"keccak256\":\"0xf132af10f960a498f49c0534027056e715f4bdcb8fbdb53ac6879c92309ab416\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e85a09aeb7543bcd9d74b7ad319ae61e1f7f15a6a0ad9e79aff750fbd18111c7\",\"dweb:/ipfs/QmY6xgqeeaR1FsCPLmFbVgjm1D2UyrXNABKXWLfFaSmBhR\"]},\"src/codegen/index.sol\":{\"keccak256\":\"0xf337a5abb2d43ef00c1c200e7fbec30fc89c7c701e457ab4277194b700d2aea3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eccdf6158076b4e8f1b587a0310228f53323705e054a44eaa7733f38805c3ee6\",\"dweb:/ipfs/QmbXEVNTctg54dK9awdCVyAjeuUjR6ckfmmXBP8DrFmjyq\"]},\"src/codegen/tables/Hooks.sol\":{\"keccak256\":\"0xc5c6f807cff6b4dc486525c559ba3f7cbb034ac5895636ee64c9d01defa6a38e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84d3a3b3fd3afa2ab3231fd7fe981889dfb0600deec34c5d4e9c07d3187af8a5\",\"dweb:/ipfs/Qmanj7WjETqBYQXkxKLjqWs4vMp3en3N69B5MacKme5fpD\"]},\"src/codegen/tables/ResourceIds.sol\":{\"keccak256\":\"0xf7a9bf3e37b486377005c556cdf5b813ea1a41278b3a0349f81e3c82a2f1c789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92cc87add89abcb126bf3cd0b284f25065c2b9c90a49f8dba4629b28a5b87751\",\"dweb:/ipfs/QmNNBDSK5GNujERGiSUhorbmtpdD2UnGz7MqSSDasEGdub\"]},\"src/codegen/tables/StoreHooks.sol\":{\"keccak256\":\"0xa1186b8b6143b4a87cea1624785494398be1613cb7c6f9e57734e1cca1d5dd14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://488c158082622689d035d7964c6ca063295e53078291c340eb6a23db08e8ff95\",\"dweb:/ipfs/QmWcjo3B5SH7jStXKAuf7qvF2ouz6syw9c7aT86PnTgRqW\"]},\"src/codegen/tables/Tables.sol\":{\"keccak256\":\"0xd47e1921c07fc8608157b5dc343fcef7235e891ea6a21dec1fb118a0bd797fcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01a6ad068e6991994a0939f22a55245e0c7c82fc5e274da0af616286a8acfc7a\",\"dweb:/ipfs/QmPokA3pSexzZY33MMV6BGx48ZwQegdUN5AijiAfycSDxy\"]},\"src/constants.sol\":{\"keccak256\":\"0x9e37c64c119ef07ad914bc589ee3f6d67946ab95877978c1ee3e2c1ffae07076\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fad47e542025382aa28e8171253e34f93b2f149434b67a26989542d70218793\",\"dweb:/ipfs/QmW6JsKNwPc6oAMrgcikgR2EPwMUtQANiuZSQSGCd29HHC\"]},\"src/leftMask.sol\":{\"keccak256\":\"0xd0360567e4d77c6a8e3d8a5f4bf3653ccde4d268674c50988d55695dc6193f6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53e6bcb53fcb08ee9426225fdab7c41df91e12cb4f80d92895a6117338627401\",\"dweb:/ipfs/QmeLcaPGeMBpNSTSsPYK3PHpzKuGMjuitCweAWcoXK2mXr\"]},\"src/storeHookTypes.sol\":{\"keccak256\":\"0x60880298016fa117ed9a43ddfd020f11d98a2d345bdcb08e5884e40df98eddd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3619dfda1fd514c0fc5fb34c14d5b5aa41dd6ba6045d37d5f4c8199f3a826f81\",\"dweb:/ipfs/QmbzRBYfVa423gNzCitpGN3i2N9oeGYfinVE1jgtqxnNZX\"]},\"src/storeResourceTypes.sol\":{\"keccak256\":\"0xada1867ba72930fc5cf5562dd4e36de849dbac9c833b7969cb1b046a808fabf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e4b5fdcaa54f567a3f8561c2c3fbc0d68c8dad892a4a8e5418bbce8efc53d84\",\"dweb:/ipfs/QmTWbYJX1yrCqrEwUKB9rGpHdRvLNU8GCkBbxnLjGD4d2t\"]},\"src/tightcoder/DecodeSlice.sol\":{\"keccak256\":\"0x1af0fd984640123391ec2df855d00298504b7ce186a56c2caca769cfd9e08e04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7305a62318890d2cc6420ba7dec13d9f2c1cb67ac689015fc83b9cbccd0696f1\",\"dweb:/ipfs/QmR8jGNLbt64Tv1YZKRVBCVsd71oeUQFzGHHtpsrs4PuRq\"]},\"src/tightcoder/EncodeArray.sol\":{\"keccak256\":\"0x1c280d24360282e196d9c4833c58c2437108cea2af0ac7596f95be81389e306d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b4556b6eeae9328fbd9adcce346547e823c397503276a4d63effb67e00b5b49\",\"dweb:/ipfs/QmUsynVsMYzjh8oJR8YB7SRrwFMdXcsQsHBrXxLEEFxsiB\"]},\"src/tightcoder/TightCoder.sol\":{\"keccak256\":\"0x5cacd4cb371e0a79bc8d64f62349d568fd8b08093c11ae0c3db4f16480d8808b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12b64ddf2b5c19cf68ba93a8153ed79cbafe7a91e015d4b2f25eb1d42ab06256\",\"dweb:/ipfs/QmQz5WwztcuTbSGFv2pkhU3w5scUj1gmavoyUpduxk2v3A\"]},\"src/version.sol\":{\"keccak256\":\"0x01029999a48b7c1d85de84cae465dd24ec126c95b8a865cd20c7ed5dfcc0f02c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9750164ce996badb0fd7df2f526780b9cb9558912405fe46f31064bd7c522491\",\"dweb:/ipfs/QmYf8m2ZXFANRc9ysHgNkNtSF327ccxKYjCUJ49UXBKADk\"]},\"test/Mixed.t.sol\":{\"keccak256\":\"0x9b2c99840663b6afab98953f796047cba167d3515c2a62d22676bd2eade7c5b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f91105ee83680b386b837055011b0f0e9d36a86d61c4f40936bf587c65277e98\",\"dweb:/ipfs/QmWc6LLbLfnAAqniqRYZwqi1VBouHZADEYx7wguJirh8KL\"]},\"test/StoreMock.sol\":{\"keccak256\":\"0xd9fe932bd756bb49643aadc437252c8681bea58293cc1a4020a43f59a9f30c48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99eb4a5609a8ae41b0eb0aafbfc23135ac92eebc0280040ea1a5b8dd270301f3\",\"dweb:/ipfs/QmcXfKcLgf3stUvRwCScX95Aqavubq2ULe3idUtjp8uPYf\"]},\"test/codegen/common.sol\":{\"keccak256\":\"0xfb8a86c7cd9337dd447f5fec131d86e668e855094eb030cf8aee4bef293595f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9713bddb9dcbf611048148a195c0239480b1ac29df22df9fbd2df36274aa8d0b\",\"dweb:/ipfs/QmYoNyg6iLpGQkXA5szq67KGR8eaz8yyTwy2X66wtDj9Bo\"]},\"test/codegen/index.sol\":{\"keccak256\":\"0xd78a354e0d72ddbb1588dca45d594ad53448e38a860ccf08fac0cdb8613a1cdc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fc75fd8c8b1e5f23eb7bf836dc50b2b45b2c4673feb6740d9dc0ebb586430fb\",\"dweb:/ipfs/QmQsEq1MnUcFsi7sPcJ2qB3F1HXFTpp942a23YKRwGS6SD\"]},\"test/codegen/tables/Callbacks.sol\":{\"keccak256\":\"0x952167daaa1d2abe689a1341da215a911f9385a3dbf07a2054ea9118411ef075\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b4430402bbb75818d78a84fa8bdff13047e8657033006696e5709a54128497c\",\"dweb:/ipfs/QmPbTS9Bwy9rt9P8FbFrWCyshhj4SKLP4Usjzg8EbbDzCt\"]},\"test/codegen/tables/KeyEncoding.sol\":{\"keccak256\":\"0x6903d228e0924ae95f26142a0a705e84b7e634e74cdbe990f91b1e724bf94af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://571eb25e3f3b8b11a4fd375aad9c7d72e9a7755140e2c9abf773d4bac06a4fe4\",\"dweb:/ipfs/Qmc1txvZ6Cydb2bfPXFvbBXeTzCFnjFsKj8TeXKrxWvHB7\"]},\"test/codegen/tables/Mixed.sol\":{\"keccak256\":\"0x693215d82222a8591b22d239609804af57cdb7ce639eeea656925c1a45422ce2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b957dc4c77e6b83d185cb197b14887d413f2d7df2e60d11e1cb0ce0785af72c0\",\"dweb:/ipfs/QmaCyS7CwW6yWRoAZKsQNTmkgC7mXhqX9zhpFwgtzDfUPQ\"]},\"test/codegen/tables/Vector2.sol\":{\"keccak256\":\"0xf6c5e8812290a7e867ff37e6bf755504b2c26281c681376e1bea3e9a7bda3d3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ddad24363ad8887706ae7f4303924479cb218ae28a3963019abc2049ff85ec9\",\"dweb:/ipfs/QmdcQLBFH7CsnhnWmTb896nFVGPv76wnqL4Ui8Zw9B2Dz9\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "FieldLayoutLib_InvalidLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FieldLayoutLib_StaticLengthDoesNotFitInAWord"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FieldLayoutLib_StaticLengthIsZero"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "PackedCounter_InvalidLength"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "SchemaLib_InvalidLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SchemaLib_StaticTypeAfterDynamicType"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Slice_OutOfBounds"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "length",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "accessedIndex",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Store_IndexOutOfBounds"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "expected",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "received",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Store_InvalidDynamicDataLength"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "expected",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "received",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Store_InvalidFieldNamesLength"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "expected",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "received",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Store_InvalidKeyNamesLength"
        },
        {
          "inputs": [
            {
              "internalType": "bytes2",
              "name": "expected",
              "type": "bytes2"
            },
            {
              "internalType": "ResourceId",
              "name": "resourceId",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "resourceIdString",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "Store_InvalidResourceType"
        },
        {
          "inputs": [
            {
              "internalType": "uint40",
              "name": "startWithinField",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "deleteCount",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "fieldLength",
              "type": "uint40"
            }
          ],
          "type": "error",
          "name": "Store_InvalidSplice"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "expected",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "received",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Store_InvalidValueSchemaLength"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "tableIdString",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "Store_TableAlreadyExists"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "tableIdString",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "Store_TableNotFound"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "storeVersion",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "HelloStore",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Store_DeleteRecord",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Store_DeleteRecord",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "staticData",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "PackedCounter",
              "name": "encodedLengths",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "dynamicData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Store_SetRecord",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "staticData",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "PackedCounter",
              "name": "encodedLengths",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "dynamicData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Store_SetRecord",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]",
              "indexed": false
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48",
              "indexed": false
            },
            {
              "internalType": "uint40",
              "name": "deleteCount",
              "type": "uint40",
              "indexed": false
            },
            {
              "internalType": "PackedCounter",
              "name": "encodedLengths",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Store_SpliceDynamicData",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]",
              "indexed": false
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48",
              "indexed": false
            },
            {
              "internalType": "uint40",
              "name": "deleteCount",
              "type": "uint40",
              "indexed": false
            },
            {
              "internalType": "PackedCounter",
              "name": "encodedLengths",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Store_SpliceDynamicData",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]",
              "indexed": false
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Store_SpliceStaticData",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]",
              "indexed": false
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Store_SpliceStaticData",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteRecord"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "dynamicFieldIndex",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDynamicField",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "dynamicFieldIndex",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDynamicFieldLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "dynamicFieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDynamicFieldSlice",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "fieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "FieldLayout",
              "name": "fieldLayout",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getField",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "fieldIndex",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getField",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFieldLayout",
          "outputs": [
            {
              "internalType": "FieldLayout",
              "name": "fieldLayout",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "fieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "FieldLayout",
              "name": "fieldLayout",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFieldLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "fieldIndex",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFieldLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getKeySchema",
          "outputs": [
            {
              "internalType": "Schema",
              "name": "keySchema",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "FieldLayout",
              "name": "fieldLayout",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRecord",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "staticData",
              "type": "bytes"
            },
            {
              "internalType": "PackedCounter",
              "name": "encodedLengths",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "dynamicData",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRecord",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "staticData",
              "type": "bytes"
            },
            {
              "internalType": "PackedCounter",
              "name": "encodedLengths",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "dynamicData",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "fieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "FieldLayout",
              "name": "fieldLayout",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStaticField",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getValueSchema",
          "outputs": [
            {
              "internalType": "Schema",
              "name": "valueSchema",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "dynamicFieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "byteLengthToPop",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "popFromDynamicField"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "dynamicFieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "dataToPush",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pushToDynamicField"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IStoreHook",
              "name": "hookAddress",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "enabledHooksBitmap",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerStoreHook"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "FieldLayout",
              "name": "fieldLayout",
              "type": "bytes32"
            },
            {
              "internalType": "Schema",
              "name": "keySchema",
              "type": "bytes32"
            },
            {
              "internalType": "Schema",
              "name": "valueSchema",
              "type": "bytes32"
            },
            {
              "internalType": "string[]",
              "name": "keyNames",
              "type": "string[]"
            },
            {
              "internalType": "string[]",
              "name": "fieldNames",
              "type": "string[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerTable"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "dynamicFieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDynamicField"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "fieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setField"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "fieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "FieldLayout",
              "name": "fieldLayout",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setField"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes",
              "name": "staticData",
              "type": "bytes"
            },
            {
              "internalType": "PackedCounter",
              "name": "encodedLengths",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "dynamicData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRecord"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "fieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "FieldLayout",
              "name": "fieldLayout",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStaticField"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "dynamicFieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "uint40",
              "name": "startWithinField",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "deleteCount",
              "type": "uint40"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "spliceDynamicData"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "spliceStaticData"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "storeVersion",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCompareSolidity"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDeleteExternalCold"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDeleteInternalCold"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testEncode"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testRegisterAndGetFieldLayout"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testRegisterAndGetSchema"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSetGetDeleteExternal"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSetGetDeleteInternal"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IStoreHook",
              "name": "hookAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unregisterStoreHook"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getDynamicField(bytes32,bytes32[],uint8)": {
            "params": {
              "dynamicFieldIndex": "Index of the dynamic field to retrieve.",
              "keyTuple": "The tuple used as a key to fetch the dynamic field.",
              "tableId": "The ID of the table."
            },
            "returns": {
              "data": "The dynamic data of the specified field."
            }
          },
          "getDynamicFieldLength(bytes32,bytes32[],uint8)": {
            "params": {
              "dynamicFieldIndex": "Index of the dynamic field to measure.",
              "keyTuple": "The tuple used as a key.",
              "tableId": "The ID of the table."
            },
            "returns": {
              "_0": "The length of the specified dynamic field."
            }
          },
          "getDynamicFieldSlice(bytes32,bytes32[],uint8,uint256,uint256)": {
            "params": {
              "dynamicFieldIndex": "Index of the dynamic field to slice.",
              "end": "The ending position of the slice.",
              "keyTuple": "The tuple used as a key to fetch the dynamic field slice.",
              "start": "The starting position of the slice.",
              "tableId": "The ID of the table."
            },
            "returns": {
              "_0": "The sliced data from the specified dynamic field."
            }
          },
          "getField(bytes32,bytes32[],uint8)": {
            "details": "This overload loads the FieldLayout from storage. If the table's FieldLayout is known to the caller, it should be passed in to the other overload to avoid the storage read.",
            "params": {
              "fieldIndex": "Index of the field to retrieve.",
              "keyTuple": "The tuple used as a key to fetch the field.",
              "tableId": "The ID of the table."
            },
            "returns": {
              "data": "The data of the specified field."
            }
          },
          "getField(bytes32,bytes32[],uint8,bytes32)": {
            "params": {
              "fieldIndex": "Index of the field to retrieve.",
              "fieldLayout": "The layout of fields for the retrieval.",
              "keyTuple": "The tuple used as a key to fetch the field.",
              "tableId": "The ID of the table."
            },
            "returns": {
              "data": "The data of the specified field."
            }
          },
          "getFieldLayout(bytes32)": {
            "params": {
              "tableId": "The ID of the table for which to retrieve the field layout."
            },
            "returns": {
              "fieldLayout": "The layout of fields in the specified table."
            }
          },
          "getFieldLength(bytes32,bytes32[],uint8)": {
            "details": "This overload loads the FieldLayout from storage. If the table's FieldLayout is known to the caller, it should be passed in to the other overload to avoid the storage read.",
            "params": {
              "fieldIndex": "Index of the field to measure.",
              "keyTuple": "The tuple used as a key.",
              "tableId": "The ID of the table."
            },
            "returns": {
              "_0": "The length of the specified field."
            }
          },
          "getFieldLength(bytes32,bytes32[],uint8,bytes32)": {
            "params": {
              "fieldIndex": "Index of the field to measure.",
              "fieldLayout": "The layout of fields for measurement.",
              "keyTuple": "The tuple used as a key.",
              "tableId": "The ID of the table."
            },
            "returns": {
              "_0": "The length of the specified field."
            }
          },
          "getKeySchema(bytes32)": {
            "params": {
              "tableId": "The ID of the table."
            },
            "returns": {
              "keySchema": "The schema for keys in the specified table."
            }
          },
          "getRecord(bytes32,bytes32[])": {
            "params": {
              "keyTuple": "The tuple used as a key to fetch the record.",
              "tableId": "The ID of the table."
            },
            "returns": {
              "dynamicData": "The dynamic data of the record.",
              "encodedLengths": "Encoded lengths of dynamic data.",
              "staticData": "The static data of the record."
            }
          },
          "getRecord(bytes32,bytes32[],bytes32)": {
            "params": {
              "fieldLayout": "The layout of fields to retrieve.",
              "keyTuple": "The tuple used as a key to fetch the record.",
              "tableId": "The ID of the table."
            },
            "returns": {
              "dynamicData": "The dynamic data of the record.",
              "encodedLengths": "Encoded lengths of dynamic data.",
              "staticData": "The static data of the record."
            }
          },
          "getStaticField(bytes32,bytes32[],uint8,bytes32)": {
            "params": {
              "fieldIndex": "Index of the static field to retrieve.",
              "fieldLayout": "The layout of fields for the retrieval.",
              "keyTuple": "The tuple used as a key to fetch the static field.",
              "tableId": "The ID of the table."
            },
            "returns": {
              "data": "The static data of the specified field."
            }
          },
          "getValueSchema(bytes32)": {
            "params": {
              "tableId": "The ID of the table."
            },
            "returns": {
              "valueSchema": "The schema for values in the specified table."
            }
          },
          "storeVersion()": {
            "returns": {
              "_0": "The current version of the store as a bytes32."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getDynamicField(bytes32,bytes32[],uint8)": {
            "notice": "Retrieves data for a specific dynamic (variable length) field in a record."
          },
          "getDynamicFieldLength(bytes32,bytes32[],uint8)": {
            "notice": "Calculates the length of a specified dynamic (variable length) field in a record."
          },
          "getDynamicFieldSlice(bytes32,bytes32[],uint8,uint256,uint256)": {
            "notice": "Retrieves a slice of a dynamic (variable length) field."
          },
          "getField(bytes32,bytes32[],uint8)": {
            "notice": "Retrieves data for a specified field in a record."
          },
          "getField(bytes32,bytes32[],uint8,bytes32)": {
            "notice": "Retrieves data for a specified field in a record."
          },
          "getFieldLayout(bytes32)": {
            "notice": "Fetches the field layout for a given table."
          },
          "getFieldLength(bytes32,bytes32[],uint8)": {
            "notice": "Calculates the length of a specified field in a record."
          },
          "getFieldLength(bytes32,bytes32[],uint8,bytes32)": {
            "notice": "Calculates the length of a specified field in a record."
          },
          "getKeySchema(bytes32)": {
            "notice": "Retrieves the key schema for a given table."
          },
          "getRecord(bytes32,bytes32[])": {
            "notice": "Fetches a record from a specified table using a provided key tuple."
          },
          "getRecord(bytes32,bytes32[],bytes32)": {
            "notice": "Fetches a record from a specified table using a provided key tuple and field layout."
          },
          "getStaticField(bytes32,bytes32[],uint8,bytes32)": {
            "notice": "Retrieves data for a specific static (fixed length) field in a record."
          },
          "getValueSchema(bytes32)": {
            "notice": "Retrieves the value schema for a given table."
          },
          "storeVersion()": {
            "notice": "Retrieves the version of the store."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@latticexyz/=node_modules/@latticexyz/",
        "ds-test/=node_modules/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 3000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "test/Mixed.t.sol": "MixedTest"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@latticexyz/gas-report/src/GasReporter.sol": {
        "keccak256": "0xf0b03a19a92cd2e9950c25b6d307e5aeca4a64be8932194431197d0570e9bf3b",
        "urls": [
          "bzz-raw://ef2a14f0fb6e5bcab0c70d3648d247c3919c63eabc8b226be4d1f359d8af860f",
          "dweb:/ipfs/QmXi1HgeUNmS9GwSFMDJa8QVT7KiENG9VjgBB78hpHrHV6"
        ],
        "license": "MIT"
      },
      "node_modules/@latticexyz/schema-type/src/solidity/SchemaType.sol": {
        "keccak256": "0x770eff7a38b9b7b1613dc11ca09db4f28b42a117c9b39b2a06a650a58a250bdb",
        "urls": [
          "bzz-raw://39f544110658a53def52c2a4e33b8b158b95a4f14fccea58d5268b6e728d86d4",
          "dweb:/ipfs/QmTesj6tjSFbfAiKUitXapdNYWPStS8bLkB3r22qfyHwUC"
        ],
        "license": "MIT"
      },
      "node_modules/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdChains.sol": {
        "keccak256": "0x51e6eb138fc953fac1ac78012a39b3f16d9289ce06a222ba93bb0621768f96e6",
        "urls": [
          "bzz-raw://653c577e054cf578594148a07b286571d494f401b6d4a940d3ccabd47b29233d",
          "dweb:/ipfs/QmTWDVvR4m82MGXWYY8BCaVN89TguQJSLqRgzHzrMkFHtx"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdCheats.sol": {
        "keccak256": "0x2e1b4b99283c16efaf155f7e55ea357943cf6e61fc02aad060534349f63b6cd5",
        "urls": [
          "bzz-raw://d471a35903e8a367a145ca5b5955caf691c723fe1117c6dcffd928d9f8d7c95a",
          "dweb:/ipfs/QmXGnFUGiX9APL8xit7NZQEYBoEL3wWyW1YyFoJQd2pGPe"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1",
        "urls": [
          "bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c",
          "dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStorage.sol": {
        "keccak256": "0x391a28a2e54aea51a6fb03a3a48035304ca4d24bc669ddf3d4c152c7162e514d",
        "urls": [
          "bzz-raw://475fd0d87ccb0fdc4418dea2babffb4adb4aafb817e61f7ef31c2303f10c6c26",
          "dweb:/ipfs/QmQgcgtZxpkW6DRmbJszN1F8mU6zhaTZGdWWsj77yCuWN9"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Test.sol": {
        "keccak256": "0xf3b62c75cea11a0e8ef8e6526e5e5c74ae47a892b9bcefc0e98d76066e1ffd24",
        "urls": [
          "bzz-raw://a41faaf836453e02c71fc272c80b3c90a614b30c9ba636512db0d033c7b93beb",
          "dweb:/ipfs/QmeQAreYYaxztQtFLQdHCzCPEorj9T5foSu2hQmxk7xT5x"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Vm.sol": {
        "keccak256": "0xb569d0b4398fad95f508fb854e832143edf69a897af4250f5f60fe195a2066c5",
        "urls": [
          "bzz-raw://84b722ada97ea7bb841cdc0fa556aa36a02ff2d380fa24f6dc0717a71c6d9c7c",
          "dweb:/ipfs/QmfCH9Q4tvJhPM286GFsE4UCP4YncLpRu4Nwa2ZkHdRfbw"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "src/Bytes.sol": {
        "keccak256": "0xab31edce915377852bb5f29f7f2ccfc50cac087d64d2a8aae669715ad862d558",
        "urls": [
          "bzz-raw://3187e86e43be1fbdd59df45c695294f1114aa1ac48e6445c0cb26089434be5c4",
          "dweb:/ipfs/Qmck7shMVrcKMVkgN2pC1byPY7hb3V9fTxnUcGgxAUeXYk"
        ],
        "license": "MIT"
      },
      "src/FieldLayout.sol": {
        "keccak256": "0x2a0536cd6cecc479d0b81d5aad6380231f4d6873beadc54814d801c2036b02c0",
        "urls": [
          "bzz-raw://e07c041e19146a9ec258cc700a450b4d49440202895eb12f3bb17508427c23ba",
          "dweb:/ipfs/QmXoqrCGDSkuFgNSMURRFdjokjREL78nLDzNaUi6rjefy9"
        ],
        "license": "MIT"
      },
      "src/Hook.sol": {
        "keccak256": "0x045024523eb55d08ad8d13eca6185bff2988865f4aa12e3f9372029c2ecb8ddd",
        "urls": [
          "bzz-raw://6621c53b49f8fe0557d1a1db47bfe1561801c09256948dd0652fb41541891a18",
          "dweb:/ipfs/QmZgFVCUH1pKcc9MeFyzMe1VW87SLz6c9szGwrDRUp6BZe"
        ],
        "license": "MIT"
      },
      "src/IERC165.sol": {
        "keccak256": "0x2bbc3c43400c15a91a5cb35430a91309cb64a4d13a0a170eacec71dcf334feaf",
        "urls": [
          "bzz-raw://f44dfc9605067de539de07a76a34bf469faa9e6dad8c192abafc2e05860c7dd2",
          "dweb:/ipfs/QmX8xgG6XWokM7YFwFZvmMhuh1uhkSjxCMD2oTHjUVdapb"
        ],
        "license": "MIT"
      },
      "src/IStore.sol": {
        "keccak256": "0x9092b65551d0f910e5645cebb5acadb387cdd192d75fa89cd6b293bd65b28827",
        "urls": [
          "bzz-raw://478825a6f7eff9ddab968e71e1d55ebee279d3b318f10976d9334384000059c0",
          "dweb:/ipfs/Qme7NY976woRy3RQjE4tkkiwoXnoVtTmER3PbWCSbjZ2kb"
        ],
        "license": "MIT"
      },
      "src/IStoreData.sol": {
        "keccak256": "0xa8eade05c551aeef35c84727d7a44af239516deb2d8a0cfb7ebeb5d88c6995e5",
        "urls": [
          "bzz-raw://5335910bd8a204abb5f4396fb911a5ee5c221bd7fa63b1cc8ae5e737c6458c6a",
          "dweb:/ipfs/QmckkCAfrNcWo3yDxoD1jCe1k4iDA2GzVDpFjJZs7W79vx"
        ],
        "license": "MIT"
      },
      "src/IStoreErrors.sol": {
        "keccak256": "0xb9070663ded3cad82285bb7610949e422f88abb48c2ddbd792af83d127d64212",
        "urls": [
          "bzz-raw://830490f1c888bec86df1e7ef43773d60ebdbdfdb2b91ab7fe074e2f38d7439dc",
          "dweb:/ipfs/QmS26fpXdZuGgMmjcdQDf9k1Bedn2dhjk9byFZJoNkctPZ"
        ],
        "license": "MIT"
      },
      "src/IStoreEvents.sol": {
        "keccak256": "0xdd3104680808f975462a85cbd4fa87783ba5395797419caeeca37e8f8627a16f",
        "urls": [
          "bzz-raw://943864b7eb16ad2047ade5a8598e85c8a4b46d1aed6aef02bfb7cee8de732b4d",
          "dweb:/ipfs/QmTEij4caToSNk15PFpubXYDy9QhwmPyP9tMXjUse2cTdv"
        ],
        "license": "MIT"
      },
      "src/IStoreHook.sol": {
        "keccak256": "0xa6777c7868333996ad9c61a94457dcac702d8d7445a104dfdc86543d25e7470e",
        "urls": [
          "bzz-raw://6268a16449d7529a94746d0103670dd0e38faf5117bf914fb01da9947ab44c2e",
          "dweb:/ipfs/QmaSfbx1QRA3jw2K8bGkQTw4CTGPUzNqnCJW7LwaFUJCXy"
        ],
        "license": "MIT"
      },
      "src/IStoreRead.sol": {
        "keccak256": "0xd2180d53ecd31069b1166f170ecdcd85917ac50f45fc26fb39b49cee7ba00e37",
        "urls": [
          "bzz-raw://1494bb0a3228e2d194bddaed4761fd3ca865979f0e3f3a53acd271143a4aa0ac",
          "dweb:/ipfs/Qmaddnzzmu99iP9dTWK9ZeByh5dZyjY9SpVnRdvyr2fBAo"
        ],
        "license": "MIT"
      },
      "src/IStoreRegistration.sol": {
        "keccak256": "0xf448fbb2bc9c982721a43234463656da5a49cea08543e62148d54f11e1ac3e2f",
        "urls": [
          "bzz-raw://64b3579d9b9dcd73dca2beab3d4fcf60237420945ebbb2e9f4ffcc88f4110115",
          "dweb:/ipfs/QmaW5nN3zGEriSYHncye6Nz2TkAw1oo1CyG2JuJTJrJoXg"
        ],
        "license": "MIT"
      },
      "src/IStoreWrite.sol": {
        "keccak256": "0x8b6c7af5ee330928aebb58c8872d3944304ee10ed11f8a325b6accc4ec5df81b",
        "urls": [
          "bzz-raw://b866d158701c7a40834bed735194b804ef219f2bbe574e2307785fff7bcf9da1",
          "dweb:/ipfs/QmXzJfZkXVfyr2RFGwDuazeVnV3UWYmQxjKZ3KzFbbe75U"
        ],
        "license": "MIT"
      },
      "src/Memory.sol": {
        "keccak256": "0x69295976e61a1a108d1b4d6eb497b238730309f3047c4320d48e01a0ce8d4ec7",
        "urls": [
          "bzz-raw://559c451b21fb9dd4fec27b41bef42f4362f1e7ebb7992106d548b9d4f733b3e5",
          "dweb:/ipfs/QmeSE7YTW5zUrfZYFVb2pFnDe3XxiT8XNecfwC3wfpxCRv"
        ],
        "license": "MIT"
      },
      "src/PackedCounter.sol": {
        "keccak256": "0x44ddfa9eb8a861462c550f0a9d66c40c68acdb347a61fa765949608407a2c7fb",
        "urls": [
          "bzz-raw://47ee957f4b19cab9e20bf5fc569c015eca13852fb3351f2a105a8be9c48204c0",
          "dweb:/ipfs/QmNkyzDobVQLoq9BtQ8HtgsPLiqnmi97EZx1wsu6wp8nKH"
        ],
        "license": "MIT"
      },
      "src/ResourceId.sol": {
        "keccak256": "0x40983c580b8958e55db4520095934a535e98544ffe8228327e598973eb6647ed",
        "urls": [
          "bzz-raw://839d658fa2bb2b1f09a08149d2bf0c26a26c301ad2dda8154fc99458085a695d",
          "dweb:/ipfs/Qmd5jHHYrgqraPqF8bjzT4xyjsoPk8K7pkxXLLfz6MRT6d"
        ],
        "license": "MIT"
      },
      "src/Schema.sol": {
        "keccak256": "0x58aef318ba03f8ff8866ef70f8a30f549b150657ea699734aefe16c298956401",
        "urls": [
          "bzz-raw://7dc104690a7e2bcf5ce1afadcd58f8ef4d639b4b92b9ad9293656235d54395f3",
          "dweb:/ipfs/QmYJJvEv5KBJ3kzf9AkgRn7Uu5dp4exGTRddf4cae1btgE"
        ],
        "license": "MIT"
      },
      "src/Slice.sol": {
        "keccak256": "0xfaf54b1f5acccd4c6ce3f8377050ee84efbb423cb604b4651e8b9ea3b467bf32",
        "urls": [
          "bzz-raw://acf2ce7ffec21f28ad1dc6da06c342f1212a03a3d16a0be7ee85715a5940718c",
          "dweb:/ipfs/QmTCN3NSdFg87hi7KS2Xtq7PsmRUMG64SxC8PtP3p2GzuT"
        ],
        "license": "MIT"
      },
      "src/Storage.sol": {
        "keccak256": "0x0893905ebe431a414226b479a84a54804091001a406222c748adbd4b651853a5",
        "urls": [
          "bzz-raw://bcfcd3848127884041f0bcd727a0e7acbddec283aa6c16ba47abc6a3be720648",
          "dweb:/ipfs/QmY5fBd53e4Ro6vzTZYsteSibSTXVA3GHTeCAiUZTa5DPZ"
        ],
        "license": "MIT"
      },
      "src/StoreCore.sol": {
        "keccak256": "0x95b7d62d84b43777c54dd1c7d941dbb5ba0afc02c444c30cfdb1de671bbbf180",
        "urls": [
          "bzz-raw://fe62a2fdb2a73610c3072f31b7f88ed3f9d03c1009fe0f0ef37a7eb814b23534",
          "dweb:/ipfs/QmV85zaV5HAD6eGc5N4RmdtmpR6EwkswVLQTaR2aJqsXrj"
        ],
        "license": "MIT"
      },
      "src/StoreData.sol": {
        "keccak256": "0x4e451128c33a01d520c1944b3db42a62c158aea8fa11e786a58a0f719a189526",
        "urls": [
          "bzz-raw://c2f98f30a7b2c9ef020e274b87ae0fa66d1380343a00ecf6bd796ae31cd9b279",
          "dweb:/ipfs/QmYXHSBn4Hp7cimDLKy86ep23v2VRUS6dLPevcVMs3dJrw"
        ],
        "license": "MIT"
      },
      "src/StoreRead.sol": {
        "keccak256": "0x0da12dea94f088d01b1b0d6d4887f628c61c9c34a4c74a4c9033621bddcc007f",
        "urls": [
          "bzz-raw://7e77d66891e1cdff6899e00c7993302dd77dd291f954b79d2c582da076e22264",
          "dweb:/ipfs/QmcLyDFSnyMUF89hGhPX4nvUpkXdJSxBe5zGSJFqTAT5Mj"
        ],
        "license": "MIT"
      },
      "src/StoreSwitch.sol": {
        "keccak256": "0xf132af10f960a498f49c0534027056e715f4bdcb8fbdb53ac6879c92309ab416",
        "urls": [
          "bzz-raw://e85a09aeb7543bcd9d74b7ad319ae61e1f7f15a6a0ad9e79aff750fbd18111c7",
          "dweb:/ipfs/QmY6xgqeeaR1FsCPLmFbVgjm1D2UyrXNABKXWLfFaSmBhR"
        ],
        "license": "MIT"
      },
      "src/codegen/index.sol": {
        "keccak256": "0xf337a5abb2d43ef00c1c200e7fbec30fc89c7c701e457ab4277194b700d2aea3",
        "urls": [
          "bzz-raw://eccdf6158076b4e8f1b587a0310228f53323705e054a44eaa7733f38805c3ee6",
          "dweb:/ipfs/QmbXEVNTctg54dK9awdCVyAjeuUjR6ckfmmXBP8DrFmjyq"
        ],
        "license": "MIT"
      },
      "src/codegen/tables/Hooks.sol": {
        "keccak256": "0xc5c6f807cff6b4dc486525c559ba3f7cbb034ac5895636ee64c9d01defa6a38e",
        "urls": [
          "bzz-raw://84d3a3b3fd3afa2ab3231fd7fe981889dfb0600deec34c5d4e9c07d3187af8a5",
          "dweb:/ipfs/Qmanj7WjETqBYQXkxKLjqWs4vMp3en3N69B5MacKme5fpD"
        ],
        "license": "MIT"
      },
      "src/codegen/tables/ResourceIds.sol": {
        "keccak256": "0xf7a9bf3e37b486377005c556cdf5b813ea1a41278b3a0349f81e3c82a2f1c789",
        "urls": [
          "bzz-raw://92cc87add89abcb126bf3cd0b284f25065c2b9c90a49f8dba4629b28a5b87751",
          "dweb:/ipfs/QmNNBDSK5GNujERGiSUhorbmtpdD2UnGz7MqSSDasEGdub"
        ],
        "license": "MIT"
      },
      "src/codegen/tables/StoreHooks.sol": {
        "keccak256": "0xa1186b8b6143b4a87cea1624785494398be1613cb7c6f9e57734e1cca1d5dd14",
        "urls": [
          "bzz-raw://488c158082622689d035d7964c6ca063295e53078291c340eb6a23db08e8ff95",
          "dweb:/ipfs/QmWcjo3B5SH7jStXKAuf7qvF2ouz6syw9c7aT86PnTgRqW"
        ],
        "license": "MIT"
      },
      "src/codegen/tables/Tables.sol": {
        "keccak256": "0xd47e1921c07fc8608157b5dc343fcef7235e891ea6a21dec1fb118a0bd797fcb",
        "urls": [
          "bzz-raw://01a6ad068e6991994a0939f22a55245e0c7c82fc5e274da0af616286a8acfc7a",
          "dweb:/ipfs/QmPokA3pSexzZY33MMV6BGx48ZwQegdUN5AijiAfycSDxy"
        ],
        "license": "MIT"
      },
      "src/constants.sol": {
        "keccak256": "0x9e37c64c119ef07ad914bc589ee3f6d67946ab95877978c1ee3e2c1ffae07076",
        "urls": [
          "bzz-raw://3fad47e542025382aa28e8171253e34f93b2f149434b67a26989542d70218793",
          "dweb:/ipfs/QmW6JsKNwPc6oAMrgcikgR2EPwMUtQANiuZSQSGCd29HHC"
        ],
        "license": "MIT"
      },
      "src/leftMask.sol": {
        "keccak256": "0xd0360567e4d77c6a8e3d8a5f4bf3653ccde4d268674c50988d55695dc6193f6f",
        "urls": [
          "bzz-raw://53e6bcb53fcb08ee9426225fdab7c41df91e12cb4f80d92895a6117338627401",
          "dweb:/ipfs/QmeLcaPGeMBpNSTSsPYK3PHpzKuGMjuitCweAWcoXK2mXr"
        ],
        "license": "MIT"
      },
      "src/storeHookTypes.sol": {
        "keccak256": "0x60880298016fa117ed9a43ddfd020f11d98a2d345bdcb08e5884e40df98eddd5",
        "urls": [
          "bzz-raw://3619dfda1fd514c0fc5fb34c14d5b5aa41dd6ba6045d37d5f4c8199f3a826f81",
          "dweb:/ipfs/QmbzRBYfVa423gNzCitpGN3i2N9oeGYfinVE1jgtqxnNZX"
        ],
        "license": "MIT"
      },
      "src/storeResourceTypes.sol": {
        "keccak256": "0xada1867ba72930fc5cf5562dd4e36de849dbac9c833b7969cb1b046a808fabf2",
        "urls": [
          "bzz-raw://6e4b5fdcaa54f567a3f8561c2c3fbc0d68c8dad892a4a8e5418bbce8efc53d84",
          "dweb:/ipfs/QmTWbYJX1yrCqrEwUKB9rGpHdRvLNU8GCkBbxnLjGD4d2t"
        ],
        "license": "MIT"
      },
      "src/tightcoder/DecodeSlice.sol": {
        "keccak256": "0x1af0fd984640123391ec2df855d00298504b7ce186a56c2caca769cfd9e08e04",
        "urls": [
          "bzz-raw://7305a62318890d2cc6420ba7dec13d9f2c1cb67ac689015fc83b9cbccd0696f1",
          "dweb:/ipfs/QmR8jGNLbt64Tv1YZKRVBCVsd71oeUQFzGHHtpsrs4PuRq"
        ],
        "license": "MIT"
      },
      "src/tightcoder/EncodeArray.sol": {
        "keccak256": "0x1c280d24360282e196d9c4833c58c2437108cea2af0ac7596f95be81389e306d",
        "urls": [
          "bzz-raw://6b4556b6eeae9328fbd9adcce346547e823c397503276a4d63effb67e00b5b49",
          "dweb:/ipfs/QmUsynVsMYzjh8oJR8YB7SRrwFMdXcsQsHBrXxLEEFxsiB"
        ],
        "license": "MIT"
      },
      "src/tightcoder/TightCoder.sol": {
        "keccak256": "0x5cacd4cb371e0a79bc8d64f62349d568fd8b08093c11ae0c3db4f16480d8808b",
        "urls": [
          "bzz-raw://12b64ddf2b5c19cf68ba93a8153ed79cbafe7a91e015d4b2f25eb1d42ab06256",
          "dweb:/ipfs/QmQz5WwztcuTbSGFv2pkhU3w5scUj1gmavoyUpduxk2v3A"
        ],
        "license": "MIT"
      },
      "src/version.sol": {
        "keccak256": "0x01029999a48b7c1d85de84cae465dd24ec126c95b8a865cd20c7ed5dfcc0f02c",
        "urls": [
          "bzz-raw://9750164ce996badb0fd7df2f526780b9cb9558912405fe46f31064bd7c522491",
          "dweb:/ipfs/QmYf8m2ZXFANRc9ysHgNkNtSF327ccxKYjCUJ49UXBKADk"
        ],
        "license": "MIT"
      },
      "test/Mixed.t.sol": {
        "keccak256": "0x9b2c99840663b6afab98953f796047cba167d3515c2a62d22676bd2eade7c5b9",
        "urls": [
          "bzz-raw://f91105ee83680b386b837055011b0f0e9d36a86d61c4f40936bf587c65277e98",
          "dweb:/ipfs/QmWc6LLbLfnAAqniqRYZwqi1VBouHZADEYx7wguJirh8KL"
        ],
        "license": "MIT"
      },
      "test/StoreMock.sol": {
        "keccak256": "0xd9fe932bd756bb49643aadc437252c8681bea58293cc1a4020a43f59a9f30c48",
        "urls": [
          "bzz-raw://99eb4a5609a8ae41b0eb0aafbfc23135ac92eebc0280040ea1a5b8dd270301f3",
          "dweb:/ipfs/QmcXfKcLgf3stUvRwCScX95Aqavubq2ULe3idUtjp8uPYf"
        ],
        "license": "MIT"
      },
      "test/codegen/common.sol": {
        "keccak256": "0xfb8a86c7cd9337dd447f5fec131d86e668e855094eb030cf8aee4bef293595f9",
        "urls": [
          "bzz-raw://9713bddb9dcbf611048148a195c0239480b1ac29df22df9fbd2df36274aa8d0b",
          "dweb:/ipfs/QmYoNyg6iLpGQkXA5szq67KGR8eaz8yyTwy2X66wtDj9Bo"
        ],
        "license": "MIT"
      },
      "test/codegen/index.sol": {
        "keccak256": "0xd78a354e0d72ddbb1588dca45d594ad53448e38a860ccf08fac0cdb8613a1cdc",
        "urls": [
          "bzz-raw://8fc75fd8c8b1e5f23eb7bf836dc50b2b45b2c4673feb6740d9dc0ebb586430fb",
          "dweb:/ipfs/QmQsEq1MnUcFsi7sPcJ2qB3F1HXFTpp942a23YKRwGS6SD"
        ],
        "license": "MIT"
      },
      "test/codegen/tables/Callbacks.sol": {
        "keccak256": "0x952167daaa1d2abe689a1341da215a911f9385a3dbf07a2054ea9118411ef075",
        "urls": [
          "bzz-raw://7b4430402bbb75818d78a84fa8bdff13047e8657033006696e5709a54128497c",
          "dweb:/ipfs/QmPbTS9Bwy9rt9P8FbFrWCyshhj4SKLP4Usjzg8EbbDzCt"
        ],
        "license": "MIT"
      },
      "test/codegen/tables/KeyEncoding.sol": {
        "keccak256": "0x6903d228e0924ae95f26142a0a705e84b7e634e74cdbe990f91b1e724bf94af5",
        "urls": [
          "bzz-raw://571eb25e3f3b8b11a4fd375aad9c7d72e9a7755140e2c9abf773d4bac06a4fe4",
          "dweb:/ipfs/Qmc1txvZ6Cydb2bfPXFvbBXeTzCFnjFsKj8TeXKrxWvHB7"
        ],
        "license": "MIT"
      },
      "test/codegen/tables/Mixed.sol": {
        "keccak256": "0x693215d82222a8591b22d239609804af57cdb7ce639eeea656925c1a45422ce2",
        "urls": [
          "bzz-raw://b957dc4c77e6b83d185cb197b14887d413f2d7df2e60d11e1cb0ce0785af72c0",
          "dweb:/ipfs/QmaCyS7CwW6yWRoAZKsQNTmkgC7mXhqX9zhpFwgtzDfUPQ"
        ],
        "license": "MIT"
      },
      "test/codegen/tables/Vector2.sol": {
        "keccak256": "0xf6c5e8812290a7e867ff37e6bf755504b2c26281c681376e1bea3e9a7bda3d3c",
        "urls": [
          "bzz-raw://8ddad24363ad8887706ae7f4303924479cb218ae28a3963019abc2049ff85ec9",
          "dweb:/ipfs/QmdcQLBFH7CsnhnWmTb896nFVGPv76wnqL4Ui8Zw9B2Dz9"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Mixed.t.sol",
    "id": 69050,
    "exportedSymbols": {
      "FieldLayout": [
        44140
      ],
      "GasReporter": [
        40736
      ],
      "Mixed": [
        90141
      ],
      "MixedData": [
        87666
      ],
      "MixedTableId": [
        87649
      ],
      "MixedTest": [
        69049
      ],
      "PackedCounter": [
        45594
      ],
      "Schema": [
        46304
      ],
      "StoreCore": [
        49204
      ],
      "StoreMock": [
        83899
      ],
      "Test": [
        43325
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:4144:82",
    "nodes": [
      {
        "id": 68515,
        "nodeType": "PragmaDirective",
        "src": "32:25:82",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 68517,
        "nodeType": "ImportDirective",
        "src": "59:42:82",
        "nodes": [],
        "absolutePath": "node_modules/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69050,
        "sourceUnit": 43326,
        "symbolAliases": [
          {
            "foreign": {
              "id": 68516,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43325,
              "src": "68:4:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 68519,
        "nodeType": "ImportDirective",
        "src": "102:73:82",
        "nodes": [],
        "absolutePath": "node_modules/@latticexyz/gas-report/src/GasReporter.sol",
        "file": "@latticexyz/gas-report/src/GasReporter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69050,
        "sourceUnit": 40737,
        "symbolAliases": [
          {
            "foreign": {
              "id": 68518,
              "name": "GasReporter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40736,
              "src": "111:11:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 68521,
        "nodeType": "ImportDirective",
        "src": "176:49:82",
        "nodes": [],
        "absolutePath": "src/StoreCore.sol",
        "file": "../src/StoreCore.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69050,
        "sourceUnit": 49740,
        "symbolAliases": [
          {
            "foreign": {
              "id": 68520,
              "name": "StoreCore",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49204,
              "src": "185:9:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 68523,
        "nodeType": "ImportDirective",
        "src": "226:50:82",
        "nodes": [],
        "absolutePath": "test/StoreMock.sol",
        "file": "../test/StoreMock.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69050,
        "sourceUnit": 83900,
        "symbolAliases": [
          {
            "foreign": {
              "id": 68522,
              "name": "StoreMock",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 83899,
              "src": "235:9:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 68525,
        "nodeType": "ImportDirective",
        "src": "277:53:82",
        "nodes": [],
        "absolutePath": "src/FieldLayout.sol",
        "file": "../src/FieldLayout.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69050,
        "sourceUnit": 44560,
        "symbolAliases": [
          {
            "foreign": {
              "id": 68524,
              "name": "FieldLayout",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44140,
              "src": "286:11:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 68527,
        "nodeType": "ImportDirective",
        "src": "331:43:82",
        "nodes": [],
        "absolutePath": "src/Schema.sol",
        "file": "../src/Schema.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69050,
        "sourceUnit": 46773,
        "symbolAliases": [
          {
            "foreign": {
              "id": 68526,
              "name": "Schema",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46304,
              "src": "340:6:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 68529,
        "nodeType": "ImportDirective",
        "src": "375:57:82",
        "nodes": [],
        "absolutePath": "src/PackedCounter.sol",
        "file": "../src/PackedCounter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69050,
        "sourceUnit": 46218,
        "symbolAliases": [
          {
            "foreign": {
              "id": 68528,
              "name": "PackedCounter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45594,
              "src": "384:13:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 68533,
        "nodeType": "ImportDirective",
        "src": "434:69:82",
        "nodes": [],
        "absolutePath": "test/codegen/index.sol",
        "file": "./codegen/index.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69050,
        "sourceUnit": 84300,
        "symbolAliases": [
          {
            "foreign": {
              "id": 68530,
              "name": "Mixed",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 90141,
              "src": "443:5:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 68531,
              "name": "MixedData",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 87666,
              "src": "450:9:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 68532,
              "name": "MixedTableId",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 87649,
              "src": "461:12:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 69049,
        "nodeType": "ContractDefinition",
        "src": "505:3670:82",
        "nodes": [
          {
            "id": 68542,
            "nodeType": "VariableDeclaration",
            "src": "560:27:82",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "testMixed",
            "nameLocation": "578:9:82",
            "scope": 69049,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_MixedData_$87666_storage",
              "typeString": "struct MixedData"
            },
            "typeName": {
              "id": 68541,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 68540,
                "name": "MixedData",
                "nameLocations": [
                  "560:9:82"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 87666,
                "src": "560:9:82"
              },
              "referencedDeclaration": 87666,
              "src": "560:9:82",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_MixedData_$87666_storage_ptr",
                "typeString": "struct MixedData"
              }
            },
            "visibility": "private"
          },
          {
            "id": 68594,
            "nodeType": "FunctionDefinition",
            "src": "592:285:82",
            "nodes": [],
            "body": {
              "id": 68593,
              "nodeType": "Block",
              "src": "616:261:82",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 68545,
                        "name": "Mixed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90141,
                        "src": "622:5:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Mixed_$90141_$",
                          "typeString": "type(library Mixed)"
                        }
                      },
                      "id": 68547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "628:9:82",
                      "memberName": "_register",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87863,
                      "src": "622:15:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 68548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "622:17:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68549,
                  "nodeType": "ExpressionStatement",
                  "src": "622:17:82"
                },
                {
                  "assignments": [
                    68551
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68551,
                      "mutability": "mutable",
                      "name": "key",
                      "nameLocation": "654:3:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 68593,
                      "src": "646:11:82",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 68550,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "646:7:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68555,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "64656661756c746b6579",
                        "id": 68553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "670:12:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d996e8ae0fc1474ddf341dd3c0d7079328d4828516e443b1328aa5cab5740b2b",
                          "typeString": "literal_string \"defaultkey\""
                        },
                        "value": "defaultkey"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d996e8ae0fc1474ddf341dd3c0d7079328d4828516e443b1328aa5cab5740b2b",
                          "typeString": "literal_string \"defaultkey\""
                        }
                      ],
                      "id": 68552,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "660:9:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 68554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "660:23:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "646:37:82"
                },
                {
                  "assignments": [
                    68560
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68560,
                      "mutability": "mutable",
                      "name": "a32",
                      "nameLocation": "705:3:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 68593,
                      "src": "689:19:82",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                        "typeString": "uint32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 68558,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "689:6:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 68559,
                        "nodeType": "ArrayTypeName",
                        "src": "689:8:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                          "typeString": "uint32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68566,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 68564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "724:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 68563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "711:12:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 68561,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "715:6:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 68562,
                        "nodeType": "ArrayTypeName",
                        "src": "715:8:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                          "typeString": "uint32[]"
                        }
                      }
                    },
                    "id": 68565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "711:15:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                      "typeString": "uint32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "689:37:82"
                },
                {
                  "expression": {
                    "id": 68571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 68567,
                        "name": "a32",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68560,
                        "src": "732:3:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      "id": 68569,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 68568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "736:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "732:6:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "33",
                      "id": 68570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "741:1:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "732:10:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 68572,
                  "nodeType": "ExpressionStatement",
                  "src": "732:10:82"
                },
                {
                  "expression": {
                    "id": 68577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 68573,
                        "name": "a32",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68560,
                        "src": "748:3:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      "id": 68575,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 68574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "752:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "748:6:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "34",
                      "id": 68576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "757:1:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "src": "748:10:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 68578,
                  "nodeType": "ExpressionStatement",
                  "src": "748:10:82"
                },
                {
                  "assignments": [
                    68580
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68580,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "778:1:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 68593,
                      "src": "764:15:82",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 68579,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "764:6:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68582,
                  "initialValue": {
                    "hexValue": "4c6f72656d20697073756d20646f6c6f722073697420616d6574",
                    "id": 68581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "782:28:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b53b7ca515051d49e851c07bd0fbdddb8010a9366f5b1f5fb737ba21a4356301",
                      "typeString": "literal_string \"Lorem ipsum dolor sit amet\""
                    },
                    "value": "Lorem ipsum dolor sit amet"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "764:46:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68586,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68551,
                        "src": "833:3:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 68587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "843:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "32",
                        "id": 68588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "852:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "id": 68589,
                        "name": "a32",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68560,
                        "src": "860:3:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      {
                        "id": 68590,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68580,
                        "src": "868:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 68583,
                        "name": "Mixed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90141,
                        "src": "816:5:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Mixed_$90141_$",
                          "typeString": "type(library Mixed)"
                        }
                      },
                      "id": 68585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "822:3:82",
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89590,
                      "src": "816:9:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint32_$_t_uint128_$_t_array$_t_uint32_$dyn_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,uint32,uint128,uint32[] memory,string memory)"
                      }
                    },
                    "id": 68591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "828:3:82",
                      "838:3:82",
                      "846:4:82",
                      "855:3:82",
                      "865:1:82"
                    ],
                    "names": [
                      "key",
                      "u32",
                      "u128",
                      "a32",
                      "s"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "816:56:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68592,
                  "nodeType": "ExpressionStatement",
                  "src": "816:56:82"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "601:5:82",
            "parameters": {
              "id": 68543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "606:2:82"
            },
            "returnParameters": {
              "id": 68544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "616:0:82"
            },
            "scope": 69049,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68628,
            "nodeType": "FunctionDefinition",
            "src": "881:300:82",
            "nodes": [],
            "body": {
              "id": 68627,
              "nodeType": "Block",
              "src": "929:252:82",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    68599
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68599,
                      "mutability": "mutable",
                      "name": "registeredFieldLayout",
                      "nameLocation": "947:21:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 68627,
                      "src": "935:33:82",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                        "typeString": "FieldLayout"
                      },
                      "typeName": {
                        "id": 68598,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 68597,
                          "name": "FieldLayout",
                          "nameLocations": [
                            "935:11:82"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 44140,
                          "src": "935:11:82"
                        },
                        "referencedDeclaration": 44140,
                        "src": "935:11:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                          "typeString": "FieldLayout"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68604,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 68602,
                        "name": "MixedTableId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87649,
                        "src": "996:12:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_ResourceId_$46221",
                          "typeString": "ResourceId"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_ResourceId_$46221",
                          "typeString": "ResourceId"
                        }
                      ],
                      "expression": {
                        "id": 68600,
                        "name": "StoreCore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49204,
                        "src": "971:9:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StoreCore_$49204_$",
                          "typeString": "type(library StoreCore)"
                        }
                      },
                      "id": 68601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "981:14:82",
                      "memberName": "getFieldLayout",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47569,
                      "src": "971:24:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_ResourceId_$46221_$returns$_t_userDefinedValueType$_FieldLayout_$44140_$",
                        "typeString": "function (ResourceId) view returns (FieldLayout)"
                      }
                    },
                    "id": 68603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "971:38:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                      "typeString": "FieldLayout"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "935:74:82"
                },
                {
                  "assignments": [
                    68607
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68607,
                      "mutability": "mutable",
                      "name": "declaredFieldLayout",
                      "nameLocation": "1027:19:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 68627,
                      "src": "1015:31:82",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                        "typeString": "FieldLayout"
                      },
                      "typeName": {
                        "id": 68606,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 68605,
                          "name": "FieldLayout",
                          "nameLocations": [
                            "1015:11:82"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 44140,
                          "src": "1015:11:82"
                        },
                        "referencedDeclaration": 44140,
                        "src": "1015:11:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                          "typeString": "FieldLayout"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68611,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 68608,
                        "name": "Mixed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90141,
                        "src": "1049:5:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Mixed_$90141_$",
                          "typeString": "type(library Mixed)"
                        }
                      },
                      "id": 68609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1055:14:82",
                      "memberName": "getFieldLayout",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87676,
                      "src": "1049:20:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_userDefinedValueType$_FieldLayout_$44140_$",
                        "typeString": "function () pure returns (FieldLayout)"
                      }
                    },
                    "id": 68610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1049:22:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                      "typeString": "FieldLayout"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1015:56:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 68616,
                                "name": "registeredFieldLayout",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68599,
                                "src": "1108:21:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                                  "typeString": "FieldLayout"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                                  "typeString": "FieldLayout"
                                }
                              ],
                              "expression": {
                                "id": 68614,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1097:3:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 68615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1101:6:82",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "1097:10:82",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 68617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1097:33:82",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 68613,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "1087:9:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 68618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1087:44:82",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 68622,
                                "name": "declaredFieldLayout",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68607,
                                "src": "1154:19:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                                  "typeString": "FieldLayout"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                                  "typeString": "FieldLayout"
                                }
                              ],
                              "expression": {
                                "id": 68620,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1143:3:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 68621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1147:6:82",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "1143:10:82",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 68623,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1143:31:82",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 68619,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "1133:9:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 68624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1133:42:82",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 68612,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41358,
                      "src": "1078:8:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 68625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1078:98:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68626,
                  "nodeType": "ExpressionStatement",
                  "src": "1078:98:82"
                }
              ]
            },
            "functionSelector": "0a028481",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRegisterAndGetFieldLayout",
            "nameLocation": "890:29:82",
            "parameters": {
              "id": 68595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "919:2:82"
            },
            "returnParameters": {
              "id": 68596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "929:0:82"
            },
            "scope": 69049,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68662,
            "nodeType": "FunctionDefinition",
            "src": "1185:265:82",
            "nodes": [],
            "body": {
              "id": 68661,
              "nodeType": "Block",
              "src": "1228:222:82",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    68633
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68633,
                      "mutability": "mutable",
                      "name": "registeredSchema",
                      "nameLocation": "1241:16:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 68661,
                      "src": "1234:23:82",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Schema_$46304",
                        "typeString": "Schema"
                      },
                      "typeName": {
                        "id": 68632,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 68631,
                          "name": "Schema",
                          "nameLocations": [
                            "1234:6:82"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 46304,
                          "src": "1234:6:82"
                        },
                        "referencedDeclaration": 46304,
                        "src": "1234:6:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Schema_$46304",
                          "typeString": "Schema"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68638,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 68636,
                        "name": "MixedTableId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87649,
                        "src": "1285:12:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_ResourceId_$46221",
                          "typeString": "ResourceId"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_ResourceId_$46221",
                          "typeString": "ResourceId"
                        }
                      ],
                      "expression": {
                        "id": 68634,
                        "name": "StoreCore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49204,
                        "src": "1260:9:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StoreCore_$49204_$",
                          "typeString": "type(library StoreCore)"
                        }
                      },
                      "id": 68635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1270:14:82",
                      "memberName": "getValueSchema",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47643,
                      "src": "1260:24:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_ResourceId_$46221_$returns$_t_userDefinedValueType$_Schema_$46304_$",
                        "typeString": "function (ResourceId) view returns (Schema)"
                      }
                    },
                    "id": 68637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1260:38:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Schema_$46304",
                      "typeString": "Schema"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1234:64:82"
                },
                {
                  "assignments": [
                    68641
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68641,
                      "mutability": "mutable",
                      "name": "declaredSchema",
                      "nameLocation": "1311:14:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 68661,
                      "src": "1304:21:82",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Schema_$46304",
                        "typeString": "Schema"
                      },
                      "typeName": {
                        "id": 68640,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 68639,
                          "name": "Schema",
                          "nameLocations": [
                            "1304:6:82"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 46304,
                          "src": "1304:6:82"
                        },
                        "referencedDeclaration": 46304,
                        "src": "1304:6:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Schema_$46304",
                          "typeString": "Schema"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68645,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 68642,
                        "name": "Mixed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90141,
                        "src": "1328:5:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Mixed_$90141_$",
                          "typeString": "type(library Mixed)"
                        }
                      },
                      "id": 68643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1334:14:82",
                      "memberName": "getValueSchema",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87761,
                      "src": "1328:20:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_userDefinedValueType$_Schema_$46304_$",
                        "typeString": "function () pure returns (Schema)"
                      }
                    },
                    "id": 68644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1328:22:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Schema_$46304",
                      "typeString": "Schema"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1304:46:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 68650,
                                "name": "registeredSchema",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68633,
                                "src": "1387:16:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_Schema_$46304",
                                  "typeString": "Schema"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_Schema_$46304",
                                  "typeString": "Schema"
                                }
                              ],
                              "expression": {
                                "id": 68648,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1376:3:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 68649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1380:6:82",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "1376:10:82",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 68651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1376:28:82",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 68647,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "1366:9:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 68652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1366:39:82",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 68656,
                                "name": "declaredSchema",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68641,
                                "src": "1428:14:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_Schema_$46304",
                                  "typeString": "Schema"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_Schema_$46304",
                                  "typeString": "Schema"
                                }
                              ],
                              "expression": {
                                "id": 68654,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1417:3:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 68655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1421:6:82",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "1417:10:82",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 68657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1417:26:82",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 68653,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "1407:9:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 68658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1407:37:82",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 68646,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41358,
                      "src": "1357:8:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 68659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1357:88:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68660,
                  "nodeType": "ExpressionStatement",
                  "src": "1357:88:82"
                }
              ]
            },
            "functionSelector": "c290114c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRegisterAndGetSchema",
            "nameLocation": "1194:24:82",
            "parameters": {
              "id": 68629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1218:2:82"
            },
            "returnParameters": {
              "id": 68630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1228:0:82"
            },
            "scope": 69049,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68778,
            "nodeType": "FunctionDefinition",
            "src": "1454:733:82",
            "nodes": [],
            "body": {
              "id": 68777,
              "nodeType": "Block",
              "src": "1497:690:82",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    68666
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68666,
                      "mutability": "mutable",
                      "name": "key",
                      "nameLocation": "1511:3:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 68777,
                      "src": "1503:11:82",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 68665,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1503:7:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68670,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "736f6d656b6579",
                        "id": 68668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1527:9:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb6245aca5d4521d3861a1f459d2c5321703a5f29237f738065baac9681f586b",
                          "typeString": "literal_string \"somekey\""
                        },
                        "value": "somekey"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_fb6245aca5d4521d3861a1f459d2c5321703a5f29237f738065baac9681f586b",
                          "typeString": "literal_string \"somekey\""
                        }
                      ],
                      "id": 68667,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1517:9:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 68669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1517:20:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1503:34:82"
                },
                {
                  "assignments": [
                    68675
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68675,
                      "mutability": "mutable",
                      "name": "a32",
                      "nameLocation": "1560:3:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 68777,
                      "src": "1544:19:82",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                        "typeString": "uint32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 68673,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1544:6:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 68674,
                        "nodeType": "ArrayTypeName",
                        "src": "1544:8:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                          "typeString": "uint32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68681,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 68679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1579:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 68678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1566:12:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 68676,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1570:6:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 68677,
                        "nodeType": "ArrayTypeName",
                        "src": "1570:8:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                          "typeString": "uint32[]"
                        }
                      }
                    },
                    "id": 68680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1566:15:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                      "typeString": "uint32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1544:37:82"
                },
                {
                  "expression": {
                    "id": 68686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 68682,
                        "name": "a32",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68675,
                        "src": "1587:3:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      "id": 68684,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 68683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1591:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1587:6:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "33",
                      "id": 68685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1596:1:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "1587:10:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 68687,
                  "nodeType": "ExpressionStatement",
                  "src": "1587:10:82"
                },
                {
                  "expression": {
                    "id": 68692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 68688,
                        "name": "a32",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68675,
                        "src": "1603:3:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      "id": 68690,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 68689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1607:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1603:6:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "34",
                      "id": 68691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1612:1:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "src": "1603:10:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 68693,
                  "nodeType": "ExpressionStatement",
                  "src": "1603:10:82"
                },
                {
                  "assignments": [
                    68695
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68695,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "1633:1:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 68777,
                      "src": "1619:15:82",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 68694,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1619:6:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68697,
                  "initialValue": {
                    "hexValue": "736f6d6520737472696e67",
                    "id": 68696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1637:13:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_83c737ad570e9f3e71e0d2800958e44770d812e92db2c1758626613d1e6ba514",
                      "typeString": "literal_string \"some string\""
                    },
                    "value": "some string"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1619:31:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "736574207265636f726420696e204d69786564202865787465726e616c2c20636f6c6429",
                        "id": 68699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1672:38:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71a165768c1d26d36989b99f0c206f4dd8fe0678aea50e3164709ecf164ccf7c",
                          "typeString": "literal_string \"set record in Mixed (external, cold)\""
                        },
                        "value": "set record in Mixed (external, cold)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_71a165768c1d26d36989b99f0c206f4dd8fe0678aea50e3164709ecf164ccf7c",
                          "typeString": "literal_string \"set record in Mixed (external, cold)\""
                        }
                      ],
                      "id": 68698,
                      "name": "startGasReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40594,
                      "src": "1657:14:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 68700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1657:54:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68701,
                  "nodeType": "ExpressionStatement",
                  "src": "1657:54:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68705,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68666,
                        "src": "1734:3:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 68706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1744:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "32",
                        "id": 68707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1753:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "id": 68708,
                        "name": "a32",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68675,
                        "src": "1761:3:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      {
                        "id": 68709,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68695,
                        "src": "1769:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 68702,
                        "name": "Mixed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90141,
                        "src": "1717:5:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Mixed_$90141_$",
                          "typeString": "type(library Mixed)"
                        }
                      },
                      "id": 68704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1723:3:82",
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89590,
                      "src": "1717:9:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint32_$_t_uint128_$_t_array$_t_uint32_$dyn_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,uint32,uint128,uint32[] memory,string memory)"
                      }
                    },
                    "id": 68710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1729:3:82",
                      "1739:3:82",
                      "1747:4:82",
                      "1756:3:82",
                      "1766:1:82"
                    ],
                    "names": [
                      "key",
                      "u32",
                      "u128",
                      "a32",
                      "s"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1717:56:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68711,
                  "nodeType": "ExpressionStatement",
                  "src": "1717:56:82"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 68712,
                      "name": "endGasReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40648,
                      "src": "1779:12:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 68713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1779:14:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68714,
                  "nodeType": "ExpressionStatement",
                  "src": "1779:14:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "676574207265636f72642066726f6d204d69786564202865787465726e616c2c207761726d29",
                        "id": 68716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1815:40:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_afdcbede34f4f2a5b5fd067f9f154a54cb452cee2caed6df7cb56b6381704505",
                          "typeString": "literal_string \"get record from Mixed (external, warm)\""
                        },
                        "value": "get record from Mixed (external, warm)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_afdcbede34f4f2a5b5fd067f9f154a54cb452cee2caed6df7cb56b6381704505",
                          "typeString": "literal_string \"get record from Mixed (external, warm)\""
                        }
                      ],
                      "id": 68715,
                      "name": "startGasReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40594,
                      "src": "1800:14:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 68717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1800:56:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68718,
                  "nodeType": "ExpressionStatement",
                  "src": "1800:56:82"
                },
                {
                  "assignments": [
                    68721
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68721,
                      "mutability": "mutable",
                      "name": "mixed",
                      "nameLocation": "1879:5:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 68777,
                      "src": "1862:22:82",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MixedData_$87666_memory_ptr",
                        "typeString": "struct MixedData"
                      },
                      "typeName": {
                        "id": 68720,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 68719,
                          "name": "MixedData",
                          "nameLocations": [
                            "1862:9:82"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 87666,
                          "src": "1862:9:82"
                        },
                        "referencedDeclaration": 87666,
                        "src": "1862:9:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MixedData_$87666_storage_ptr",
                          "typeString": "struct MixedData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68726,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 68724,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68666,
                        "src": "1897:3:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 68722,
                        "name": "Mixed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90141,
                        "src": "1887:5:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Mixed_$90141_$",
                          "typeString": "type(library Mixed)"
                        }
                      },
                      "id": 68723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1893:3:82",
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89478,
                      "src": "1887:9:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_MixedData_$87666_memory_ptr_$",
                        "typeString": "function (bytes32) view returns (struct MixedData memory)"
                      }
                    },
                    "id": 68725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1887:14:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MixedData_$87666_memory_ptr",
                      "typeString": "struct MixedData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1862:39:82"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 68727,
                      "name": "endGasReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40648,
                      "src": "1907:12:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 68728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1907:14:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68729,
                  "nodeType": "ExpressionStatement",
                  "src": "1907:14:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 68731,
                          "name": "mixed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68721,
                          "src": "1937:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MixedData_$87666_memory_ptr",
                            "typeString": "struct MixedData memory"
                          }
                        },
                        "id": 68732,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1943:3:82",
                        "memberName": "u32",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87658,
                        "src": "1937:9:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 68733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1948:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 68730,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41497,
                      "src": "1928:8:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 68734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1928:22:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68735,
                  "nodeType": "ExpressionStatement",
                  "src": "1928:22:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 68737,
                          "name": "mixed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68721,
                          "src": "1965:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MixedData_$87666_memory_ptr",
                            "typeString": "struct MixedData memory"
                          }
                        },
                        "id": 68738,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1971:4:82",
                        "memberName": "u128",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87660,
                        "src": "1965:10:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 68739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1977:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 68736,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41497,
                      "src": "1956:8:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 68740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1956:23:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68741,
                  "nodeType": "ExpressionStatement",
                  "src": "1956:23:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 68743,
                            "name": "mixed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68721,
                            "src": "1994:5:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MixedData_$87666_memory_ptr",
                              "typeString": "struct MixedData memory"
                            }
                          },
                          "id": 68744,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2000:3:82",
                          "memberName": "a32",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 87663,
                          "src": "1994:9:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                            "typeString": "uint32[] memory"
                          }
                        },
                        "id": 68746,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 68745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2004:1:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1994:12:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 68747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2008:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 68742,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41497,
                      "src": "1985:8:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 68748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1985:25:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68749,
                  "nodeType": "ExpressionStatement",
                  "src": "1985:25:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 68751,
                            "name": "mixed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68721,
                            "src": "2025:5:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MixedData_$87666_memory_ptr",
                              "typeString": "struct MixedData memory"
                            }
                          },
                          "id": 68752,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2031:3:82",
                          "memberName": "a32",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 87663,
                          "src": "2025:9:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                            "typeString": "uint32[] memory"
                          }
                        },
                        "id": 68754,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 68753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2035:1:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2025:12:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "hexValue": "34",
                        "id": 68755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2039:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 68750,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41497,
                      "src": "2016:8:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 68756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2016:25:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68757,
                  "nodeType": "ExpressionStatement",
                  "src": "2016:25:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 68759,
                          "name": "mixed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68721,
                          "src": "2056:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MixedData_$87666_memory_ptr",
                            "typeString": "struct MixedData memory"
                          }
                        },
                        "id": 68760,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2062:1:82",
                        "memberName": "s",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87665,
                        "src": "2056:7:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 68761,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68695,
                        "src": "2065:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 68758,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 42995,
                      "src": "2047:8:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 68762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2047:20:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68763,
                  "nodeType": "ExpressionStatement",
                  "src": "2047:20:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "64656c657465207265636f72642066726f6d204d69786564202865787465726e616c2c207761726d29",
                        "id": 68765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2089:43:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a3fb65d9e5598a23dd434227c00a31678b660abfd506ccc6d255d7e781de72f",
                          "typeString": "literal_string \"delete record from Mixed (external, warm)\""
                        },
                        "value": "delete record from Mixed (external, warm)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1a3fb65d9e5598a23dd434227c00a31678b660abfd506ccc6d255d7e781de72f",
                          "typeString": "literal_string \"delete record from Mixed (external, warm)\""
                        }
                      ],
                      "id": 68764,
                      "name": "startGasReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40594,
                      "src": "2074:14:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 68766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2074:59:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68767,
                  "nodeType": "ExpressionStatement",
                  "src": "2074:59:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68771,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68666,
                        "src": "2158:3:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 68768,
                        "name": "Mixed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90141,
                        "src": "2139:5:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Mixed_$90141_$",
                          "typeString": "type(library Mixed)"
                        }
                      },
                      "id": 68770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2145:12:82",
                      "memberName": "deleteRecord",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89959,
                      "src": "2139:18:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 68772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2139:23:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68773,
                  "nodeType": "ExpressionStatement",
                  "src": "2139:23:82"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 68774,
                      "name": "endGasReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40648,
                      "src": "2168:12:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 68775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2168:14:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68776,
                  "nodeType": "ExpressionStatement",
                  "src": "2168:14:82"
                }
              ]
            },
            "functionSelector": "3b310015",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSetGetDeleteExternal",
            "nameLocation": "1463:24:82",
            "parameters": {
              "id": 68663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1487:2:82"
            },
            "returnParameters": {
              "id": 68664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1497:0:82"
            },
            "scope": 69049,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68894,
            "nodeType": "FunctionDefinition",
            "src": "2191:736:82",
            "nodes": [],
            "body": {
              "id": 68893,
              "nodeType": "Block",
              "src": "2234:693:82",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    68782
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68782,
                      "mutability": "mutable",
                      "name": "key",
                      "nameLocation": "2248:3:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 68893,
                      "src": "2240:11:82",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 68781,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2240:7:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68786,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "736f6d656b6579",
                        "id": 68784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2264:9:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb6245aca5d4521d3861a1f459d2c5321703a5f29237f738065baac9681f586b",
                          "typeString": "literal_string \"somekey\""
                        },
                        "value": "somekey"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_fb6245aca5d4521d3861a1f459d2c5321703a5f29237f738065baac9681f586b",
                          "typeString": "literal_string \"somekey\""
                        }
                      ],
                      "id": 68783,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2254:9:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 68785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2254:20:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2240:34:82"
                },
                {
                  "assignments": [
                    68791
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68791,
                      "mutability": "mutable",
                      "name": "a32",
                      "nameLocation": "2297:3:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 68893,
                      "src": "2281:19:82",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                        "typeString": "uint32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 68789,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2281:6:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 68790,
                        "nodeType": "ArrayTypeName",
                        "src": "2281:8:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                          "typeString": "uint32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68797,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 68795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2316:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 68794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2303:12:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 68792,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2307:6:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 68793,
                        "nodeType": "ArrayTypeName",
                        "src": "2307:8:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                          "typeString": "uint32[]"
                        }
                      }
                    },
                    "id": 68796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2303:15:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                      "typeString": "uint32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2281:37:82"
                },
                {
                  "expression": {
                    "id": 68802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 68798,
                        "name": "a32",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68791,
                        "src": "2324:3:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      "id": 68800,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 68799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2328:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2324:6:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "33",
                      "id": 68801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2333:1:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "2324:10:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 68803,
                  "nodeType": "ExpressionStatement",
                  "src": "2324:10:82"
                },
                {
                  "expression": {
                    "id": 68808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 68804,
                        "name": "a32",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68791,
                        "src": "2340:3:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      "id": 68806,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 68805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2344:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2340:6:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "34",
                      "id": 68807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2349:1:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "src": "2340:10:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 68809,
                  "nodeType": "ExpressionStatement",
                  "src": "2340:10:82"
                },
                {
                  "assignments": [
                    68811
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68811,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "2370:1:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 68893,
                      "src": "2356:15:82",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 68810,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2356:6:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68813,
                  "initialValue": {
                    "hexValue": "736f6d6520737472696e67",
                    "id": 68812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2374:13:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_83c737ad570e9f3e71e0d2800958e44770d812e92db2c1758626613d1e6ba514",
                      "typeString": "literal_string \"some string\""
                    },
                    "value": "some string"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2356:31:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "736574207265636f726420696e204d697865642028696e7465726e616c2c20636f6c6429",
                        "id": 68815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2409:38:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bda1042f7270a8e488b90ea7a4eea17d12ec3ed5050c717da55266af38e8988f",
                          "typeString": "literal_string \"set record in Mixed (internal, cold)\""
                        },
                        "value": "set record in Mixed (internal, cold)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_bda1042f7270a8e488b90ea7a4eea17d12ec3ed5050c717da55266af38e8988f",
                          "typeString": "literal_string \"set record in Mixed (internal, cold)\""
                        }
                      ],
                      "id": 68814,
                      "name": "startGasReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40594,
                      "src": "2394:14:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 68816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2394:54:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68817,
                  "nodeType": "ExpressionStatement",
                  "src": "2394:54:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68821,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68782,
                        "src": "2472:3:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 68822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2482:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "32",
                        "id": 68823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2491:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "id": 68824,
                        "name": "a32",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68791,
                        "src": "2499:3:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      {
                        "id": 68825,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68811,
                        "src": "2507:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 68818,
                        "name": "Mixed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90141,
                        "src": "2454:5:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Mixed_$90141_$",
                          "typeString": "type(library Mixed)"
                        }
                      },
                      "id": 68820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2460:4:82",
                      "memberName": "_set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89656,
                      "src": "2454:10:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint32_$_t_uint128_$_t_array$_t_uint32_$dyn_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,uint32,uint128,uint32[] memory,string memory)"
                      }
                    },
                    "id": 68826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "2467:3:82",
                      "2477:3:82",
                      "2485:4:82",
                      "2494:3:82",
                      "2504:1:82"
                    ],
                    "names": [
                      "key",
                      "u32",
                      "u128",
                      "a32",
                      "s"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2454:57:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68827,
                  "nodeType": "ExpressionStatement",
                  "src": "2454:57:82"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 68828,
                      "name": "endGasReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40648,
                      "src": "2517:12:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 68829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2517:14:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68830,
                  "nodeType": "ExpressionStatement",
                  "src": "2517:14:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "676574207265636f72642066726f6d204d697865642028696e7465726e616c2c207761726d29",
                        "id": 68832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2553:40:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a179f90dc8c9cc75e1596aedf40e16c7dec956635cbb1ed5816177484f631ee",
                          "typeString": "literal_string \"get record from Mixed (internal, warm)\""
                        },
                        "value": "get record from Mixed (internal, warm)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0a179f90dc8c9cc75e1596aedf40e16c7dec956635cbb1ed5816177484f631ee",
                          "typeString": "literal_string \"get record from Mixed (internal, warm)\""
                        }
                      ],
                      "id": 68831,
                      "name": "startGasReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40594,
                      "src": "2538:14:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 68833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2538:56:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68834,
                  "nodeType": "ExpressionStatement",
                  "src": "2538:56:82"
                },
                {
                  "assignments": [
                    68837
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68837,
                      "mutability": "mutable",
                      "name": "mixed",
                      "nameLocation": "2617:5:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 68893,
                      "src": "2600:22:82",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MixedData_$87666_memory_ptr",
                        "typeString": "struct MixedData"
                      },
                      "typeName": {
                        "id": 68836,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 68835,
                          "name": "MixedData",
                          "nameLocations": [
                            "2600:9:82"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 87666,
                          "src": "2600:9:82"
                        },
                        "referencedDeclaration": 87666,
                        "src": "2600:9:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MixedData_$87666_storage_ptr",
                          "typeString": "struct MixedData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68842,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 68840,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68782,
                        "src": "2636:3:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 68838,
                        "name": "Mixed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90141,
                        "src": "2625:5:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Mixed_$90141_$",
                          "typeString": "type(library Mixed)"
                        }
                      },
                      "id": 68839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2631:4:82",
                      "memberName": "_get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89525,
                      "src": "2625:10:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_MixedData_$87666_memory_ptr_$",
                        "typeString": "function (bytes32) view returns (struct MixedData memory)"
                      }
                    },
                    "id": 68841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2625:15:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MixedData_$87666_memory_ptr",
                      "typeString": "struct MixedData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2600:40:82"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 68843,
                      "name": "endGasReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40648,
                      "src": "2646:12:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 68844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2646:14:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68845,
                  "nodeType": "ExpressionStatement",
                  "src": "2646:14:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 68847,
                          "name": "mixed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68837,
                          "src": "2676:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MixedData_$87666_memory_ptr",
                            "typeString": "struct MixedData memory"
                          }
                        },
                        "id": 68848,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2682:3:82",
                        "memberName": "u32",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87658,
                        "src": "2676:9:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 68849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2687:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 68846,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41497,
                      "src": "2667:8:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 68850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2667:22:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68851,
                  "nodeType": "ExpressionStatement",
                  "src": "2667:22:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 68853,
                          "name": "mixed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68837,
                          "src": "2704:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MixedData_$87666_memory_ptr",
                            "typeString": "struct MixedData memory"
                          }
                        },
                        "id": 68854,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2710:4:82",
                        "memberName": "u128",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87660,
                        "src": "2704:10:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 68855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2716:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 68852,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41497,
                      "src": "2695:8:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 68856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2695:23:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68857,
                  "nodeType": "ExpressionStatement",
                  "src": "2695:23:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 68859,
                            "name": "mixed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68837,
                            "src": "2733:5:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MixedData_$87666_memory_ptr",
                              "typeString": "struct MixedData memory"
                            }
                          },
                          "id": 68860,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2739:3:82",
                          "memberName": "a32",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 87663,
                          "src": "2733:9:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                            "typeString": "uint32[] memory"
                          }
                        },
                        "id": 68862,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 68861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2743:1:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2733:12:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 68863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2747:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 68858,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41497,
                      "src": "2724:8:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 68864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2724:25:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68865,
                  "nodeType": "ExpressionStatement",
                  "src": "2724:25:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 68867,
                            "name": "mixed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68837,
                            "src": "2764:5:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MixedData_$87666_memory_ptr",
                              "typeString": "struct MixedData memory"
                            }
                          },
                          "id": 68868,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2770:3:82",
                          "memberName": "a32",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 87663,
                          "src": "2764:9:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                            "typeString": "uint32[] memory"
                          }
                        },
                        "id": 68870,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 68869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2774:1:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2764:12:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "hexValue": "34",
                        "id": 68871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2778:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 68866,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41497,
                      "src": "2755:8:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 68872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2755:25:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68873,
                  "nodeType": "ExpressionStatement",
                  "src": "2755:25:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 68875,
                          "name": "mixed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68837,
                          "src": "2795:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MixedData_$87666_memory_ptr",
                            "typeString": "struct MixedData memory"
                          }
                        },
                        "id": 68876,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2801:1:82",
                        "memberName": "s",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87665,
                        "src": "2795:7:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 68877,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68811,
                        "src": "2804:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 68874,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 42995,
                      "src": "2786:8:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 68878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2786:20:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68879,
                  "nodeType": "ExpressionStatement",
                  "src": "2786:20:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "64656c657465207265636f72642066726f6d204d697865642028696e7465726e616c2c207761726d29",
                        "id": 68881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2828:43:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3b54a0f28460ab461f2ceeda32a9ff6018f82bbb80c346f24ef503f62a19825",
                          "typeString": "literal_string \"delete record from Mixed (internal, warm)\""
                        },
                        "value": "delete record from Mixed (internal, warm)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d3b54a0f28460ab461f2ceeda32a9ff6018f82bbb80c346f24ef503f62a19825",
                          "typeString": "literal_string \"delete record from Mixed (internal, warm)\""
                        }
                      ],
                      "id": 68880,
                      "name": "startGasReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40594,
                      "src": "2813:14:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 68882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2813:59:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68883,
                  "nodeType": "ExpressionStatement",
                  "src": "2813:59:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68887,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68782,
                        "src": "2898:3:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 68884,
                        "name": "Mixed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90141,
                        "src": "2878:5:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Mixed_$90141_$",
                          "typeString": "type(library Mixed)"
                        }
                      },
                      "id": 68886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2884:13:82",
                      "memberName": "_deleteRecord",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89991,
                      "src": "2878:19:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 68888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2878:24:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68889,
                  "nodeType": "ExpressionStatement",
                  "src": "2878:24:82"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 68890,
                      "name": "endGasReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40648,
                      "src": "2908:12:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 68891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2908:14:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68892,
                  "nodeType": "ExpressionStatement",
                  "src": "2908:14:82"
                }
              ]
            },
            "functionSelector": "34cab085",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSetGetDeleteInternal",
            "nameLocation": "2200:24:82",
            "parameters": {
              "id": 68779,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2224:2:82"
            },
            "returnParameters": {
              "id": 68780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2234:0:82"
            },
            "scope": 69049,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68917,
            "nodeType": "FunctionDefinition",
            "src": "2931:204:82",
            "nodes": [],
            "body": {
              "id": 68916,
              "nodeType": "Block",
              "src": "2972:163:82",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    68898
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68898,
                      "mutability": "mutable",
                      "name": "key",
                      "nameLocation": "2986:3:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 68916,
                      "src": "2978:11:82",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 68897,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2978:7:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68902,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "64656661756c746b6579",
                        "id": 68900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3002:12:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d996e8ae0fc1474ddf341dd3c0d7079328d4828516e443b1328aa5cab5740b2b",
                          "typeString": "literal_string \"defaultkey\""
                        },
                        "value": "defaultkey"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d996e8ae0fc1474ddf341dd3c0d7079328d4828516e443b1328aa5cab5740b2b",
                          "typeString": "literal_string \"defaultkey\""
                        }
                      ],
                      "id": 68899,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2992:9:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 68901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2992:23:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2978:37:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "64656c657465207265636f72642066726f6d204d69786564202865787465726e616c2c20636f6c6429",
                        "id": 68904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3037:43:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68a3b0a172c06ad322e4e4e7dd88d265ed783cd4895d86d1e4672ead5398e890",
                          "typeString": "literal_string \"delete record from Mixed (external, cold)\""
                        },
                        "value": "delete record from Mixed (external, cold)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_68a3b0a172c06ad322e4e4e7dd88d265ed783cd4895d86d1e4672ead5398e890",
                          "typeString": "literal_string \"delete record from Mixed (external, cold)\""
                        }
                      ],
                      "id": 68903,
                      "name": "startGasReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40594,
                      "src": "3022:14:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 68905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3022:59:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68906,
                  "nodeType": "ExpressionStatement",
                  "src": "3022:59:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68910,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68898,
                        "src": "3106:3:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 68907,
                        "name": "Mixed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90141,
                        "src": "3087:5:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Mixed_$90141_$",
                          "typeString": "type(library Mixed)"
                        }
                      },
                      "id": 68909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3093:12:82",
                      "memberName": "deleteRecord",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89959,
                      "src": "3087:18:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 68911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3087:23:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68912,
                  "nodeType": "ExpressionStatement",
                  "src": "3087:23:82"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 68913,
                      "name": "endGasReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40648,
                      "src": "3116:12:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 68914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3116:14:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68915,
                  "nodeType": "ExpressionStatement",
                  "src": "3116:14:82"
                }
              ]
            },
            "functionSelector": "fc9cc759",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDeleteExternalCold",
            "nameLocation": "2940:22:82",
            "parameters": {
              "id": 68895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2962:2:82"
            },
            "returnParameters": {
              "id": 68896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2972:0:82"
            },
            "scope": 69049,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68940,
            "nodeType": "FunctionDefinition",
            "src": "3139:205:82",
            "nodes": [],
            "body": {
              "id": 68939,
              "nodeType": "Block",
              "src": "3180:164:82",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    68921
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68921,
                      "mutability": "mutable",
                      "name": "key",
                      "nameLocation": "3194:3:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 68939,
                      "src": "3186:11:82",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 68920,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3186:7:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68925,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "64656661756c746b6579",
                        "id": 68923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3210:12:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d996e8ae0fc1474ddf341dd3c0d7079328d4828516e443b1328aa5cab5740b2b",
                          "typeString": "literal_string \"defaultkey\""
                        },
                        "value": "defaultkey"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d996e8ae0fc1474ddf341dd3c0d7079328d4828516e443b1328aa5cab5740b2b",
                          "typeString": "literal_string \"defaultkey\""
                        }
                      ],
                      "id": 68922,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3200:9:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 68924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3200:23:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3186:37:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "64656c657465207265636f72642066726f6d204d697865642028696e7465726e616c2c20636f6c6429",
                        "id": 68927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3245:43:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fe483fd8060f9ffc6cc568a3aa0b3f800388c72c283f63d7cee60e7946ea700",
                          "typeString": "literal_string \"delete record from Mixed (internal, cold)\""
                        },
                        "value": "delete record from Mixed (internal, cold)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0fe483fd8060f9ffc6cc568a3aa0b3f800388c72c283f63d7cee60e7946ea700",
                          "typeString": "literal_string \"delete record from Mixed (internal, cold)\""
                        }
                      ],
                      "id": 68926,
                      "name": "startGasReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40594,
                      "src": "3230:14:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 68928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3230:59:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68929,
                  "nodeType": "ExpressionStatement",
                  "src": "3230:59:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68933,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68921,
                        "src": "3315:3:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 68930,
                        "name": "Mixed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90141,
                        "src": "3295:5:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Mixed_$90141_$",
                          "typeString": "type(library Mixed)"
                        }
                      },
                      "id": 68932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3301:13:82",
                      "memberName": "_deleteRecord",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89991,
                      "src": "3295:19:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 68934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3295:24:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68935,
                  "nodeType": "ExpressionStatement",
                  "src": "3295:24:82"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 68936,
                      "name": "endGasReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40648,
                      "src": "3325:12:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 68937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3325:14:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68938,
                  "nodeType": "ExpressionStatement",
                  "src": "3325:14:82"
                }
              ]
            },
            "functionSelector": "72663d8c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDeleteInternalCold",
            "nameLocation": "3148:22:82",
            "parameters": {
              "id": 68918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3170:2:82"
            },
            "returnParameters": {
              "id": 68919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3180:0:82"
            },
            "scope": 69049,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68985,
            "nodeType": "FunctionDefinition",
            "src": "3348:303:82",
            "nodes": [],
            "body": {
              "id": 68984,
              "nodeType": "Block",
              "src": "3386:265:82",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    68945
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68945,
                      "mutability": "mutable",
                      "name": "mixed",
                      "nameLocation": "3409:5:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 68984,
                      "src": "3392:22:82",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MixedData_$87666_memory_ptr",
                        "typeString": "struct MixedData"
                      },
                      "typeName": {
                        "id": 68944,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 68943,
                          "name": "MixedData",
                          "nameLocations": [
                            "3392:9:82"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 87666,
                          "src": "3392:9:82"
                        },
                        "referencedDeclaration": 87666,
                        "src": "3392:9:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MixedData_$87666_storage_ptr",
                          "typeString": "struct MixedData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68956,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 68947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3434:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "32",
                        "id": 68948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3443:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 68952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3464:1:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 68951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "3451:12:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint32_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint32[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 68949,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3455:6:82",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "id": 68950,
                            "nodeType": "ArrayTypeName",
                            "src": "3455:8:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                              "typeString": "uint32[]"
                            }
                          }
                        },
                        "id": 68953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3451:15:82",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      {
                        "hexValue": "736f6d6520737472696e67",
                        "id": 68954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3471:13:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_83c737ad570e9f3e71e0d2800958e44770d812e92db2c1758626613d1e6ba514",
                          "typeString": "literal_string \"some string\""
                        },
                        "value": "some string"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_83c737ad570e9f3e71e0d2800958e44770d812e92db2c1758626613d1e6ba514",
                          "typeString": "literal_string \"some string\""
                        }
                      ],
                      "id": 68946,
                      "name": "MixedData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87666,
                      "src": "3417:9:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_MixedData_$87666_storage_ptr_$",
                        "typeString": "type(struct MixedData storage pointer)"
                      }
                    },
                    "id": 68955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "3429:3:82",
                      "3437:4:82",
                      "3446:3:82",
                      "3468:1:82"
                    ],
                    "names": [
                      "u32",
                      "u128",
                      "a32",
                      "s"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "3417:70:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MixedData_$87666_memory_ptr",
                      "typeString": "struct MixedData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3392:95:82"
                },
                {
                  "expression": {
                    "id": 68963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 68957,
                          "name": "mixed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68945,
                          "src": "3493:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MixedData_$87666_memory_ptr",
                            "typeString": "struct MixedData memory"
                          }
                        },
                        "id": 68960,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3499:3:82",
                        "memberName": "a32",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87663,
                        "src": "3493:9:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      "id": 68961,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 68959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3503:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3493:12:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "33",
                      "id": 68962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3508:1:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "3493:16:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 68964,
                  "nodeType": "ExpressionStatement",
                  "src": "3493:16:82"
                },
                {
                  "expression": {
                    "id": 68971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 68965,
                          "name": "mixed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68945,
                          "src": "3515:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MixedData_$87666_memory_ptr",
                            "typeString": "struct MixedData memory"
                          }
                        },
                        "id": 68968,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3521:3:82",
                        "memberName": "a32",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87663,
                        "src": "3515:9:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      "id": 68969,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 68967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3525:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3515:12:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "34",
                      "id": 68970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3530:1:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "src": "3515:16:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 68972,
                  "nodeType": "ExpressionStatement",
                  "src": "3515:16:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "73746f7265204d697865642073747275637420696e2073746f7261676520286e617469766520736f6c696469747929",
                        "id": 68974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3553:49:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20d7d65d62ed282e8e353bfc9bc75f05d87b1ba97d4d41fa65ee2ac78cb3dc68",
                          "typeString": "literal_string \"store Mixed struct in storage (native solidity)\""
                        },
                        "value": "store Mixed struct in storage (native solidity)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_20d7d65d62ed282e8e353bfc9bc75f05d87b1ba97d4d41fa65ee2ac78cb3dc68",
                          "typeString": "literal_string \"store Mixed struct in storage (native solidity)\""
                        }
                      ],
                      "id": 68973,
                      "name": "startGasReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40594,
                      "src": "3538:14:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 68975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3538:65:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68976,
                  "nodeType": "ExpressionStatement",
                  "src": "3538:65:82"
                },
                {
                  "expression": {
                    "id": 68979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 68977,
                      "name": "testMixed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68542,
                      "src": "3609:9:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MixedData_$87666_storage",
                        "typeString": "struct MixedData storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 68978,
                      "name": "mixed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68945,
                      "src": "3621:5:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MixedData_$87666_memory_ptr",
                        "typeString": "struct MixedData memory"
                      }
                    },
                    "src": "3609:17:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MixedData_$87666_storage",
                      "typeString": "struct MixedData storage ref"
                    }
                  },
                  "id": 68980,
                  "nodeType": "ExpressionStatement",
                  "src": "3609:17:82"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 68981,
                      "name": "endGasReport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40648,
                      "src": "3632:12:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 68982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3632:14:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68983,
                  "nodeType": "ExpressionStatement",
                  "src": "3632:14:82"
                }
              ]
            },
            "functionSelector": "4c4cb815",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCompareSolidity",
            "nameLocation": "3357:19:82",
            "parameters": {
              "id": 68941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3376:2:82"
            },
            "returnParameters": {
              "id": 68942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3386:0:82"
            },
            "scope": 69049,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 69048,
            "nodeType": "FunctionDefinition",
            "src": "3655:518:82",
            "nodes": [],
            "body": {
              "id": 69047,
              "nodeType": "Block",
              "src": "3684:489:82",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    68992
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68992,
                      "mutability": "mutable",
                      "name": "a32",
                      "nameLocation": "3706:3:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 69047,
                      "src": "3690:19:82",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                        "typeString": "uint32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 68990,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3690:6:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 68991,
                        "nodeType": "ArrayTypeName",
                        "src": "3690:8:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                          "typeString": "uint32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68998,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 68996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3725:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 68995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3712:12:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 68993,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3716:6:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 68994,
                        "nodeType": "ArrayTypeName",
                        "src": "3716:8:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                          "typeString": "uint32[]"
                        }
                      }
                    },
                    "id": 68997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3712:15:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                      "typeString": "uint32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3690:37:82"
                },
                {
                  "expression": {
                    "id": 69003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 68999,
                        "name": "a32",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68992,
                        "src": "3733:3:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      "id": 69001,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 69000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3737:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3733:6:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "33",
                      "id": 69002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3742:1:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "3733:10:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 69004,
                  "nodeType": "ExpressionStatement",
                  "src": "3733:10:82"
                },
                {
                  "expression": {
                    "id": 69009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 69005,
                        "name": "a32",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68992,
                        "src": "3749:3:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      "id": 69007,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 69006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3753:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3749:6:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "34",
                      "id": 69008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3758:1:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "src": "3749:10:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 69010,
                  "nodeType": "ExpressionStatement",
                  "src": "3749:10:82"
                },
                {
                  "assignments": [
                    69012
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 69012,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "3779:1:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 69047,
                      "src": "3765:15:82",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 69011,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3765:6:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 69014,
                  "initialValue": {
                    "hexValue": "736f6d6520737472696e67",
                    "id": 69013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3783:13:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_83c737ad570e9f3e71e0d2800958e44770d812e92db2c1758626613d1e6ba514",
                      "typeString": "literal_string \"some string\""
                    },
                    "value": "some string"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3765:31:82"
                },
                {
                  "assignments": [
                    69016,
                    69019,
                    69021
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 69016,
                      "mutability": "mutable",
                      "name": "staticData",
                      "nameLocation": "3817:10:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 69047,
                      "src": "3804:23:82",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 69015,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3804:5:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 69019,
                      "mutability": "mutable",
                      "name": "encodedLengths",
                      "nameLocation": "3843:14:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 69047,
                      "src": "3829:28:82",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_PackedCounter_$45594",
                        "typeString": "PackedCounter"
                      },
                      "typeName": {
                        "id": 69018,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 69017,
                          "name": "PackedCounter",
                          "nameLocations": [
                            "3829:13:82"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 45594,
                          "src": "3829:13:82"
                        },
                        "referencedDeclaration": 45594,
                        "src": "3829:13:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_PackedCounter_$45594",
                          "typeString": "PackedCounter"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 69021,
                      "mutability": "mutable",
                      "name": "dynamicData",
                      "nameLocation": "3872:11:82",
                      "nodeType": "VariableDeclaration",
                      "scope": 69047,
                      "src": "3859:24:82",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 69020,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3859:5:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 69029,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 69024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3900:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "32",
                        "id": 69025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3903:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "id": 69026,
                        "name": "a32",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68992,
                        "src": "3906:3:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      {
                        "id": 69027,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69012,
                        "src": "3911:1:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 69022,
                        "name": "Mixed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90141,
                        "src": "3887:5:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Mixed_$90141_$",
                          "typeString": "type(library Mixed)"
                        }
                      },
                      "id": 69023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3893:6:82",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 90111,
                      "src": "3887:12:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint32_$_t_uint128_$_t_array$_t_uint32_$dyn_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_userDefinedValueType$_PackedCounter_$45594_$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint32,uint128,uint32[] memory,string memory) pure returns (bytes memory,PackedCounter,bytes memory)"
                      }
                    },
                    "id": 69028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3887:26:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_userDefinedValueType$_PackedCounter_$45594_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bytes memory,PackedCounter,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3803:110:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 69031,
                        "name": "staticData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69016,
                        "src": "3928:10:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "0000000100000000000000000000000000000002",
                        "id": 69032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3940:45:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f7e9ea6ca17dfbfe9c9175bfd6c7ffb3c4909d551df5587c219d82e1b02e779",
                          "typeString": "literal_string hex\"0000000100000000000000000000000000000002\""
                        },
                        "value": "\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f7e9ea6ca17dfbfe9c9175bfd6c7ffb3c4909d551df5587c219d82e1b02e779",
                          "typeString": "literal_string hex\"0000000100000000000000000000000000000002\""
                        }
                      ],
                      "id": 69030,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 101550,
                      "src": "3919:8:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory)"
                      }
                    },
                    "id": 69033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3919:67:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69034,
                  "nodeType": "ExpressionStatement",
                  "src": "3919:67:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 69036,
                            "name": "encodedLengths",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69019,
                            "src": "4001:14:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_PackedCounter_$45594",
                              "typeString": "PackedCounter"
                            }
                          },
                          "id": 69037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4016:6:82",
                          "memberName": "unwrap",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46216,
                          "src": "4001:21:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_PackedCounter_$45594_$returns$_t_bytes32_$attached_to$_t_userDefinedValueType$_PackedCounter_$45594_$",
                            "typeString": "function (PackedCounter) pure returns (bytes32)"
                          }
                        },
                        "id": 69038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4001:23:82",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "000000000000000000000000000000000000000b000000000800000000000013",
                        "id": 69039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4026:69:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa4671a3ff5d1c7081ab7b890c359ec8ec41066c805d781436de736866ce549a",
                          "typeString": "literal_string hex\"000000000000000000000000000000000000000b000000000800000000000013\""
                        },
                        "value": "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000b\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0013"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa4671a3ff5d1c7081ab7b890c359ec8ec41066c805d781436de736866ce549a",
                          "typeString": "literal_string hex\"000000000000000000000000000000000000000b000000000800000000000013\""
                        }
                      ],
                      "id": 69035,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 41358,
                      "src": "3992:8:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 69040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3992:104:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69041,
                  "nodeType": "ExpressionStatement",
                  "src": "3992:104:82"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 69043,
                        "name": "dynamicData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69021,
                        "src": "4111:11:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "0000000300000004736f6d6520737472696e67",
                        "id": 69044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4124:43:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e935d50ce845e7f8d85d8e324fe722230f7b398ade5a97b693444199b22eafd4",
                          "typeString": "literal_string hex\"0000000300000004736f6d6520737472696e67\""
                        },
                        "value": "\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0004some string"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e935d50ce845e7f8d85d8e324fe722230f7b398ade5a97b693444199b22eafd4",
                          "typeString": "literal_string hex\"0000000300000004736f6d6520737472696e67\""
                        }
                      ],
                      "id": 69042,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        101512,
                        101537,
                        101550,
                        101566,
                        101608,
                        101650,
                        101692,
                        101729,
                        101766,
                        101803,
                        41303,
                        41328,
                        41358,
                        41383,
                        41442,
                        41467,
                        41497,
                        41522,
                        42995,
                        43030
                      ],
                      "referencedDeclaration": 101550,
                      "src": "4102:8:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory)"
                      }
                    },
                    "id": 69045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4102:66:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69046,
                  "nodeType": "ExpressionStatement",
                  "src": "4102:66:82"
                }
              ]
            },
            "functionSelector": "42011ac9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testEncode",
            "nameLocation": "3664:10:82",
            "parameters": {
              "id": 68986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3674:2:82"
            },
            "returnParameters": {
              "id": 68987,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3684:0:82"
            },
            "scope": 69049,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 68534,
              "name": "Test",
              "nameLocations": [
                "527:4:82"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43325,
              "src": "527:4:82"
            },
            "id": 68535,
            "nodeType": "InheritanceSpecifier",
            "src": "527:4:82"
          },
          {
            "baseName": {
              "id": 68536,
              "name": "GasReporter",
              "nameLocations": [
                "533:11:82"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40736,
              "src": "533:11:82"
            },
            "id": 68537,
            "nodeType": "InheritanceSpecifier",
            "src": "533:11:82"
          },
          {
            "baseName": {
              "id": 68538,
              "name": "StoreMock",
              "nameLocations": [
                "546:9:82"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 83899,
              "src": "546:9:82"
            },
            "id": 68539,
            "nodeType": "InheritanceSpecifier",
            "src": "546:9:82"
          }
        ],
        "canonicalName": "MixedTest",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          69049,
          83899,
          49778,
          50308,
          44787,
          44876,
          45380,
          44810,
          45532,
          44939,
          45327,
          40736,
          43325,
          101384,
          101381,
          110874,
          106612,
          106322,
          105558,
          103504,
          102811,
          43274
        ],
        "name": "MixedTest",
        "nameLocation": "514:9:82",
        "scope": 69050,
        "usedErrors": [
          44149,
          44151,
          44153,
          44821,
          44828,
          44837,
          44843,
          44849,
          44855,
          44861,
          44867,
          44875,
          46017,
          46314,
          46317,
          46797
        ],
        "usedEvents": [
          40988,
          40992,
          40996,
          41000,
          41004,
          41008,
          41012,
          41016,
          41022,
          41028,
          41036,
          41044,
          41050,
          41056,
          41062,
          41068,
          44803,
          44898,
          44911,
          44929,
          44938,
          47454,
          47467,
          47485,
          47494,
          101406,
          101411,
          101416,
          101423,
          101430,
          101437
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 82
}