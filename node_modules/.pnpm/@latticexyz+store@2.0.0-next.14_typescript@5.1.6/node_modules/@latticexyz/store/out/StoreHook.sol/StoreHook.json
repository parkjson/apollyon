{
  "abi": [
    {
      "inputs": [],
      "name": "StoreHook_NotImplemented",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "FieldLayout",
          "name": "fieldLayout",
          "type": "bytes32"
        }
      ],
      "name": "onAfterDeleteRecord",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes",
          "name": "staticData",
          "type": "bytes"
        },
        {
          "internalType": "PackedCounter",
          "name": "encodedLengths",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "dynamicData",
          "type": "bytes"
        },
        {
          "internalType": "FieldLayout",
          "name": "fieldLayout",
          "type": "bytes32"
        }
      ],
      "name": "onAfterSetRecord",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "dynamicFieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "uint40",
          "name": "startWithinField",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "deleteCount",
          "type": "uint40"
        },
        {
          "internalType": "PackedCounter",
          "name": "encodedLengths",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onAfterSpliceDynamicData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint48",
          "name": "start",
          "type": "uint48"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onAfterSpliceStaticData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "FieldLayout",
          "name": "fieldLayout",
          "type": "bytes32"
        }
      ],
      "name": "onBeforeDeleteRecord",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes",
          "name": "staticData",
          "type": "bytes"
        },
        {
          "internalType": "PackedCounter",
          "name": "encodedLengths",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "dynamicData",
          "type": "bytes"
        },
        {
          "internalType": "FieldLayout",
          "name": "fieldLayout",
          "type": "bytes32"
        }
      ],
      "name": "onBeforeSetRecord",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8",
          "name": "dynamicFieldIndex",
          "type": "uint8"
        },
        {
          "internalType": "uint40",
          "name": "startWithinField",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "deleteCount",
          "type": "uint40"
        },
        {
          "internalType": "PackedCounter",
          "name": "encodedLengths",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onBeforeSpliceDynamicData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "ResourceId",
          "name": "tableId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keyTuple",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint48",
          "name": "start",
          "type": "uint48"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onBeforeSpliceStaticData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "onAfterDeleteRecord(bytes32,bytes32[],bytes32)": "83b5c95b",
    "onAfterSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)": "5b28cdaf",
    "onAfterSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)": "63584533",
    "onAfterSpliceStaticData(bytes32,bytes32[],uint48,bytes)": "a8ba8721",
    "onBeforeDeleteRecord(bytes32,bytes32[],bytes32)": "9faeaf45",
    "onBeforeSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)": "57066c9c",
    "onBeforeSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)": "55eb5a28",
    "onBeforeSpliceStaticData(bytes32,bytes32[],uint48,bytes)": "964f667d",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"StoreHook_NotImplemented\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"name\":\"onAfterDeleteRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"staticData\",\"type\":\"bytes\"},{\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dynamicData\",\"type\":\"bytes\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"name\":\"onAfterSetRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"dynamicFieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"uint40\",\"name\":\"startWithinField\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"deleteCount\",\"type\":\"uint40\"},{\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onAfterSpliceDynamicData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onAfterSpliceStaticData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"name\":\"onBeforeDeleteRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"staticData\",\"type\":\"bytes\"},{\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dynamicData\",\"type\":\"bytes\"},{\"internalType\":\"FieldLayout\",\"name\":\"fieldLayout\",\"type\":\"bytes32\"}],\"name\":\"onBeforeSetRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"dynamicFieldIndex\",\"type\":\"uint8\"},{\"internalType\":\"uint40\",\"name\":\"startWithinField\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"deleteCount\",\"type\":\"uint40\"},{\"internalType\":\"PackedCounter\",\"name\":\"encodedLengths\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onBeforeSpliceDynamicData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResourceId\",\"name\":\"tableId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keyTuple\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onBeforeSpliceStaticData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementers should override the hook functions to provide custom logic. If any hooks are activated without overriding these functions, they revert.\",\"kind\":\"dev\",\"methods\":{\"onAfterDeleteRecord(bytes32,bytes32[],bytes32)\":{\"details\":\"This function should be overridden to provide custom logic.\",\"params\":{\"fieldLayout\":\"The layout of the field, see FieldLayout.sol.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"tableId\":\"The ID of the table where the record is to be deleted.\"}},\"onAfterSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)\":{\"details\":\"This function should be overridden to provide custom logic.\",\"params\":{\"dynamicData\":\"The dynamic data of the record.\",\"encodedLengths\":\"The encoded lengths of the dynamic data of the record.\",\"fieldLayout\":\"The layout of the field, see FieldLayout.sol.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"staticData\":\"The static data of the record.\",\"tableId\":\"The ID of the table where the record was set.\"}},\"onAfterSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)\":{\"details\":\"This function should be overridden to provide custom logic. Splice operations in dynamic data always reach the end of the dynamic data to avoid shifting data after the inserted or deleted data.\",\"params\":{\"data\":\"The data to be inserted into the dynamic data of the record at the start byte.\",\"deleteCount\":\"The number of bytes to delete in the dynamic data of the record.\",\"dynamicFieldIndex\":\"The index of the dynamic field.\",\"encodedLengths\":\"The encoded lengths of the dynamic data of the record.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"startWithinField\":\"The start byte position within the field for splicing.\",\"tableId\":\"The ID of the table where the data is to be spliced.\"}},\"onAfterSpliceStaticData(bytes32,bytes32[],uint48,bytes)\":{\"details\":\"This function should be overridden to provide custom logic. Splice operations in static data always overwrite data starting at the start position, so the total length of the data remains the same and no data is shifted.\",\"params\":{\"data\":\"The data to be written to the static data of the record at the start byte.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"start\":\"The start byte position for splicing.\",\"tableId\":\"The ID of the table where the data is to be spliced.\"}},\"onBeforeDeleteRecord(bytes32,bytes32[],bytes32)\":{\"details\":\"This function should be overridden to provide custom logic.\",\"params\":{\"fieldLayout\":\"The layout of the field, see FieldLayout.sol.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"tableId\":\"The ID of the table where the record is to be deleted.\"}},\"onBeforeSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)\":{\"details\":\"This function should be overridden to provide custom logic.\",\"params\":{\"dynamicData\":\"The dynamic data of the record.\",\"encodedLengths\":\"The encoded lengths of the dynamic data of the record.\",\"fieldLayout\":\"The layout of the field, see FieldLayout.sol.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"staticData\":\"The static data of the record.\",\"tableId\":\"The ID of the table where the record is to be set.\"}},\"onBeforeSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)\":{\"details\":\"This function should be overridden to provide custom logic. Splice operations in dynamic data always reach the end of the dynamic data to avoid shifting data after the inserted or deleted data.\",\"params\":{\"data\":\"The data to be inserted into the dynamic data of the record at the start byte.\",\"deleteCount\":\"The number of bytes to delete in the dynamic data of the record.\",\"dynamicFieldIndex\":\"The index of the dynamic field.\",\"encodedLengths\":\"The encoded lengths of the dynamic data of the record.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"startWithinField\":\"The start byte position within the field for splicing.\",\"tableId\":\"The ID of the table where the data is to be spliced.\"}},\"onBeforeSpliceStaticData(bytes32,bytes32[],uint48,bytes)\":{\"details\":\"This function should be overridden to provide custom logic. Splice operations in static data always overwrite data starting at the start position, so the total length of the data remains the same and no data is shifted.\",\"params\":{\"data\":\"The data to be written to the static data of the record at the start byte.\",\"keyTuple\":\"An array representing the composite key for the record.\",\"start\":\"The start byte position for splicing.\",\"tableId\":\"The ID of the table where the data is to be spliced.\"}},\"supportsInterface(bytes4)\":{\"details\":\"This function is a part of the ERC-165 standard.\",\"params\":{\"interfaceId\":\"The ID of the interface to check.\"},\"returns\":{\"_0\":\"true if the interface is supported, false otherwise.\"}}},\"title\":\"Store Hook Contract\",\"version\":1},\"userdoc\":{\"errors\":{\"StoreHook_NotImplemented()\":[{\"notice\":\"Error emitted when a function is not implemented.\"}]},\"kind\":\"user\",\"methods\":{\"onAfterDeleteRecord(bytes32,bytes32[],bytes32)\":{\"notice\":\"Hook that runs after deleting a record.\"},\"onAfterSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)\":{\"notice\":\"Hook that runs after setting a record.\"},\"onAfterSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)\":{\"notice\":\"Hook that runs after splicing dynamic (variable length) data.\"},\"onAfterSpliceStaticData(bytes32,bytes32[],uint48,bytes)\":{\"notice\":\"Hook that runs after splicing static (fixed length) data.\"},\"onBeforeDeleteRecord(bytes32,bytes32[],bytes32)\":{\"notice\":\"Hook that runs before deleting a record.\"},\"onBeforeSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)\":{\"notice\":\"Hook that runs before setting a record.\"},\"onBeforeSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)\":{\"notice\":\"Hook that runs before splicing dynamic (variable length) data.\"},\"onBeforeSpliceStaticData(bytes32,bytes32[],uint48,bytes)\":{\"notice\":\"Hook that runs before splicing static (fixed length) data.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Check if the interface is supported.\"}},\"notice\":\"This abstract contract provides hooks for the storage operations.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/StoreHook.sol\":\"StoreHook\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[\":@latticexyz/=node_modules/@latticexyz/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"src/FieldLayout.sol\":{\"keccak256\":\"0x2a0536cd6cecc479d0b81d5aad6380231f4d6873beadc54814d801c2036b02c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e07c041e19146a9ec258cc700a450b4d49440202895eb12f3bb17508427c23ba\",\"dweb:/ipfs/QmXoqrCGDSkuFgNSMURRFdjokjREL78nLDzNaUi6rjefy9\"]},\"src/IERC165.sol\":{\"keccak256\":\"0x2bbc3c43400c15a91a5cb35430a91309cb64a4d13a0a170eacec71dcf334feaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f44dfc9605067de539de07a76a34bf469faa9e6dad8c192abafc2e05860c7dd2\",\"dweb:/ipfs/QmX8xgG6XWokM7YFwFZvmMhuh1uhkSjxCMD2oTHjUVdapb\"]},\"src/IStoreHook.sol\":{\"keccak256\":\"0xa6777c7868333996ad9c61a94457dcac702d8d7445a104dfdc86543d25e7470e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6268a16449d7529a94746d0103670dd0e38faf5117bf914fb01da9947ab44c2e\",\"dweb:/ipfs/QmaSfbx1QRA3jw2K8bGkQTw4CTGPUzNqnCJW7LwaFUJCXy\"]},\"src/PackedCounter.sol\":{\"keccak256\":\"0x44ddfa9eb8a861462c550f0a9d66c40c68acdb347a61fa765949608407a2c7fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47ee957f4b19cab9e20bf5fc569c015eca13852fb3351f2a105a8be9c48204c0\",\"dweb:/ipfs/QmNkyzDobVQLoq9BtQ8HtgsPLiqnmi97EZx1wsu6wp8nKH\"]},\"src/ResourceId.sol\":{\"keccak256\":\"0x40983c580b8958e55db4520095934a535e98544ffe8228327e598973eb6647ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839d658fa2bb2b1f09a08149d2bf0c26a26c301ad2dda8154fc99458085a695d\",\"dweb:/ipfs/Qmd5jHHYrgqraPqF8bjzT4xyjsoPk8K7pkxXLLfz6MRT6d\"]},\"src/StoreHook.sol\":{\"keccak256\":\"0xd267686b3961da4d9a39e2cd39b89d7074ed27a516a03085bb69a6efea0a424e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8c96a99b6c8dab12799165b888ed5c647638a1114bec138dd65ad46c6d1cf34\",\"dweb:/ipfs/QmaMAkfEmRivfHts72hfYiiQiVc15QSRsXkPHM3d2AbFjf\"]},\"src/constants.sol\":{\"keccak256\":\"0x9e37c64c119ef07ad914bc589ee3f6d67946ab95877978c1ee3e2c1ffae07076\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fad47e542025382aa28e8171253e34f93b2f149434b67a26989542d70218793\",\"dweb:/ipfs/QmW6JsKNwPc6oAMrgcikgR2EPwMUtQANiuZSQSGCd29HHC\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "StoreHook_NotImplemented"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "FieldLayout",
              "name": "fieldLayout",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onAfterDeleteRecord"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes",
              "name": "staticData",
              "type": "bytes"
            },
            {
              "internalType": "PackedCounter",
              "name": "encodedLengths",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "dynamicData",
              "type": "bytes"
            },
            {
              "internalType": "FieldLayout",
              "name": "fieldLayout",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onAfterSetRecord"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "dynamicFieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "uint40",
              "name": "startWithinField",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "deleteCount",
              "type": "uint40"
            },
            {
              "internalType": "PackedCounter",
              "name": "encodedLengths",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onAfterSpliceDynamicData"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onAfterSpliceStaticData"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "FieldLayout",
              "name": "fieldLayout",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onBeforeDeleteRecord"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes",
              "name": "staticData",
              "type": "bytes"
            },
            {
              "internalType": "PackedCounter",
              "name": "encodedLengths",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "dynamicData",
              "type": "bytes"
            },
            {
              "internalType": "FieldLayout",
              "name": "fieldLayout",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onBeforeSetRecord"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8",
              "name": "dynamicFieldIndex",
              "type": "uint8"
            },
            {
              "internalType": "uint40",
              "name": "startWithinField",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "deleteCount",
              "type": "uint40"
            },
            {
              "internalType": "PackedCounter",
              "name": "encodedLengths",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onBeforeSpliceDynamicData"
        },
        {
          "inputs": [
            {
              "internalType": "ResourceId",
              "name": "tableId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "keyTuple",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onBeforeSpliceStaticData"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "onAfterDeleteRecord(bytes32,bytes32[],bytes32)": {
            "details": "This function should be overridden to provide custom logic.",
            "params": {
              "fieldLayout": "The layout of the field, see FieldLayout.sol.",
              "keyTuple": "An array representing the composite key for the record.",
              "tableId": "The ID of the table where the record is to be deleted."
            }
          },
          "onAfterSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)": {
            "details": "This function should be overridden to provide custom logic.",
            "params": {
              "dynamicData": "The dynamic data of the record.",
              "encodedLengths": "The encoded lengths of the dynamic data of the record.",
              "fieldLayout": "The layout of the field, see FieldLayout.sol.",
              "keyTuple": "An array representing the composite key for the record.",
              "staticData": "The static data of the record.",
              "tableId": "The ID of the table where the record was set."
            }
          },
          "onAfterSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)": {
            "details": "This function should be overridden to provide custom logic. Splice operations in dynamic data always reach the end of the dynamic data to avoid shifting data after the inserted or deleted data.",
            "params": {
              "data": "The data to be inserted into the dynamic data of the record at the start byte.",
              "deleteCount": "The number of bytes to delete in the dynamic data of the record.",
              "dynamicFieldIndex": "The index of the dynamic field.",
              "encodedLengths": "The encoded lengths of the dynamic data of the record.",
              "keyTuple": "An array representing the composite key for the record.",
              "startWithinField": "The start byte position within the field for splicing.",
              "tableId": "The ID of the table where the data is to be spliced."
            }
          },
          "onAfterSpliceStaticData(bytes32,bytes32[],uint48,bytes)": {
            "details": "This function should be overridden to provide custom logic. Splice operations in static data always overwrite data starting at the start position, so the total length of the data remains the same and no data is shifted.",
            "params": {
              "data": "The data to be written to the static data of the record at the start byte.",
              "keyTuple": "An array representing the composite key for the record.",
              "start": "The start byte position for splicing.",
              "tableId": "The ID of the table where the data is to be spliced."
            }
          },
          "onBeforeDeleteRecord(bytes32,bytes32[],bytes32)": {
            "details": "This function should be overridden to provide custom logic.",
            "params": {
              "fieldLayout": "The layout of the field, see FieldLayout.sol.",
              "keyTuple": "An array representing the composite key for the record.",
              "tableId": "The ID of the table where the record is to be deleted."
            }
          },
          "onBeforeSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)": {
            "details": "This function should be overridden to provide custom logic.",
            "params": {
              "dynamicData": "The dynamic data of the record.",
              "encodedLengths": "The encoded lengths of the dynamic data of the record.",
              "fieldLayout": "The layout of the field, see FieldLayout.sol.",
              "keyTuple": "An array representing the composite key for the record.",
              "staticData": "The static data of the record.",
              "tableId": "The ID of the table where the record is to be set."
            }
          },
          "onBeforeSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)": {
            "details": "This function should be overridden to provide custom logic. Splice operations in dynamic data always reach the end of the dynamic data to avoid shifting data after the inserted or deleted data.",
            "params": {
              "data": "The data to be inserted into the dynamic data of the record at the start byte.",
              "deleteCount": "The number of bytes to delete in the dynamic data of the record.",
              "dynamicFieldIndex": "The index of the dynamic field.",
              "encodedLengths": "The encoded lengths of the dynamic data of the record.",
              "keyTuple": "An array representing the composite key for the record.",
              "startWithinField": "The start byte position within the field for splicing.",
              "tableId": "The ID of the table where the data is to be spliced."
            }
          },
          "onBeforeSpliceStaticData(bytes32,bytes32[],uint48,bytes)": {
            "details": "This function should be overridden to provide custom logic. Splice operations in static data always overwrite data starting at the start position, so the total length of the data remains the same and no data is shifted.",
            "params": {
              "data": "The data to be written to the static data of the record at the start byte.",
              "keyTuple": "An array representing the composite key for the record.",
              "start": "The start byte position for splicing.",
              "tableId": "The ID of the table where the data is to be spliced."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "This function is a part of the ERC-165 standard.",
            "params": {
              "interfaceId": "The ID of the interface to check."
            },
            "returns": {
              "_0": "true if the interface is supported, false otherwise."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "onAfterDeleteRecord(bytes32,bytes32[],bytes32)": {
            "notice": "Hook that runs after deleting a record."
          },
          "onAfterSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)": {
            "notice": "Hook that runs after setting a record."
          },
          "onAfterSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)": {
            "notice": "Hook that runs after splicing dynamic (variable length) data."
          },
          "onAfterSpliceStaticData(bytes32,bytes32[],uint48,bytes)": {
            "notice": "Hook that runs after splicing static (fixed length) data."
          },
          "onBeforeDeleteRecord(bytes32,bytes32[],bytes32)": {
            "notice": "Hook that runs before deleting a record."
          },
          "onBeforeSetRecord(bytes32,bytes32[],bytes,bytes32,bytes,bytes32)": {
            "notice": "Hook that runs before setting a record."
          },
          "onBeforeSpliceDynamicData(bytes32,bytes32[],uint8,uint40,uint40,bytes32,bytes)": {
            "notice": "Hook that runs before splicing dynamic (variable length) data."
          },
          "onBeforeSpliceStaticData(bytes32,bytes32[],uint48,bytes)": {
            "notice": "Hook that runs before splicing static (fixed length) data."
          },
          "supportsInterface(bytes4)": {
            "notice": "Check if the interface is supported."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@latticexyz/=node_modules/@latticexyz/",
        "ds-test/=node_modules/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 3000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/StoreHook.sol": "StoreHook"
      },
      "libraries": {}
    },
    "sources": {
      "src/FieldLayout.sol": {
        "keccak256": "0x2a0536cd6cecc479d0b81d5aad6380231f4d6873beadc54814d801c2036b02c0",
        "urls": [
          "bzz-raw://e07c041e19146a9ec258cc700a450b4d49440202895eb12f3bb17508427c23ba",
          "dweb:/ipfs/QmXoqrCGDSkuFgNSMURRFdjokjREL78nLDzNaUi6rjefy9"
        ],
        "license": "MIT"
      },
      "src/IERC165.sol": {
        "keccak256": "0x2bbc3c43400c15a91a5cb35430a91309cb64a4d13a0a170eacec71dcf334feaf",
        "urls": [
          "bzz-raw://f44dfc9605067de539de07a76a34bf469faa9e6dad8c192abafc2e05860c7dd2",
          "dweb:/ipfs/QmX8xgG6XWokM7YFwFZvmMhuh1uhkSjxCMD2oTHjUVdapb"
        ],
        "license": "MIT"
      },
      "src/IStoreHook.sol": {
        "keccak256": "0xa6777c7868333996ad9c61a94457dcac702d8d7445a104dfdc86543d25e7470e",
        "urls": [
          "bzz-raw://6268a16449d7529a94746d0103670dd0e38faf5117bf914fb01da9947ab44c2e",
          "dweb:/ipfs/QmaSfbx1QRA3jw2K8bGkQTw4CTGPUzNqnCJW7LwaFUJCXy"
        ],
        "license": "MIT"
      },
      "src/PackedCounter.sol": {
        "keccak256": "0x44ddfa9eb8a861462c550f0a9d66c40c68acdb347a61fa765949608407a2c7fb",
        "urls": [
          "bzz-raw://47ee957f4b19cab9e20bf5fc569c015eca13852fb3351f2a105a8be9c48204c0",
          "dweb:/ipfs/QmNkyzDobVQLoq9BtQ8HtgsPLiqnmi97EZx1wsu6wp8nKH"
        ],
        "license": "MIT"
      },
      "src/ResourceId.sol": {
        "keccak256": "0x40983c580b8958e55db4520095934a535e98544ffe8228327e598973eb6647ed",
        "urls": [
          "bzz-raw://839d658fa2bb2b1f09a08149d2bf0c26a26c301ad2dda8154fc99458085a695d",
          "dweb:/ipfs/Qmd5jHHYrgqraPqF8bjzT4xyjsoPk8K7pkxXLLfz6MRT6d"
        ],
        "license": "MIT"
      },
      "src/StoreHook.sol": {
        "keccak256": "0xd267686b3961da4d9a39e2cd39b89d7074ed27a516a03085bb69a6efea0a424e",
        "urls": [
          "bzz-raw://c8c96a99b6c8dab12799165b888ed5c647638a1114bec138dd65ad46c6d1cf34",
          "dweb:/ipfs/QmaMAkfEmRivfHts72hfYiiQiVc15QSRsXkPHM3d2AbFjf"
        ],
        "license": "MIT"
      },
      "src/constants.sol": {
        "keccak256": "0x9e37c64c119ef07ad914bc589ee3f6d67946ab95877978c1ee3e2c1ffae07076",
        "urls": [
          "bzz-raw://3fad47e542025382aa28e8171253e34f93b2f149434b67a26989542d70218793",
          "dweb:/ipfs/QmW6JsKNwPc6oAMrgcikgR2EPwMUtQANiuZSQSGCd29HHC"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/StoreHook.sol",
    "id": 49981,
    "exportedSymbols": {
      "ERC165_INTERFACE_ID": [
        44763
      ],
      "FieldLayout": [
        44140
      ],
      "IStoreHook": [
        45127
      ],
      "PackedCounter": [
        45594
      ],
      "ResourceId": [
        46221
      ],
      "STORE_HOOK_INTERFACE_ID": [
        44985
      ],
      "StoreHook": [
        49980
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:7682:56",
    "nodes": [
      {
        "id": 49780,
        "nodeType": "PragmaDirective",
        "src": "32:25:56",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 49783,
        "nodeType": "ImportDirective",
        "src": "59:71:56",
        "nodes": [],
        "absolutePath": "src/IStoreHook.sol",
        "file": "./IStoreHook.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49981,
        "sourceUnit": 45128,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49781,
              "name": "IStoreHook",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45127,
              "src": "68:10:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 49782,
              "name": "STORE_HOOK_INTERFACE_ID",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44985,
              "src": "80:23:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49785,
        "nodeType": "ImportDirective",
        "src": "131:52:56",
        "nodes": [],
        "absolutePath": "src/IERC165.sol",
        "file": "./IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49981,
        "sourceUnit": 44773,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49784,
              "name": "ERC165_INTERFACE_ID",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44763,
              "src": "140:19:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49787,
        "nodeType": "ImportDirective",
        "src": "184:52:56",
        "nodes": [],
        "absolutePath": "src/PackedCounter.sol",
        "file": "./PackedCounter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49981,
        "sourceUnit": 46218,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49786,
              "name": "PackedCounter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45594,
              "src": "193:13:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49789,
        "nodeType": "ImportDirective",
        "src": "237:48:56",
        "nodes": [],
        "absolutePath": "src/FieldLayout.sol",
        "file": "./FieldLayout.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49981,
        "sourceUnit": 44560,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49788,
              "name": "FieldLayout",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44140,
              "src": "246:11:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49791,
        "nodeType": "ImportDirective",
        "src": "286:46:56",
        "nodes": [],
        "absolutePath": "src/ResourceId.sol",
        "file": "./ResourceId.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49981,
        "sourceUnit": 46293,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49790,
              "name": "ResourceId",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46221,
              "src": "295:10:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49980,
        "nodeType": "ContractDefinition",
        "src": "609:7104:56",
        "nodes": [
          {
            "id": 49811,
            "nodeType": "FunctionDefinition",
            "src": "900:176:56",
            "nodes": [],
            "body": {
              "id": 49810,
              "nodeType": "Block",
              "src": "982:94:56",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 49808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 49804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 49802,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49797,
                        "src": "995:11:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 49803,
                        "name": "STORE_HOOK_INTERFACE_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44985,
                        "src": "1010:23:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "995:38:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 49807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 49805,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49797,
                        "src": "1037:11:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 49806,
                        "name": "ERC165_INTERFACE_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44763,
                        "src": "1052:19:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "1037:34:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "995:76:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 49801,
                  "id": 49809,
                  "nodeType": "Return",
                  "src": "988:83:56"
                }
              ]
            },
            "baseFunctions": [
              44771
            ],
            "documentation": {
              "id": 49795,
              "nodeType": "StructuredDocumentation",
              "src": "655:242:56",
              "text": " @notice Check if the interface is supported.\n @dev This function is a part of the ERC-165 standard.\n @param interfaceId The ID of the interface to check.\n @return true if the interface is supported, false otherwise."
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "909:17:56",
            "parameters": {
              "id": 49798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49797,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "934:11:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49811,
                  "src": "927:18:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 49796,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "927:6:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "926:20:56"
            },
            "returnParameters": {
              "id": 49801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49800,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49811,
                  "src": "976:4:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 49799,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "976:4:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "975:6:56"
            },
            "scope": 49980,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 49835,
            "nodeType": "FunctionDefinition",
            "src": "1625:267:56",
            "nodes": [],
            "body": {
              "id": 49834,
              "nodeType": "Block",
              "src": "1848:44:56",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49831,
                      "name": "StoreHook_NotImplemented",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44990,
                      "src": "1861:24:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 49832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1861:26:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49833,
                  "nodeType": "RevertStatement",
                  "src": "1854:33:56"
                }
              ]
            },
            "baseFunctions": [
              45010
            ],
            "documentation": {
              "id": 49812,
              "nodeType": "StructuredDocumentation",
              "src": "1080:542:56",
              "text": " @notice Hook that runs before setting a record.\n @dev This function should be overridden to provide custom logic.\n @param tableId The ID of the table where the record is to be set.\n @param keyTuple An array representing the composite key for the record.\n @param staticData The static data of the record.\n @param encodedLengths The encoded lengths of the dynamic data of the record.\n @param dynamicData The dynamic data of the record.\n @param fieldLayout The layout of the field, see FieldLayout.sol."
            },
            "functionSelector": "57066c9c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onBeforeSetRecord",
            "nameLocation": "1634:17:56",
            "parameters": {
              "id": 49829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49815,
                  "mutability": "mutable",
                  "name": "tableId",
                  "nameLocation": "1668:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49835,
                  "src": "1657:18:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_ResourceId_$46221",
                    "typeString": "ResourceId"
                  },
                  "typeName": {
                    "id": 49814,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49813,
                      "name": "ResourceId",
                      "nameLocations": [
                        "1657:10:56"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 46221,
                      "src": "1657:10:56"
                    },
                    "referencedDeclaration": 46221,
                    "src": "1657:10:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_ResourceId_$46221",
                      "typeString": "ResourceId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49818,
                  "mutability": "mutable",
                  "name": "keyTuple",
                  "nameLocation": "1698:8:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49835,
                  "src": "1681:25:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 49816,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1681:7:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 49817,
                    "nodeType": "ArrayTypeName",
                    "src": "1681:9:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49820,
                  "mutability": "mutable",
                  "name": "staticData",
                  "nameLocation": "1725:10:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49835,
                  "src": "1712:23:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 49819,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1712:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49823,
                  "mutability": "mutable",
                  "name": "encodedLengths",
                  "nameLocation": "1755:14:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49835,
                  "src": "1741:28:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_PackedCounter_$45594",
                    "typeString": "PackedCounter"
                  },
                  "typeName": {
                    "id": 49822,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49821,
                      "name": "PackedCounter",
                      "nameLocations": [
                        "1741:13:56"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45594,
                      "src": "1741:13:56"
                    },
                    "referencedDeclaration": 45594,
                    "src": "1741:13:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_PackedCounter_$45594",
                      "typeString": "PackedCounter"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49825,
                  "mutability": "mutable",
                  "name": "dynamicData",
                  "nameLocation": "1788:11:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49835,
                  "src": "1775:24:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 49824,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1775:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49828,
                  "mutability": "mutable",
                  "name": "fieldLayout",
                  "nameLocation": "1817:11:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49835,
                  "src": "1805:23:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                    "typeString": "FieldLayout"
                  },
                  "typeName": {
                    "id": 49827,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49826,
                      "name": "FieldLayout",
                      "nameLocations": [
                        "1805:11:56"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44140,
                      "src": "1805:11:56"
                    },
                    "referencedDeclaration": 44140,
                    "src": "1805:11:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                      "typeString": "FieldLayout"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1651:181:56"
            },
            "returnParameters": {
              "id": 49830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1848:0:56"
            },
            "scope": 49980,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 49859,
            "nodeType": "FunctionDefinition",
            "src": "2435:266:56",
            "nodes": [],
            "body": {
              "id": 49858,
              "nodeType": "Block",
              "src": "2657:44:56",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49855,
                      "name": "StoreHook_NotImplemented",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44990,
                      "src": "2670:24:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 49856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2670:26:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49857,
                  "nodeType": "RevertStatement",
                  "src": "2663:33:56"
                }
              ]
            },
            "baseFunctions": [
              45030
            ],
            "documentation": {
              "id": 49836,
              "nodeType": "StructuredDocumentation",
              "src": "1896:536:56",
              "text": " @notice Hook that runs after setting a record.\n @dev This function should be overridden to provide custom logic.\n @param tableId The ID of the table where the record was set.\n @param keyTuple An array representing the composite key for the record.\n @param staticData The static data of the record.\n @param encodedLengths The encoded lengths of the dynamic data of the record.\n @param dynamicData The dynamic data of the record.\n @param fieldLayout The layout of the field, see FieldLayout.sol."
            },
            "functionSelector": "5b28cdaf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onAfterSetRecord",
            "nameLocation": "2444:16:56",
            "parameters": {
              "id": 49853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49839,
                  "mutability": "mutable",
                  "name": "tableId",
                  "nameLocation": "2477:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49859,
                  "src": "2466:18:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_ResourceId_$46221",
                    "typeString": "ResourceId"
                  },
                  "typeName": {
                    "id": 49838,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49837,
                      "name": "ResourceId",
                      "nameLocations": [
                        "2466:10:56"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 46221,
                      "src": "2466:10:56"
                    },
                    "referencedDeclaration": 46221,
                    "src": "2466:10:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_ResourceId_$46221",
                      "typeString": "ResourceId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49842,
                  "mutability": "mutable",
                  "name": "keyTuple",
                  "nameLocation": "2507:8:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49859,
                  "src": "2490:25:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 49840,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2490:7:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 49841,
                    "nodeType": "ArrayTypeName",
                    "src": "2490:9:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49844,
                  "mutability": "mutable",
                  "name": "staticData",
                  "nameLocation": "2534:10:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49859,
                  "src": "2521:23:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 49843,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2521:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49847,
                  "mutability": "mutable",
                  "name": "encodedLengths",
                  "nameLocation": "2564:14:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49859,
                  "src": "2550:28:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_PackedCounter_$45594",
                    "typeString": "PackedCounter"
                  },
                  "typeName": {
                    "id": 49846,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49845,
                      "name": "PackedCounter",
                      "nameLocations": [
                        "2550:13:56"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45594,
                      "src": "2550:13:56"
                    },
                    "referencedDeclaration": 45594,
                    "src": "2550:13:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_PackedCounter_$45594",
                      "typeString": "PackedCounter"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49849,
                  "mutability": "mutable",
                  "name": "dynamicData",
                  "nameLocation": "2597:11:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49859,
                  "src": "2584:24:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 49848,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2584:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49852,
                  "mutability": "mutable",
                  "name": "fieldLayout",
                  "nameLocation": "2626:11:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49859,
                  "src": "2614:23:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                    "typeString": "FieldLayout"
                  },
                  "typeName": {
                    "id": 49851,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49850,
                      "name": "FieldLayout",
                      "nameLocations": [
                        "2614:11:56"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44140,
                      "src": "2614:11:56"
                    },
                    "referencedDeclaration": 44140,
                    "src": "2614:11:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                      "typeString": "FieldLayout"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2460:181:56"
            },
            "returnParameters": {
              "id": 49854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2657:0:56"
            },
            "scope": 49980,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 49877,
            "nodeType": "FunctionDefinition",
            "src": "3332:193:56",
            "nodes": [],
            "body": {
              "id": 49876,
              "nodeType": "Block",
              "src": "3481:44:56",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49873,
                      "name": "StoreHook_NotImplemented",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44990,
                      "src": "3494:24:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 49874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3494:26:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49875,
                  "nodeType": "RevertStatement",
                  "src": "3487:33:56"
                }
              ]
            },
            "baseFunctions": [
              45044
            ],
            "documentation": {
              "id": 49860,
              "nodeType": "StructuredDocumentation",
              "src": "2705:624:56",
              "text": " @notice Hook that runs before splicing static (fixed length) data.\n @dev This function should be overridden to provide custom logic.\n Splice operations in static data always overwrite data starting at\n the start position,\n so the total length of the data remains the same and no data is shifted.\n @param tableId The ID of the table where the data is to be spliced.\n @param keyTuple An array representing the composite key for the record.\n @param start The start byte position for splicing.\n @param data The data to be written to the static data of the record at the start byte."
            },
            "functionSelector": "964f667d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onBeforeSpliceStaticData",
            "nameLocation": "3341:24:56",
            "parameters": {
              "id": 49871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49863,
                  "mutability": "mutable",
                  "name": "tableId",
                  "nameLocation": "3382:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49877,
                  "src": "3371:18:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_ResourceId_$46221",
                    "typeString": "ResourceId"
                  },
                  "typeName": {
                    "id": 49862,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49861,
                      "name": "ResourceId",
                      "nameLocations": [
                        "3371:10:56"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 46221,
                      "src": "3371:10:56"
                    },
                    "referencedDeclaration": 46221,
                    "src": "3371:10:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_ResourceId_$46221",
                      "typeString": "ResourceId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49866,
                  "mutability": "mutable",
                  "name": "keyTuple",
                  "nameLocation": "3412:8:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49877,
                  "src": "3395:25:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 49864,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3395:7:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 49865,
                    "nodeType": "ArrayTypeName",
                    "src": "3395:9:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49868,
                  "mutability": "mutable",
                  "name": "start",
                  "nameLocation": "3433:5:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49877,
                  "src": "3426:12:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 49867,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "3426:6:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49870,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3457:4:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49877,
                  "src": "3444:17:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 49869,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3444:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3365:100:56"
            },
            "returnParameters": {
              "id": 49872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3481:0:56"
            },
            "scope": 49980,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 49895,
            "nodeType": "FunctionDefinition",
            "src": "4155:192:56",
            "nodes": [],
            "body": {
              "id": 49894,
              "nodeType": "Block",
              "src": "4303:44:56",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49891,
                      "name": "StoreHook_NotImplemented",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44990,
                      "src": "4316:24:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 49892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4316:26:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49893,
                  "nodeType": "RevertStatement",
                  "src": "4309:33:56"
                }
              ]
            },
            "baseFunctions": [
              45058
            ],
            "documentation": {
              "id": 49878,
              "nodeType": "StructuredDocumentation",
              "src": "3529:623:56",
              "text": " @notice Hook that runs after splicing static (fixed length) data.\n @dev This function should be overridden to provide custom logic.\n Splice operations in static data always overwrite data starting at\n the start position,\n so the total length of the data remains the same and no data is shifted.\n @param tableId The ID of the table where the data is to be spliced.\n @param keyTuple An array representing the composite key for the record.\n @param start The start byte position for splicing.\n @param data The data to be written to the static data of the record at the start byte."
            },
            "functionSelector": "a8ba8721",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onAfterSpliceStaticData",
            "nameLocation": "4164:23:56",
            "parameters": {
              "id": 49889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49881,
                  "mutability": "mutable",
                  "name": "tableId",
                  "nameLocation": "4204:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49895,
                  "src": "4193:18:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_ResourceId_$46221",
                    "typeString": "ResourceId"
                  },
                  "typeName": {
                    "id": 49880,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49879,
                      "name": "ResourceId",
                      "nameLocations": [
                        "4193:10:56"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 46221,
                      "src": "4193:10:56"
                    },
                    "referencedDeclaration": 46221,
                    "src": "4193:10:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_ResourceId_$46221",
                      "typeString": "ResourceId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49884,
                  "mutability": "mutable",
                  "name": "keyTuple",
                  "nameLocation": "4234:8:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49895,
                  "src": "4217:25:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 49882,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4217:7:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 49883,
                    "nodeType": "ArrayTypeName",
                    "src": "4217:9:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49886,
                  "mutability": "mutable",
                  "name": "start",
                  "nameLocation": "4255:5:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49895,
                  "src": "4248:12:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 49885,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "4248:6:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49888,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4279:4:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49895,
                  "src": "4266:17:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 49887,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4266:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4187:100:56"
            },
            "returnParameters": {
              "id": 49890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4303:0:56"
            },
            "scope": 49980,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 49920,
            "nodeType": "FunctionDefinition",
            "src": "5216:292:56",
            "nodes": [],
            "body": {
              "id": 49919,
              "nodeType": "Block",
              "src": "5464:44:56",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49916,
                      "name": "StoreHook_NotImplemented",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44990,
                      "src": "5477:24:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 49917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5477:26:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49918,
                  "nodeType": "RevertStatement",
                  "src": "5470:33:56"
                }
              ]
            },
            "baseFunctions": [
              45079
            ],
            "documentation": {
              "id": 49896,
              "nodeType": "StructuredDocumentation",
              "src": "4351:862:56",
              "text": " @notice Hook that runs before splicing dynamic (variable length) data.\n @dev This function should be overridden to provide custom logic.\n Splice operations in dynamic data always reach the end of the dynamic data\n to avoid shifting data after the inserted or deleted data.\n @param tableId The ID of the table where the data is to be spliced.\n @param keyTuple An array representing the composite key for the record.\n @param dynamicFieldIndex The index of the dynamic field.\n @param startWithinField The start byte position within the field for splicing.\n @param deleteCount The number of bytes to delete in the dynamic data of the record.\n @param encodedLengths The encoded lengths of the dynamic data of the record.\n @param data The data to be inserted into the dynamic data of the record at the start byte."
            },
            "functionSelector": "55eb5a28",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onBeforeSpliceDynamicData",
            "nameLocation": "5225:25:56",
            "parameters": {
              "id": 49914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49899,
                  "mutability": "mutable",
                  "name": "tableId",
                  "nameLocation": "5267:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49920,
                  "src": "5256:18:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_ResourceId_$46221",
                    "typeString": "ResourceId"
                  },
                  "typeName": {
                    "id": 49898,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49897,
                      "name": "ResourceId",
                      "nameLocations": [
                        "5256:10:56"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 46221,
                      "src": "5256:10:56"
                    },
                    "referencedDeclaration": 46221,
                    "src": "5256:10:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_ResourceId_$46221",
                      "typeString": "ResourceId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49902,
                  "mutability": "mutable",
                  "name": "keyTuple",
                  "nameLocation": "5297:8:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49920,
                  "src": "5280:25:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 49900,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5280:7:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 49901,
                    "nodeType": "ArrayTypeName",
                    "src": "5280:9:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49904,
                  "mutability": "mutable",
                  "name": "dynamicFieldIndex",
                  "nameLocation": "5317:17:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49920,
                  "src": "5311:23:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 49903,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5311:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49906,
                  "mutability": "mutable",
                  "name": "startWithinField",
                  "nameLocation": "5347:16:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49920,
                  "src": "5340:23:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 49905,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "5340:6:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49908,
                  "mutability": "mutable",
                  "name": "deleteCount",
                  "nameLocation": "5376:11:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49920,
                  "src": "5369:18:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 49907,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "5369:6:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49911,
                  "mutability": "mutable",
                  "name": "encodedLengths",
                  "nameLocation": "5407:14:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49920,
                  "src": "5393:28:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_PackedCounter_$45594",
                    "typeString": "PackedCounter"
                  },
                  "typeName": {
                    "id": 49910,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49909,
                      "name": "PackedCounter",
                      "nameLocations": [
                        "5393:13:56"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45594,
                      "src": "5393:13:56"
                    },
                    "referencedDeclaration": 45594,
                    "src": "5393:13:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_PackedCounter_$45594",
                      "typeString": "PackedCounter"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49913,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5440:4:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49920,
                  "src": "5427:17:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 49912,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5427:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5250:198:56"
            },
            "returnParameters": {
              "id": 49915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5464:0:56"
            },
            "scope": 49980,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 49945,
            "nodeType": "FunctionDefinition",
            "src": "6376:291:56",
            "nodes": [],
            "body": {
              "id": 49944,
              "nodeType": "Block",
              "src": "6623:44:56",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49941,
                      "name": "StoreHook_NotImplemented",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44990,
                      "src": "6636:24:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 49942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6636:26:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49943,
                  "nodeType": "RevertStatement",
                  "src": "6629:33:56"
                }
              ]
            },
            "baseFunctions": [
              45100
            ],
            "documentation": {
              "id": 49921,
              "nodeType": "StructuredDocumentation",
              "src": "5512:861:56",
              "text": " @notice Hook that runs after splicing dynamic (variable length) data.\n @dev This function should be overridden to provide custom logic.\n Splice operations in dynamic data always reach the end of the dynamic data\n to avoid shifting data after the inserted or deleted data.\n @param tableId The ID of the table where the data is to be spliced.\n @param keyTuple An array representing the composite key for the record.\n @param dynamicFieldIndex The index of the dynamic field.\n @param startWithinField The start byte position within the field for splicing.\n @param deleteCount The number of bytes to delete in the dynamic data of the record.\n @param encodedLengths The encoded lengths of the dynamic data of the record.\n @param data The data to be inserted into the dynamic data of the record at the start byte."
            },
            "functionSelector": "63584533",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onAfterSpliceDynamicData",
            "nameLocation": "6385:24:56",
            "parameters": {
              "id": 49939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49924,
                  "mutability": "mutable",
                  "name": "tableId",
                  "nameLocation": "6426:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49945,
                  "src": "6415:18:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_ResourceId_$46221",
                    "typeString": "ResourceId"
                  },
                  "typeName": {
                    "id": 49923,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49922,
                      "name": "ResourceId",
                      "nameLocations": [
                        "6415:10:56"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 46221,
                      "src": "6415:10:56"
                    },
                    "referencedDeclaration": 46221,
                    "src": "6415:10:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_ResourceId_$46221",
                      "typeString": "ResourceId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49927,
                  "mutability": "mutable",
                  "name": "keyTuple",
                  "nameLocation": "6456:8:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49945,
                  "src": "6439:25:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 49925,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6439:7:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 49926,
                    "nodeType": "ArrayTypeName",
                    "src": "6439:9:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49929,
                  "mutability": "mutable",
                  "name": "dynamicFieldIndex",
                  "nameLocation": "6476:17:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49945,
                  "src": "6470:23:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 49928,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6470:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49931,
                  "mutability": "mutable",
                  "name": "startWithinField",
                  "nameLocation": "6506:16:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49945,
                  "src": "6499:23:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 49930,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "6499:6:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49933,
                  "mutability": "mutable",
                  "name": "deleteCount",
                  "nameLocation": "6535:11:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49945,
                  "src": "6528:18:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 49932,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "6528:6:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49936,
                  "mutability": "mutable",
                  "name": "encodedLengths",
                  "nameLocation": "6566:14:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49945,
                  "src": "6552:28:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_PackedCounter_$45594",
                    "typeString": "PackedCounter"
                  },
                  "typeName": {
                    "id": 49935,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49934,
                      "name": "PackedCounter",
                      "nameLocations": [
                        "6552:13:56"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45594,
                      "src": "6552:13:56"
                    },
                    "referencedDeclaration": 45594,
                    "src": "6552:13:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_PackedCounter_$45594",
                      "typeString": "PackedCounter"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49938,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "6599:4:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49945,
                  "src": "6586:17:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 49937,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6586:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6409:198:56"
            },
            "returnParameters": {
              "id": 49940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6623:0:56"
            },
            "scope": 49980,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 49962,
            "nodeType": "FunctionDefinition",
            "src": "7029:161:56",
            "nodes": [],
            "body": {
              "id": 49961,
              "nodeType": "Block",
              "src": "7146:44:56",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49958,
                      "name": "StoreHook_NotImplemented",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44990,
                      "src": "7159:24:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 49959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7159:26:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49960,
                  "nodeType": "RevertStatement",
                  "src": "7152:33:56"
                }
              ]
            },
            "baseFunctions": [
              45113
            ],
            "documentation": {
              "id": 49946,
              "nodeType": "StructuredDocumentation",
              "src": "6671:355:56",
              "text": " @notice Hook that runs before deleting a record.\n @dev This function should be overridden to provide custom logic.\n @param tableId The ID of the table where the record is to be deleted.\n @param keyTuple An array representing the composite key for the record.\n @param fieldLayout The layout of the field, see FieldLayout.sol."
            },
            "functionSelector": "9faeaf45",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onBeforeDeleteRecord",
            "nameLocation": "7038:20:56",
            "parameters": {
              "id": 49956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49949,
                  "mutability": "mutable",
                  "name": "tableId",
                  "nameLocation": "7070:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49962,
                  "src": "7059:18:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_ResourceId_$46221",
                    "typeString": "ResourceId"
                  },
                  "typeName": {
                    "id": 49948,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49947,
                      "name": "ResourceId",
                      "nameLocations": [
                        "7059:10:56"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 46221,
                      "src": "7059:10:56"
                    },
                    "referencedDeclaration": 46221,
                    "src": "7059:10:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_ResourceId_$46221",
                      "typeString": "ResourceId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49952,
                  "mutability": "mutable",
                  "name": "keyTuple",
                  "nameLocation": "7096:8:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49962,
                  "src": "7079:25:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 49950,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "7079:7:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 49951,
                    "nodeType": "ArrayTypeName",
                    "src": "7079:9:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49955,
                  "mutability": "mutable",
                  "name": "fieldLayout",
                  "nameLocation": "7118:11:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49962,
                  "src": "7106:23:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                    "typeString": "FieldLayout"
                  },
                  "typeName": {
                    "id": 49954,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49953,
                      "name": "FieldLayout",
                      "nameLocations": [
                        "7106:11:56"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44140,
                      "src": "7106:11:56"
                    },
                    "referencedDeclaration": 44140,
                    "src": "7106:11:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                      "typeString": "FieldLayout"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7058:72:56"
            },
            "returnParameters": {
              "id": 49957,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7146:0:56"
            },
            "scope": 49980,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 49979,
            "nodeType": "FunctionDefinition",
            "src": "7551:160:56",
            "nodes": [],
            "body": {
              "id": 49978,
              "nodeType": "Block",
              "src": "7667:44:56",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49975,
                      "name": "StoreHook_NotImplemented",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44990,
                      "src": "7680:24:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 49976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7680:26:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49977,
                  "nodeType": "RevertStatement",
                  "src": "7673:33:56"
                }
              ]
            },
            "baseFunctions": [
              45126
            ],
            "documentation": {
              "id": 49963,
              "nodeType": "StructuredDocumentation",
              "src": "7194:354:56",
              "text": " @notice Hook that runs after deleting a record.\n @dev This function should be overridden to provide custom logic.\n @param tableId The ID of the table where the record is to be deleted.\n @param keyTuple An array representing the composite key for the record.\n @param fieldLayout The layout of the field, see FieldLayout.sol."
            },
            "functionSelector": "83b5c95b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onAfterDeleteRecord",
            "nameLocation": "7560:19:56",
            "parameters": {
              "id": 49973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49966,
                  "mutability": "mutable",
                  "name": "tableId",
                  "nameLocation": "7591:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49979,
                  "src": "7580:18:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_ResourceId_$46221",
                    "typeString": "ResourceId"
                  },
                  "typeName": {
                    "id": 49965,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49964,
                      "name": "ResourceId",
                      "nameLocations": [
                        "7580:10:56"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 46221,
                      "src": "7580:10:56"
                    },
                    "referencedDeclaration": 46221,
                    "src": "7580:10:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_ResourceId_$46221",
                      "typeString": "ResourceId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49969,
                  "mutability": "mutable",
                  "name": "keyTuple",
                  "nameLocation": "7617:8:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49979,
                  "src": "7600:25:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 49967,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "7600:7:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 49968,
                    "nodeType": "ArrayTypeName",
                    "src": "7600:9:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49972,
                  "mutability": "mutable",
                  "name": "fieldLayout",
                  "nameLocation": "7639:11:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 49979,
                  "src": "7627:23:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                    "typeString": "FieldLayout"
                  },
                  "typeName": {
                    "id": 49971,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49970,
                      "name": "FieldLayout",
                      "nameLocations": [
                        "7627:11:56"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44140,
                      "src": "7627:11:56"
                    },
                    "referencedDeclaration": 44140,
                    "src": "7627:11:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_FieldLayout_$44140",
                      "typeString": "FieldLayout"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7579:72:56"
            },
            "returnParameters": {
              "id": 49974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7667:0:56"
            },
            "scope": 49980,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 49793,
              "name": "IStoreHook",
              "nameLocations": [
                "640:10:56"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45127,
              "src": "640:10:56"
            },
            "id": 49794,
            "nodeType": "InheritanceSpecifier",
            "src": "640:10:56"
          }
        ],
        "canonicalName": "StoreHook",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 49792,
          "nodeType": "StructuredDocumentation",
          "src": "334:274:56",
          "text": " @title Store Hook Contract\n @notice This abstract contract provides hooks for the storage operations.\n @dev Implementers should override the hook functions to provide custom logic.\n If any hooks are activated without overriding these functions, they revert."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          49980,
          45127,
          44772
        ],
        "name": "StoreHook",
        "nameLocation": "627:9:56",
        "scope": 49981,
        "usedErrors": [
          44990
        ],
        "usedEvents": []
      }
    ],
    "license": "MIT"
  },
  "id": 56
}