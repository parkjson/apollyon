import{a as S}from"./chunk-7WIPV3R3.js";import{a as p}from"./chunk-UPQEB2HW.js";import G from"path";import{parse as j,visit as b}from"@solidity-parser/parser";function re(r,t){let n=j(r),i=!1,s=[],o=[],a=[];if(b(n,{ContractDefinition({name:y}){y===t&&(i=!0)},FunctionDefinition({name:y,visibility:T,parameters:c,stateMutability:R,returnParameters:g,isConstructor:F,isFallback:k,isReceiveEther:L},u){if(u!==void 0&&u.type==="ContractDefinition"&&u.name===t)try{if(F||k||L)return;if(T==="default")throw new p("Visibility is not specified");if(T==="external"||T==="public"){o.push({name:y===null?"":y,parameters:c.map(l),stateMutability:R||"",returnParameters:g===null?[]:g.map(l)});for(let{typeName:I}of c.concat(g??[])){let W=m(I);s=s.concat(N(n,W))}}}catch(I){throw I instanceof p&&(I.message=`Function "${y}" in contract "${t}": ${I.message}`),I}},CustomErrorDefinition({name:y,parameters:T}){a.push({name:y===null?"":y,parameters:T.map(l)});for(let c of T){let R=m(c.typeName);s=s.concat(N(n,R))}}}),!i)throw new p(`Contract not found: ${t}`);return{functions:o,errors:a,symbolImports:s}}function l({name:r,typeName:t,storageLocation:n}){let i="",{name:s,stateMutability:o}=_(t);return i+=s,o!==null&&(i+=` ${o}`),n!==null&&(i+=` ${n}`),r!==null&&(i+=` ${r}`),i}function _(r){if(r===null)return{name:"",stateMutability:null};if(r.type==="ElementaryTypeName")return{name:r.name,stateMutability:r.stateMutability};if(r.type==="UserDefinedTypeName")return{name:r.namePath,stateMutability:null};if(r.type==="ArrayTypeName"){let t="";r.length?.type==="NumberLiteral"?t=r.length.number:r.length?.type==="Identifier"&&(t=r.length.name);let{name:n,stateMutability:i}=_(r.baseTypeName);return{name:`${n}[${t}]`,stateMutability:i}}else throw new p(`Invalid typeName.type ${r.type}`)}function m(r){if(r?.type==="UserDefinedTypeName")return[r.namePath.split(".")[0]];if(r?.type==="ArrayTypeName"){let t=m(r.baseTypeName);if(r.length?.type==="Identifier"){let n=r.length.name;t.push(n.split(".")[0])}return t}else return[]}function N(r,t){let n=[];for(let i of t){let s;if(b(r,{ImportDirective({path:o,symbolAliases:a}){if(a)for(let y of a){let T=y[1]||y[0];if(i===T){s={symbol:y[0],path:o};return}}}}),s)n.push(s);else throw new p(`Symbol "${i}" has no explicit import`)}return n}import{parse as O,visit as H}from"@solidity-parser/parser";function h(r,t,n){let i=O(r),s=n.at(0)===".",o={};return H(i,{TypeDefinition({name:a,definition:y},T){if(y.name.includes("fixed"))throw new p("Fixed point numbers are not supported by MUD");if(t.includes(a)){if(a in o)throw new p(`File has multiple user types with the same name: ${a}`);T?.type==="ContractDefinition"?o[a]={typeId:`${T.name}.${a}`,internalTypeId:y.name,importSymbol:T.name,fromPath:n,isRelativePath:s}:o[a]={typeId:a,internalTypeId:y.name,importSymbol:a,fromPath:n,isRelativePath:s}}}}),o}import f from"prettier";import K from"prettier-plugin-solidity";async function U(r,t){let n;t&&(n=await f.resolveConfig(t));try{return f.format(r,{plugins:[K],parser:"solidity-parse",printWidth:120,semi:!0,tabWidth:2,useTabs:!1,bracketSpacing:!0,...n})}catch(i){let s;return i instanceof Error?s=i.message:s=i,console.log(`Error during output formatting: ${s}`),r}}async function E(r){return f.format(r,{parser:"typescript"})}import{mkdir as x,writeFile as $}from"fs/promises";import{dirname as w}from"path";var d=S.extend("codegen");async function ue(r,t,n){let i=await U(r);await x(w(t),{recursive:!0}),await $(t,i),d(`${n}: ${t}`)}async function le(r,t,n){let i=await E(r);await x(w(t),{recursive:!0}),await $(t,i),d(`${n}: ${t}`)}import{readFileSync as v}from"fs";import V from"path";function Ne(r,t,n){let i={};for(let[o,{filePath:a}]of Object.entries(r))a in i||(i[a]=[]),i[a].push(o);let s={};for(let[o,a]of Object.entries(i)){let{filePath:y,data:T}=z(t,o,n),c=h(T,a,y);for(let[R,g]of Object.entries(c))if(g.internalTypeId!==r[R].internalType)throw new p(`User type "${R}" has internal type "${g.internalTypeId}" but config specifies "${r[R].internalType}"`);s=Object.assign(s,c)}return s}function z(r,t,n){if(t.at(0)===".")return{filePath:"./"+V.relative(r,t),data:v(t,"utf8")};{let i=t;for(let[s,o]of n)if(i.includes(s)){i=i.replace(s,o);break}return{filePath:t,data:v(i,"utf8")}}}function B(r){return r.replace(/\\/g,"/")}var D=`// SPDX-License-Identifier: MIT
pragma solidity >=0.8.21;

/* Autogenerated file. Do not edit manually. */`;function Y(r,t){return M("",r,t)}function A(r){let t=r.filter(n=>n!==void 0&&n!=="");return M(",",t,n=>n)}function Ce({staticResourceData:r,keyTuple:t}){let n=r?"":"_tableId",i=r?"":"ResourceId _tableId",s=A(t.map(({name:y})=>y)),o=A(t.map(({name:y,typeWithLocation:T})=>`${T} ${y}`)),a=`
    bytes32[] memory _keyTuple = new bytes32[](${t.length});
    ${Y(t,(y,T)=>`_keyTuple[${T}] = ${X(y.name,y)};`)}
  `;return{_tableId:n,_typedTableId:i,_keyArgs:s,_typedKeyArgs:o,_keyTupleDefinition:a}}function P(r,t){return B("./"+G.relative("./"+t,"./"+r))}function Me(r){return C(r.map(t=>"path"in t?t:{symbol:t.symbol,path:P(t.fromPath,t.usedInPath)}))}function Fe(r){return C(r.map(({symbol:t,fromPath:n,usedInPath:i})=>({symbol:t,path:P(n,i)})))}function C(r){let t=new Map;for(let{symbol:i,path:s}of r)t.has(s)||t.set(s,new Set),t.get(s)?.add(i);let n=[];for(let[i,s]of t){let o=[...s].join(", ");n.push(`import { ${o} } from "${B(i)}";`)}return n.join(`
`)}function ke(r,t){let n="";return n+=t(void 0,"StoreSwitch","",void 0,""),n+=t(void 0,"StoreCore","",void 0,"_",!0),r&&(n+=`
`+t("IStore _store","_store"," (using the specified store)","_store","")),n}function Le(r,t,n){let i=`${t[0].toUpperCase()}${t.slice(1)}`,s="";return s+=n(i),r&&(s+=`
`+n("")),s}function We({namespace:r,name:t,offchainOnly:n,tableIdName:i}){let s=`
    ResourceId.wrap(
      bytes32(
        abi.encodePacked(
          ${n?"RESOURCE_OFFCHAIN_TABLE":"RESOURCE_TABLE"},
          bytes14("${r}"),
          bytes16("${t}")
        )
      )
    )
  `,o=`
    ResourceId constant _tableId = ${s};
    ResourceId constant ${i} = _tableId;
  `;return{hardcodedTableId:s,tableIdDefinition:o}}function X(r,{typeUnwrap:t,internalTypeId:n}){let i=t.length?`${t}(${r})`:r;if(n==="bytes32")return i;if(n.match(/^bytes\d{1,2}$/))return`bytes32(${i})`;if(n.match(/^uint\d{1,3}$/))return`bytes32(uint256(${i}))`;if(n.match(/^int\d{1,3}$/))return`bytes32(uint256(int256(${i})))`;if(n==="address")return`bytes32(uint256(uint160(${i})))`;if(n==="bool")return`_boolToBytes32(${i})`;throw new Error(`Unknown value type id ${n}`)}function q(r){return r.internalTypeId.match(/^bytes\d{1,2}$/)!==null}function je(r){return q(r)?0:256-r.staticByteLength*8}function M(r,t,n){return t.map((i,s)=>n(i,s)+(s===t.length-1?"":r)).join(`
`)}function Ke(r){let t=D;return t+=Y(r,({name:n,memberNames:i})=>`
    enum ${n} {
      ${A(i)}
    }
  `),t}function ze(r){let{fields:t,keyTuple:n}=r,i="";for(let s of J([...t,...n]))i+=s;return t.some(({internalTypeId:s})=>s.match("bool"))&&(i+=`
    /**
     * @notice Cast a value to a bool.
     * @dev Boolean values are encoded as uint8 (1 = true, 0 = false), but Solidity doesn't allow casting between uint8 and bool.
     * @param value The uint8 value to convert.
     * @return result The boolean value.
     */
    function _toBool(uint8 value) pure returns (bool result) {
      assembly {
        result := value
      }
    }
    `),n.some(({internalTypeId:s})=>s.match("bool"))&&(i+=`
    /**
     * @notice Cast a bool to a bytes32.
     * @dev The boolean value is casted to a bytes32 value with 0 or 1 at the least significant bit.
     */
    function _boolToBytes32(bool value) pure returns (bytes32 result) {
      assembly {
        result := value
      }
    }
    `),i}function J(r){let t=new Map,n=new Map;for(let{typeWrappingData:i,typeWrap:s,typeUnwrap:o,internalTypeId:a}of r){if(!i)continue;let{kind:y}=i;if(y==="staticArray"){let{elementType:T,staticLength:c}=i;t.set(s,Q(s,T,c,a)),n.set(o,Z(o,T,c,a))}}return[...t.values(),...n.values()]}function Q(r,t,n,i){return`
    /**
     * @notice Cast a dynamic array to a static array.
     * @dev In memory static arrays are just dynamic arrays without the 32 length bytes,
     * so this function moves the pointer to the first element of the dynamic array.
     * If the length of the dynamic array is smaller than the static length,
     * the function returns an uninitialized array to avoid memory corruption.
     * @param _value The dynamic array to cast.
     * @return _result The static array.
     */
    function ${r}(
      ${i} memory _value
    ) pure returns (
      ${t}[${n}] memory _result
    ) {
      if (_value.length < ${n}) {
        // return an uninitialized array if the length is smaller than the fixed length to avoid memory corruption
        return _result;
      } else {
        // in memory static arrays are just dynamic arrays without the 32 length bytes
        // (without the length check this could lead to memory corruption)
        assembly {
          _result := add(_value, 0x20)
        }
      }
    }
  `}function Z(r,t,n,i){let s=n*32;return`
    /**
     * @notice Copy a static array to a dynamic array.
     * @dev Static arrays don't have a length prefix, so this function copies the memory from the static array to a new dynamic array.
     * @param _value The static array to copy.
     * @return _result The dynamic array.
     */ 
    function ${r}(
      ${t}[${n}] memory _value
    ) pure returns (
      ${i} memory _result
    ) {
      _result = new ${i}(${n});
      uint256 fromPointer;
      uint256 toPointer;
      assembly {
        fromPointer := _value
        toPointer := add(_result, 0x20)
      }
      Memory.copy(fromPointer, toPointer, ${s});
    }
  `}import{SchemaType as e}from"@latticexyz/schema-type/deprecated";var tt={[e.UINT8]:"RecsType.Number",[e.UINT16]:"RecsType.Number",[e.UINT24]:"RecsType.Number",[e.UINT32]:"RecsType.Number",[e.UINT40]:"RecsType.Number",[e.UINT48]:"RecsType.Number",[e.UINT56]:"RecsType.BigInt",[e.UINT64]:"RecsType.BigInt",[e.UINT72]:"RecsType.BigInt",[e.UINT80]:"RecsType.BigInt",[e.UINT88]:"RecsType.BigInt",[e.UINT96]:"RecsType.BigInt",[e.UINT104]:"RecsType.BigInt",[e.UINT112]:"RecsType.BigInt",[e.UINT120]:"RecsType.BigInt",[e.UINT128]:"RecsType.BigInt",[e.UINT136]:"RecsType.BigInt",[e.UINT144]:"RecsType.BigInt",[e.UINT152]:"RecsType.BigInt",[e.UINT160]:"RecsType.BigInt",[e.UINT168]:"RecsType.BigInt",[e.UINT176]:"RecsType.BigInt",[e.UINT184]:"RecsType.BigInt",[e.UINT192]:"RecsType.BigInt",[e.UINT200]:"RecsType.BigInt",[e.UINT208]:"RecsType.BigInt",[e.UINT216]:"RecsType.BigInt",[e.UINT224]:"RecsType.BigInt",[e.UINT232]:"RecsType.BigInt",[e.UINT240]:"RecsType.BigInt",[e.UINT248]:"RecsType.BigInt",[e.UINT256]:"RecsType.BigInt",[e.INT8]:"RecsType.Number",[e.INT16]:"RecsType.Number",[e.INT24]:"RecsType.Number",[e.INT32]:"RecsType.Number",[e.INT40]:"RecsType.Number",[e.INT48]:"RecsType.Number",[e.INT56]:"RecsType.BigInt",[e.INT64]:"RecsType.BigInt",[e.INT72]:"RecsType.BigInt",[e.INT80]:"RecsType.BigInt",[e.INT88]:"RecsType.BigInt",[e.INT96]:"RecsType.BigInt",[e.INT104]:"RecsType.BigInt",[e.INT112]:"RecsType.BigInt",[e.INT120]:"RecsType.BigInt",[e.INT128]:"RecsType.BigInt",[e.INT136]:"RecsType.BigInt",[e.INT144]:"RecsType.BigInt",[e.INT152]:"RecsType.BigInt",[e.INT160]:"RecsType.BigInt",[e.INT168]:"RecsType.BigInt",[e.INT176]:"RecsType.BigInt",[e.INT184]:"RecsType.BigInt",[e.INT192]:"RecsType.BigInt",[e.INT200]:"RecsType.BigInt",[e.INT208]:"RecsType.BigInt",[e.INT216]:"RecsType.BigInt",[e.INT224]:"RecsType.BigInt",[e.INT232]:"RecsType.BigInt",[e.INT240]:"RecsType.BigInt",[e.INT248]:"RecsType.BigInt",[e.INT256]:"RecsType.BigInt",[e.BYTES1]:"RecsType.String",[e.BYTES2]:"RecsType.String",[e.BYTES3]:"RecsType.String",[e.BYTES4]:"RecsType.String",[e.BYTES5]:"RecsType.String",[e.BYTES6]:"RecsType.String",[e.BYTES7]:"RecsType.String",[e.BYTES8]:"RecsType.String",[e.BYTES9]:"RecsType.String",[e.BYTES10]:"RecsType.String",[e.BYTES11]:"RecsType.String",[e.BYTES12]:"RecsType.String",[e.BYTES13]:"RecsType.String",[e.BYTES14]:"RecsType.String",[e.BYTES15]:"RecsType.String",[e.BYTES16]:"RecsType.String",[e.BYTES17]:"RecsType.String",[e.BYTES18]:"RecsType.String",[e.BYTES19]:"RecsType.String",[e.BYTES20]:"RecsType.String",[e.BYTES21]:"RecsType.String",[e.BYTES22]:"RecsType.String",[e.BYTES23]:"RecsType.String",[e.BYTES24]:"RecsType.String",[e.BYTES25]:"RecsType.String",[e.BYTES26]:"RecsType.String",[e.BYTES27]:"RecsType.String",[e.BYTES28]:"RecsType.String",[e.BYTES29]:"RecsType.String",[e.BYTES30]:"RecsType.String",[e.BYTES31]:"RecsType.String",[e.BYTES32]:"RecsType.String",[e.BOOL]:"RecsType.Boolean",[e.ADDRESS]:"RecsType.String",[e.UINT8_ARRAY]:"RecsType.NumberArray",[e.UINT16_ARRAY]:"RecsType.NumberArray",[e.UINT24_ARRAY]:"RecsType.NumberArray",[e.UINT32_ARRAY]:"RecsType.NumberArray",[e.UINT40_ARRAY]:"RecsType.NumberArray",[e.UINT48_ARRAY]:"RecsType.NumberArray",[e.UINT56_ARRAY]:"RecsType.BigIntArray",[e.UINT64_ARRAY]:"RecsType.BigIntArray",[e.UINT72_ARRAY]:"RecsType.BigIntArray",[e.UINT80_ARRAY]:"RecsType.BigIntArray",[e.UINT88_ARRAY]:"RecsType.BigIntArray",[e.UINT96_ARRAY]:"RecsType.BigIntArray",[e.UINT104_ARRAY]:"RecsType.BigIntArray",[e.UINT112_ARRAY]:"RecsType.BigIntArray",[e.UINT120_ARRAY]:"RecsType.BigIntArray",[e.UINT128_ARRAY]:"RecsType.BigIntArray",[e.UINT136_ARRAY]:"RecsType.BigIntArray",[e.UINT144_ARRAY]:"RecsType.BigIntArray",[e.UINT152_ARRAY]:"RecsType.BigIntArray",[e.UINT160_ARRAY]:"RecsType.BigIntArray",[e.UINT168_ARRAY]:"RecsType.BigIntArray",[e.UINT176_ARRAY]:"RecsType.BigIntArray",[e.UINT184_ARRAY]:"RecsType.BigIntArray",[e.UINT192_ARRAY]:"RecsType.BigIntArray",[e.UINT200_ARRAY]:"RecsType.BigIntArray",[e.UINT208_ARRAY]:"RecsType.BigIntArray",[e.UINT216_ARRAY]:"RecsType.BigIntArray",[e.UINT224_ARRAY]:"RecsType.BigIntArray",[e.UINT232_ARRAY]:"RecsType.BigIntArray",[e.UINT240_ARRAY]:"RecsType.BigIntArray",[e.UINT248_ARRAY]:"RecsType.BigIntArray",[e.UINT256_ARRAY]:"RecsType.BigIntArray",[e.INT8_ARRAY]:"RecsType.NumberArray",[e.INT16_ARRAY]:"RecsType.NumberArray",[e.INT24_ARRAY]:"RecsType.NumberArray",[e.INT32_ARRAY]:"RecsType.NumberArray",[e.INT40_ARRAY]:"RecsType.NumberArray",[e.INT48_ARRAY]:"RecsType.NumberArray",[e.INT56_ARRAY]:"RecsType.BigIntArray",[e.INT64_ARRAY]:"RecsType.BigIntArray",[e.INT72_ARRAY]:"RecsType.BigIntArray",[e.INT80_ARRAY]:"RecsType.BigIntArray",[e.INT88_ARRAY]:"RecsType.BigIntArray",[e.INT96_ARRAY]:"RecsType.BigIntArray",[e.INT104_ARRAY]:"RecsType.BigIntArray",[e.INT112_ARRAY]:"RecsType.BigIntArray",[e.INT120_ARRAY]:"RecsType.BigIntArray",[e.INT128_ARRAY]:"RecsType.BigIntArray",[e.INT136_ARRAY]:"RecsType.BigIntArray",[e.INT144_ARRAY]:"RecsType.BigIntArray",[e.INT152_ARRAY]:"RecsType.BigIntArray",[e.INT160_ARRAY]:"RecsType.BigIntArray",[e.INT168_ARRAY]:"RecsType.BigIntArray",[e.INT176_ARRAY]:"RecsType.BigIntArray",[e.INT184_ARRAY]:"RecsType.BigIntArray",[e.INT192_ARRAY]:"RecsType.BigIntArray",[e.INT200_ARRAY]:"RecsType.BigIntArray",[e.INT208_ARRAY]:"RecsType.BigIntArray",[e.INT216_ARRAY]:"RecsType.BigIntArray",[e.INT224_ARRAY]:"RecsType.BigIntArray",[e.INT232_ARRAY]:"RecsType.BigIntArray",[e.INT240_ARRAY]:"RecsType.BigIntArray",[e.INT248_ARRAY]:"RecsType.BigIntArray",[e.INT256_ARRAY]:"RecsType.BigIntArray",[e.BYTES1_ARRAY]:"RecsType.BigIntArray",[e.BYTES2_ARRAY]:"RecsType.BigIntArray",[e.BYTES3_ARRAY]:"RecsType.BigIntArray",[e.BYTES4_ARRAY]:"RecsType.BigIntArray",[e.BYTES5_ARRAY]:"RecsType.BigIntArray",[e.BYTES6_ARRAY]:"RecsType.BigIntArray",[e.BYTES7_ARRAY]:"RecsType.BigIntArray",[e.BYTES8_ARRAY]:"RecsType.BigIntArray",[e.BYTES9_ARRAY]:"RecsType.BigIntArray",[e.BYTES10_ARRAY]:"RecsType.BigIntArray",[e.BYTES11_ARRAY]:"RecsType.BigIntArray",[e.BYTES12_ARRAY]:"RecsType.BigIntArray",[e.BYTES13_ARRAY]:"RecsType.BigIntArray",[e.BYTES14_ARRAY]:"RecsType.BigIntArray",[e.BYTES15_ARRAY]:"RecsType.BigIntArray",[e.BYTES16_ARRAY]:"RecsType.BigIntArray",[e.BYTES17_ARRAY]:"RecsType.BigIntArray",[e.BYTES18_ARRAY]:"RecsType.BigIntArray",[e.BYTES19_ARRAY]:"RecsType.BigIntArray",[e.BYTES20_ARRAY]:"RecsType.BigIntArray",[e.BYTES21_ARRAY]:"RecsType.BigIntArray",[e.BYTES22_ARRAY]:"RecsType.BigIntArray",[e.BYTES23_ARRAY]:"RecsType.BigIntArray",[e.BYTES24_ARRAY]:"RecsType.BigIntArray",[e.BYTES25_ARRAY]:"RecsType.BigIntArray",[e.BYTES26_ARRAY]:"RecsType.BigIntArray",[e.BYTES27_ARRAY]:"RecsType.BigIntArray",[e.BYTES28_ARRAY]:"RecsType.BigIntArray",[e.BYTES29_ARRAY]:"RecsType.BigIntArray",[e.BYTES30_ARRAY]:"RecsType.BigIntArray",[e.BYTES31_ARRAY]:"RecsType.BigIntArray",[e.BYTES32_ARRAY]:"RecsType.BigIntArray",[e.BOOL_ARRAY]:"RecsType.T",[e.ADDRESS_ARRAY]:"RecsType.StringArray",[e.BYTES]:"RecsType.String",[e.STRING]:"RecsType.String"};export{re as contractToInterface,h as extractUserTypes,ue as formatAndWriteSolidity,le as formatAndWriteTypescript,U as formatSolidity,E as formatTypescript,je as getLeftPaddingBits,q as isLeftAligned,Ne as loadAndExtractUserTypes,B as posixPath,C as renderAbsoluteImports,A as renderArguments,Ce as renderCommonData,Ke as renderEnums,Me as renderImports,Y as renderList,Fe as renderRelativeImports,We as renderTableId,ze as renderTypeHelpers,X as renderValueTypeToBytes32,Le as renderWithFieldSuffix,ke as renderWithStore,D as renderedSolidityHeader,tt as schemaTypesToRecsTypeStrings,P as solidityRelativeImportPath};
//# sourceMappingURL=codegen.js.map