import{a as H,b as $}from"../chunk-4J5NR5O4.js";import{f as k,j as O}from"../chunk-7YRL77Z6.js";import"../chunk-5D4GTPIW.js";import{decodeAbiParameters as Q}from"viem";import{sliceHex as F,size as G,isHex as J}from"viem";function K(e){if(!J(e))throw new Error(`entity ${e} is not a hex string`);let r=G(e);if(r%32!==0)throw new Error(`entity length ${r} is not a multiple of 32 bytes`);return new Array(r/32).fill(0).map((i,o)=>F(e,o*32,(o+1)*32))}function dt(e,r){let i=K(r);if(i.length!==Object.keys(e).length)throw new Error(`entity key tuple length ${i.length} does not match key schema length ${Object.keys(e).length}`);return Object.fromEntries(Object.entries(e).map(([o,T],S)=>[o,Q([{type:T}],i[S])[0]]))}import{encodeAbiParameters as Y}from"viem";import{concatHex as X}from"viem";function u(e){return X(e)}function w(e,r){if(Object.keys(e).length!==Object.keys(r).length)throw new Error(`key length ${Object.keys(r).length} does not match key schema length ${Object.keys(e).length}`);return u(Object.entries(e).map(([i,o])=>Y([{type:o}],[r[i]])))}function Ct(e){return e.metadata?.componentName!=null&&e.metadata?.tableName!=null&&e.metadata?.keySchema!=null&&e.metadata?.valueSchema!=null}import{resolveConfig as U}from"@latticexyz/store";var l=k.extend("recs");import{getComponentValue as x,hasComponent as et,removeComponent as nt,setComponent as h}from"@latticexyz/recs";import{defineComponent as P,Type as d}from"@latticexyz/recs";function j(e){return{RegisteredTables:P(e,{table:d.T},{metadata:{componentName:"RegisteredTables"}}),SyncProgress:P(e,{step:d.String,message:d.String,percentage:d.Number,latestBlockNumber:d.BigInt,lastBlockNumberProcessed:d.BigInt},{metadata:{componentName:"SyncProgress"}})}}import{stringToHex as L}from"viem";function R(e){return w({address:"address",namespace:"bytes16",name:"bytes16"},{address:e.address,namespace:L(e.namespace,{size:16}),name:L(e.name,{size:16})})}import{hexToResource as rt,spliceHex as z}from"@latticexyz/common";import{decodeValueArgs as v}from"@latticexyz/protocol-parser";import{size as it}from"viem";var f=u([]);import at from"@latticexyz/store/mud.config";import ot from"@latticexyz/world/mud.config";import{Type as N,defineComponent as Z}from"@latticexyz/recs";import{Type as t}from"@latticexyz/recs";var W={uint8:t.Number,uint16:t.Number,uint24:t.Number,uint32:t.Number,uint40:t.Number,uint48:t.Number,uint56:t.BigInt,uint64:t.BigInt,uint72:t.BigInt,uint80:t.BigInt,uint88:t.BigInt,uint96:t.BigInt,uint104:t.BigInt,uint112:t.BigInt,uint120:t.BigInt,uint128:t.BigInt,uint136:t.BigInt,uint144:t.BigInt,uint152:t.BigInt,uint160:t.BigInt,uint168:t.BigInt,uint176:t.BigInt,uint184:t.BigInt,uint192:t.BigInt,uint200:t.BigInt,uint208:t.BigInt,uint216:t.BigInt,uint224:t.BigInt,uint232:t.BigInt,uint240:t.BigInt,uint248:t.BigInt,uint256:t.BigInt,int8:t.Number,int16:t.Number,int24:t.Number,int32:t.Number,int40:t.Number,int48:t.Number,int56:t.BigInt,int64:t.BigInt,int72:t.BigInt,int80:t.BigInt,int88:t.BigInt,int96:t.BigInt,int104:t.BigInt,int112:t.BigInt,int120:t.BigInt,int128:t.BigInt,int136:t.BigInt,int144:t.BigInt,int152:t.BigInt,int160:t.BigInt,int168:t.BigInt,int176:t.BigInt,int184:t.BigInt,int192:t.BigInt,int200:t.BigInt,int208:t.BigInt,int216:t.BigInt,int224:t.BigInt,int232:t.BigInt,int240:t.BigInt,int248:t.BigInt,int256:t.BigInt,bytes1:t.String,bytes2:t.String,bytes3:t.String,bytes4:t.String,bytes5:t.String,bytes6:t.String,bytes7:t.String,bytes8:t.String,bytes9:t.String,bytes10:t.String,bytes11:t.String,bytes12:t.String,bytes13:t.String,bytes14:t.String,bytes15:t.String,bytes16:t.String,bytes17:t.String,bytes18:t.String,bytes19:t.String,bytes20:t.String,bytes21:t.String,bytes22:t.String,bytes23:t.String,bytes24:t.String,bytes25:t.String,bytes26:t.String,bytes27:t.String,bytes28:t.String,bytes29:t.String,bytes30:t.String,bytes31:t.String,bytes32:t.String,bool:t.Boolean,address:t.String,"uint8[]":t.NumberArray,"uint16[]":t.NumberArray,"uint24[]":t.NumberArray,"uint32[]":t.NumberArray,"uint40[]":t.NumberArray,"uint48[]":t.NumberArray,"uint56[]":t.BigIntArray,"uint64[]":t.BigIntArray,"uint72[]":t.BigIntArray,"uint80[]":t.BigIntArray,"uint88[]":t.BigIntArray,"uint96[]":t.BigIntArray,"uint104[]":t.BigIntArray,"uint112[]":t.BigIntArray,"uint120[]":t.BigIntArray,"uint128[]":t.BigIntArray,"uint136[]":t.BigIntArray,"uint144[]":t.BigIntArray,"uint152[]":t.BigIntArray,"uint160[]":t.BigIntArray,"uint168[]":t.BigIntArray,"uint176[]":t.BigIntArray,"uint184[]":t.BigIntArray,"uint192[]":t.BigIntArray,"uint200[]":t.BigIntArray,"uint208[]":t.BigIntArray,"uint216[]":t.BigIntArray,"uint224[]":t.BigIntArray,"uint232[]":t.BigIntArray,"uint240[]":t.BigIntArray,"uint248[]":t.BigIntArray,"uint256[]":t.BigIntArray,"int8[]":t.NumberArray,"int16[]":t.NumberArray,"int24[]":t.NumberArray,"int32[]":t.NumberArray,"int40[]":t.NumberArray,"int48[]":t.NumberArray,"int56[]":t.BigIntArray,"int64[]":t.BigIntArray,"int72[]":t.BigIntArray,"int80[]":t.BigIntArray,"int88[]":t.BigIntArray,"int96[]":t.BigIntArray,"int104[]":t.BigIntArray,"int112[]":t.BigIntArray,"int120[]":t.BigIntArray,"int128[]":t.BigIntArray,"int136[]":t.BigIntArray,"int144[]":t.BigIntArray,"int152[]":t.BigIntArray,"int160[]":t.BigIntArray,"int168[]":t.BigIntArray,"int176[]":t.BigIntArray,"int184[]":t.BigIntArray,"int192[]":t.BigIntArray,"int200[]":t.BigIntArray,"int208[]":t.BigIntArray,"int216[]":t.BigIntArray,"int224[]":t.BigIntArray,"int232[]":t.BigIntArray,"int240[]":t.BigIntArray,"int248[]":t.BigIntArray,"int256[]":t.BigIntArray,"bytes1[]":t.StringArray,"bytes2[]":t.StringArray,"bytes3[]":t.StringArray,"bytes4[]":t.StringArray,"bytes5[]":t.StringArray,"bytes6[]":t.StringArray,"bytes7[]":t.StringArray,"bytes8[]":t.StringArray,"bytes9[]":t.StringArray,"bytes10[]":t.StringArray,"bytes11[]":t.StringArray,"bytes12[]":t.StringArray,"bytes13[]":t.StringArray,"bytes14[]":t.StringArray,"bytes15[]":t.StringArray,"bytes16[]":t.StringArray,"bytes17[]":t.StringArray,"bytes18[]":t.StringArray,"bytes19[]":t.StringArray,"bytes20[]":t.StringArray,"bytes21[]":t.StringArray,"bytes22[]":t.StringArray,"bytes23[]":t.StringArray,"bytes24[]":t.StringArray,"bytes25[]":t.StringArray,"bytes26[]":t.StringArray,"bytes27[]":t.StringArray,"bytes28[]":t.StringArray,"bytes29[]":t.StringArray,"bytes30[]":t.StringArray,"bytes31[]":t.StringArray,"bytes32[]":t.StringArray,"bool[]":t.T,"address[]":t.StringArray,bytes:t.String,string:t.String};import{mapObject as V}from"@latticexyz/common/utils";function M(e,r){return Z(e,{...Object.fromEntries(Object.entries(r.valueSchema).map(([i,{type:o}])=>[i,W[o]])),__staticData:N.OptionalString,__encodedLengths:N.OptionalString,__dynamicData:N.OptionalString},{id:r.tableId,metadata:{componentName:r.name,tableName:`${r.namespace}:${r.name}`,keySchema:V(r.keySchema,({type:i})=>i),valueSchema:V(r.valueSchema,({type:i})=>i)}})}import{mapObject as tt}from"@latticexyz/common/utils";function B(e,r){return tt(r,i=>M(e,i))}var st=U(at).tables,mt=U(ot).tables;function q({world:e,tables:r,shouldSkipUpdateStream:i}){e.registerEntity({id:f});let o={...B(e,r),...B(e,st),...B(e,mt),...j(e)};async function T({logs:S}){let C=S.filter(H).map($);for(let n of C){let y=R(n);et(o.RegisteredTables,y)?console.warn("table already registered, ignoring",{newTable:n,existingTable:x(o.RegisteredTables,y)?.table}):h(o.RegisteredTables,y,{table:n},{skipUpdateStream:i?.()})}for(let n of S){let{namespace:y,name:A}=rt(n.args.tableId),a=x(o.RegisteredTables,R({address:n.address,namespace:y,name:A}))?.table;if(!a){l(`skipping update for unknown table: ${y}:${A} at ${n.address}`);continue}let g=e.components.find(s=>s.id===a.tableId);if(!g){l(`skipping update for unknown component: ${a.tableId} (${a.namespace}:${a.name}). Available components: ${Object.keys(o)}`);continue}let m=u(n.args.keyTuple);if(n.eventName==="Store_SetRecord"){let s=v(a.valueSchema,n.args);l("setting component",{namespace:a.namespace,name:a.name,entity:m,value:s}),h(g,m,{...s,__staticData:n.args.staticData,__encodedLengths:n.args.encodedLengths,__dynamicData:n.args.dynamicData},{skipUpdateStream:i?.()})}else if(n.eventName==="Store_SpliceStaticData"){let s=x(g,m),p=s?.__staticData??"0x",c=z(p,n.args.start,it(n.args.data),n.args.data),b=v(a.valueSchema,{staticData:c,encodedLengths:s?.__encodedLengths??"0x",dynamicData:s?.__dynamicData??"0x"});l("setting component via splice static",{namespace:a.namespace,name:a.name,entity:m,previousStaticData:p,newStaticData:c,previousValue:s,newValue:b}),h(g,m,{...b,__staticData:c},{skipUpdateStream:i?.()})}else if(n.eventName==="Store_SpliceDynamicData"){let s=x(g,m),p=s?.__dynamicData??"0x",c=z(p,n.args.start,n.args.deleteCount,n.args.data),b=v(a.valueSchema,{staticData:s?.__staticData??"0x",encodedLengths:n.args.encodedLengths,dynamicData:c});l("setting component via splice dynamic",{namespace:a.namespace,name:a.name,entity:m,previousDynamicData:p,newDynamicData:c,previousValue:s,newValue:b}),h(g,m,{...b,__encodedLengths:n.args.encodedLengths,__dynamicData:c},{skipUpdateStream:i?.()})}else n.eventName==="Store_DeleteRecord"&&(l("deleting component",{namespace:a.namespace,name:a.name,entity:m}),nt(g,m,{skipUpdateStream:i?.()}))}}return{storageAdapter:T,components:o}}import{resolveConfig as gt}from"@latticexyz/store";import{getComponentValue as _,setComponent as yt}from"@latticexyz/recs";async function ke({world:e,config:r,tables:i,startSync:o=!0,...T}){let S={...gt(r).tables,...i},{storageAdapter:C,components:n}=q({world:e,tables:S,shouldSkipUpdateStream:()=>_(n.SyncProgress,f)?.step!=="live"}),y=await O({storageAdapter:C,config:r,...T,onProgress:({step:g,percentage:m,latestBlockNumber:s,lastBlockNumberProcessed:p,message:c})=>{if(_(n.SyncProgress,f)?.step!=="live"&&(yt(n.SyncProgress,f,{step:g,percentage:m,latestBlockNumber:s,lastBlockNumberProcessed:p,message:c}),g==="live"))for(let b of Object.values(n)){let I=b;for(let E of I.entities()){let D=_(I,E);I.update$.next({component:I,entity:E,value:[D,D]})}}}}),A=o?y.storedBlockLogs$.subscribe():null,a=()=>{A?.unsubscribe()};return e.registerDisposer(a),{...y,components:n,stopSync:a}}export{dt as decodeEntity,w as encodeEntity,K as entityToHexKeyTuple,u as hexKeyTupleToEntity,Ct as isStoreComponent,q as recsStorage,f as singletonEntity,ke as syncToRecs};
//# sourceMappingURL=index.js.map